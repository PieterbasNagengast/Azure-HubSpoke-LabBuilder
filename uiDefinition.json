{
	"$schema": "https://schema.management.azure.com/schemas/2021-09-09/uiFormDefinition.schema.json",
	"view": {
		"kind": "Form",
		"properties": {
			"title": "Hub & Spoke playground - LAB Builder",
			"steps": [
				{
					"name": "basics",
					"label": "Basics",
					"elements": [
						{
							"name": "resourceScope",
							"type": "Microsoft.Common.ResourceScope",
							"location": {
								"resourceTypes": []
							}
						},
						{
							"name": "AddressSpace",
							"type": "Microsoft.Common.TextBox",
							"label": "IP Address Space",
							"defaultValue": "172.16.0.0/16",
							"toolTip": "IP Address space used for VNETs in deployment. Only enter a /16 subnet. Default = 172.16.0.0/16",
							"constraints": {
								"required": false,
								"regex": "",
								"validationMessage": ""
							},
							"visible": true
						}
					]
				},
				{
					"name": "HubVNET",
					"label": "Hub VNET",
					"elements": [
						{
							"name": "deployHUB",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy Hub",
							"defaultValue": true,
							"toolTip": "Deploy Hub VNET",
							"constraints": {
								"required": false
							},
							"visible": true
						},
						{
							"name": "hubRgName",
							"type": "Microsoft.Common.TextBox",
							"label": "Hub Resource Group Name",
							"defaultValue": "rg-hub",
							"toolTip": "Use only allowed characters",
							"placeholder": "",
							"multiLine": false,
							"constraints": {
								"required": true,
								"validations": [
									{
										"regex": "^[a-zA-Z0-9_\\-\\.]+$",
										"message": "Only alphanumeric and numeric characters are allowed including symbols like: _ and . and -"
									}
								]
							},
							"visible": "[equals(steps('HubVNET').deployHUB,true)]"
						},
						{
							"name": "deployBastionInHub",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy Bastion In Hub",
							"defaultValue": false,
							"toolTip": "Deploy Bastion Host in Hub VNET",
							"constraints": {
								"required": false
							},
							"visible": "[equals(steps('HubVNET').deployHUB,true)]"
						},
						{
							"name": "deployGatewayInHub",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy Virtual Network Gateway In Hub",
							"defaultValue": false,
							"toolTip": "Deploy Virtual Network Gateway in Hub VNET",
							"constraints": {
								"required": false
							},
							"visible": "[equals(steps('HubVNET').deployHUB,true)]"
						},
						{
							"name": "deployFirewallInHub",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy Firewall In Hub",
							"defaultValue": false,
							"toolTip": "Deploy Azure Firewall in Hub VNET. includes deployment of custom route tables in Spokes and Hub VNETs",
							"constraints": {
								"required": false
							},
							"visible": "[equals(steps('HubVNET').deployHUB,true)]"
						},
						{
							"name": "AzureFirewallTier",
							"type": "Microsoft.Common.DropDown",
							"label": "Azure Firewall Tier",
							"defaultValue": "Standard",
							"toolTip": "Azure Firewall Tier: Standard or Premium",
							"constraints": {
								"required": false,
								"allowedValues": [
									{
										"label": "Standard",
										"value": "Standard"
									},
									{
										"label": "Premium",
										"value": "Premium"
									}
								]
							},
							"visible": "[and(equals(steps('HubVNET').deployHUB,true),equals(steps('HubVNET').deployFirewallInHub,true))]"
						},
						{
							"name": "deployFirewallrules",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy Firewall policy rules",
							"defaultValue": false,
							"toolTip": "Deploy Firewall policy Rule Collection group which allows spoke-to-spoke and internet traffic",
							"constraints": {
								"required": false
							},
							"visible": "[and(equals(steps('HubVNET').deployHUB,true),equals(steps('HubVNET').deployFirewallInHub,true))]"
						}
					]
				},
				{
					"name": "SpokeVNETs",
					"label": "Spoke VNET's",
					"elements": [
						{
							"name": "deploySpokes",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy Spokes",
							"defaultValue": true,
							"toolTip": "Deploy Spoke VNETs",
							"constraints": {
								"required": false
							},
							"visible": true
						},
						{
							"name": "spokeRgNamePrefix",
							"type": "Microsoft.Common.TextBox",
							"label": "Spoke Resource Group prefix Name",
							"defaultValue": "rg-spoke",
							"toolTip": "Use only allowed characters",
							"placeholder": "",
							"multiLine": false,
							"constraints": {
								"required": true,
								"validations": [
									{
										"regex": "^[a-zA-Z0-9_\\-\\.]+$",
										"message": "Only alphanumeric and numeric characters are allowed including symbols like: _ and . and -"
									}
								]
							},
							"visible": "[equals(steps('SpokeVNETs').deploySpokes,true)]"
						},
						{
							"name": "amountOfSpokes",
							"type": "Microsoft.Common.Slider",
							"min": 1,
							"max": 25,
							"label": "Amount Of Spokes",
							"sublabel": "# of Spoke",
							"defaultValue": 2,
							"showStepMarkers": false,
							"toolTip": "Amount of Spoke VNETs you want to deploy. Default = 2",
							"constraints": {
								"required": false
							},
							"visible": "[equals(steps('SpokeVNETs').deploySpokes,true)]"
						},
						{
							"name": "deployBastionInSpoke",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy Bastion In Spoke",
							"defaultValue": false,
							"toolTip": "Deploy Bastion Host in every Spoke VNET",
							"constraints": {
								"required": false
							},
							"visible": "[equals(steps('SpokeVNETs').deploySpokes,true)]"
						}
					]
				},
				{
					"name": "OnPrem",
					"label": "Simulate OnPrem",
					"elements": [
						{
							"name": "deployOnPrem",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy OnPrem",
							"defaultValue": false,
							"toolTip": "Simulate OnPrem as VNET",
							"constraints": {
								"required": false
							},
							"visible": true
						},
						{
							"name": "OnPremRgName",
							"type": "Microsoft.Common.TextBox",
							"label": "OnPrem Resource Group Name",
							"defaultValue": "rg-onprem",
							"toolTip": "Use only allowed characters",
							"placeholder": "",
							"multiLine": false,
							"constraints": {
								"required": true,
								"validations": [
									{
										"regex": "^[a-zA-Z0-9_\\-\\.]+$",
										"message": "Only alphanumeric and numeric characters are allowed including symbols like: _ and . and -"
									}
								]
							},
							"visible": "[equals(steps('OnPrem').deployOnPrem,true)]"
						},
						{
							"name": "deployBastionInOnPrem",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy Bastion In OnPrem",
							"defaultValue": false,
							"toolTip": "Deploy Bastion Host in OnPrem VNET",
							"constraints": {
								"required": false
							},
							"visible": "[equals(steps('OnPrem').deployOnPrem,true)]"
						},
						{
							"name": "deployGatewayInOnPrem",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy Virtual Network Gateway In OnPrem",
							"defaultValue": false,
							"toolTip": "Deploy Virtual Network Gateway in OnPrem VNET",
							"constraints": {
								"required": false
							},
							"visible": "[equals(steps('OnPrem').deployOnPrem,true)]"
						},
						{
							"name": "deploySite2Site",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy Site-to-Site connection between Hub and OnPrem Gateways",
							"defaultValue": false,
							"toolTip": "Deploy Site-to-Site connection between Hub and OnPrem Gateways",
							"constraints": {
								"required": false
							},
							"visible": "[and(equals(steps('OnPrem').deployGatewayInOnPrem,true),equals(steps('OnPrem').deployOnPrem,true))]"
						},
						{
							"name": "deploySite2SiteInfo",
							"type": "Microsoft.Common.InfoBox",
							"options": {
								"text": "This will also enable the deployment of a Virtual Network Gateway in the Hub",
								"style": "Warning"
							},
							"visible": "[equals(steps('OnPrem').deploySite2Site,true)]"
						}
					]
				},
				{
					"name": "VirtualMachines",
					"label": "Virtual Machines",
					"elements": [
						{
							"name": "deployVMinHub",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy VM in Hub",
							"defaultValue": false,
							"toolTip": "Deploy VM in Hub VNET",
							"constraints": {
								"required": false
							},
							"visible": true
						},
						{
							"name": "deployVMsInSpokes",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy VM's In Spokes",
							"defaultValue": false,
							"toolTip": "Deploy VM in every Spoke VNET",
							"constraints": {
								"required": false
							},
							"visible": true
						},
						{
							"name": "deployVMinOnPrem",
							"type": "Microsoft.Common.CheckBox",
							"label": "Deploy VM In OnPrem",
							"defaultValue": false,
							"toolTip": "Deploy VM in OnPrem VNET",
							"constraints": {
								"required": false
							},
							"visible": true
						},
						{
							"name": "VMUserAccountInfo",
							"type": "Microsoft.Common.InfoBox",
							"options": {
								"text": "Enter Local Admin Username and Password for Virtual Machine deployement.",
								"style": "Info"
							},
							"visible": "[or(equals(steps('VirtualMachines').deployVMsInSpokes,true),equals(steps('VirtualMachines').deployVMinHub,true),equals(steps('VirtualMachines').deployVMinOnPrem,true))]"
						},
						{
							"name": "adminUsername",
							"type": "Microsoft.Compute.UserNameTextBox",
							"label": "Admin Username",
							"toolTip": "",
							"osPlatform": "Windows",
							"constraints": {
								"required": true
							},
							"visible": "[or(equals(steps('VirtualMachines').deployVMsInSpokes,true),equals(steps('VirtualMachines').deployVMinHub,true),equals(steps('VirtualMachines').deployVMinOnPrem,true))]"
						},
						{
							"name": "adminPassword",
							"type": "Microsoft.Compute.CredentialsCombo",
							"label": {
								"password": "Admin Password",
								"confirmPassword": "Confirm password"
							},
							"toolTip": {
								"password": ""
							},
							"osPlatform": "Windows",
							"constraints": {
								"required": true
							},
							"options": {
								"hideConfirmation": false
							},
							"visible": "[or(equals(steps('VirtualMachines').deployVMsInSpokes,true),equals(steps('VirtualMachines').deployVMinHub,true),equals(steps('VirtualMachines').deployVMinOnPrem,true))]"
						}
					]
				}
			]
		},
		"outputs": {
			"parameters": {
				"AddressSpace": "[steps('basics').AddressSpace]",
				"adminUsername": "[steps('VirtualMachines').adminUsername]",
				"adminPassword": "[steps('VirtualMachines').adminPassword.password]",
				"deployVMsInSpokes": "[steps('VirtualMachines').deployVMsInSpokes]",
				"deployVMinHub": "[steps('VirtualMachines').deployVMinHub]",
				"deployVMinOnPrem": "[steps('VirtualMachines').deployVMinOnPrem]",
				"deploySpokes": "[steps('SpokeVNETs').deploySpokes]",
				"amountOfSpokes": "[steps('SpokeVNETs').amountOfSpokes]",
				"deployBastionInSpoke": "[steps('SpokeVNETs').deployBastionInSpoke]",
				"deployHUB": "[steps('HubVNET').deployHUB]",
				"hubRgName": "[steps('HubVNET').hubRgName]",
				"deployBastionInHub": "[steps('HubVNET').deployBastionInHub]",
				"deployGatewayInHub": "[or(equals(steps('HubVNET').deployGatewayInHub,true),equals(steps('OnPrem').deploySite2Site,true))]",
				"deployFirewallInHub": "[steps('HubVNET').deployFirewallInHub]",
				"AzureFirewallTier": "[steps('HubVNET').AzureFirewallTier]",
				"spokeRgNamePrefix": "[steps('SpokeVNETs').spokeRgNamePrefix]",
				"deployFirewallrules": "[steps('HubVNET').deployFirewallrules]",
				"deployOnPrem": "[steps('OnPrem').deployOnPrem]",
				"onpremRgName": "[steps('OnPrem').OnPremRgName]",
				"deployBastionInOnPrem": "[steps('OnPrem').deployBastionInOnPrem]",
				"deployGatewayinOnPrem": "[steps('OnPrem').deployGatewayInOnPrem]",
				"deploySiteToSite": "[steps('OnPrem').deploySite2Site]"

			},
			"kind": "Subscription",
			"subscriptionId": "[steps('basics').resourceScope.subscription.id]",
			"location": "[steps('basics').resourceScope.location.name]"
		}
	}
}