name: "LabBuilder - Deploy Scenarios"

on:
  push:
    branches: none
  pull_request:
    branches: none
  workflow_dispatch:
    inputs:
      LabBuilderType:
        type: choice
        options:
          - vnet
          - vwan
        required: true
        default: vwan
      LabBuilderCleanup:
        type: boolean
        required: true
        default: true
  workflow_call:
    inputs:
      LabBuilderType:
        type: string
        required: true
      LabBuilderCleanup:
        type: boolean
        required: true

jobs:
  BicepBuildandLint:
    name: "Bicep Build and Lint"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Bicep Build and Lint
        run: |
          az bicep install
          az bicep version
          az bicep build --file main.bicep

  DeployScenarios:
    name: "Deploy ${{ inputs.LabBuilderType }} scenario ${{ strategy.job-index }}"
    runs-on: ubuntu-latest
    needs: BicepBuildandLint
    strategy:
      max-parallel: 1
      matrix:
        scenarios:
          [
            "scenario0.${{ inputs.LabBuilderType }}.parameters.json",
            "scenario1.${{ inputs.LabBuilderType }}.parameters.json",
            "scenario2.${{ inputs.LabBuilderType }}.parameters.json",
            "scenario3.${{ inputs.LabBuilderType }}.parameters.json",
            "scenario4.${{ inputs.LabBuilderType }}.parameters.json",
            "scenario5.${{ inputs.LabBuilderType }}.parameters.json",
            "scenario6.${{ inputs.LabBuilderType }}.parameters.json"
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: "Validating ${{ inputs.LabBuilderType }} scenario ${{ strategy.job-index }}"
        uses: Azure/arm-deploy@v1
        with:
          scope: "subscription"
          subscriptionId: ${{ secrets.HUB_SUBSCRIPTION_ID }}
          region: swedencentral
          template: main.bicep
          parameters: 
            ARM/params/${{ matrix.scenarios }}
            adminUsername=${{ secrets.ADMINUSERNAME }}
            adminPassword=${{ secrets.ADMINPASSWORD }}
            sharedKey=${{ secrets.SHAREDKEY }}
            hubSubscriptionID=${{ secrets.HUB_SUBSCRIPTION_ID }}
            spokeSubscriptionID=${{ secrets.SPOKE_SUBSCRIPTION_ID }}
            onPremSubscriptionID=${{ secrets.ONPREM_SUBSCRIPTION_ID }}
            spokeRgNamePrefix="LabBuilderValidation-${{ inputs.LabBuilderType }}-spoke"
            hubRgName="LabBuilderValidation-${{ inputs.LabBuilderType }}-hub"
            onpremRgName="LabBuilderValidation-${{ inputs.LabBuilderType }}-onprem"
          deploymentMode: "validate"
          deploymentName: "LabBuilderValidation-${{ inputs.LabBuilderType }}"
      - name: "Deploy ${{ inputs.LabBuilderType }} scenario ${{ strategy.job-index }}"
        uses: Azure/arm-deploy@v1
        with:
          scope: "subscription"
          subscriptionId: ${{ secrets.HUB_SUBSCRIPTION_ID }}
          region: westus3
          template: main.bicep
          parameters: 
            ARM/params/${{ matrix.scenarios }}
            adminUsername=${{ secrets.ADMINUSERNAME }}
            adminPassword=${{ secrets.ADMINPASSWORD }}
            sharedKey=${{ secrets.SHAREDKEY }}
            hubSubscriptionID=${{ secrets.HUB_SUBSCRIPTION_ID }}
            spokeSubscriptionID=${{ secrets.SPOKE_SUBSCRIPTION_ID }}
            onPremSubscriptionID=${{ secrets.ONPREM_SUBSCRIPTION_ID }}
            spokeRgNamePrefix="LabBuilderValidation-${{ inputs.LabBuilderType }}-spoke"
            hubRgName="LabBuilderValidation-${{ inputs.LabBuilderType }}-hub"
            onpremRgName="LabBuilderValidation-${{ inputs.LabBuilderType }}-onprem"
          deploymentName: "LabBuilderValidation-${{ inputs.LabBuilderType }}"
      - name: "Waiting for vWAN routing to finish deploying"
        if: inputs.LabBuilderType == 'vwan'
        run: |
          az config set extension.use_dynamic_install=yes_without_prompt
          while true
          do
            sleep 10
            status=$(az network vhub show -g LabBuilderValidation-${{ inputs.LabBuilderType }}-hub -n HUB-westus3 --query routingState -o tsv)
            echo "vWAN Hub Routing status: $status"
            if [ "$status" != "Provisioning" ]; then
              echo "vWAN Hub Routing status: $status"
              break
            fi
          done
      - name: "Waiting for vWAN to finish deploying"
        if: inputs.LabBuilderType == 'vwan'
        run: |
          while true
          do
            sleep 10
            status=$(az network vhub show -g LabBuilderValidation-${{ inputs.LabBuilderType }}-hub -n HUB-westus3 --query provisioningState -o tsv)
            echo "vWAN status: $status"
            if [ "$status" != "Updating" ]; then
              echo "vWAN status: $status"
              break
            fi
          done

      
  Cleanup:
    if: inputs.LabBuilderCleanup
    needs: DeployScenarios
    uses: ./.github/workflows/cleanup.yml
    with:
        LabBuilderType: ${{ inputs.LabBuilderType }}
    secrets:
        inherit


        
