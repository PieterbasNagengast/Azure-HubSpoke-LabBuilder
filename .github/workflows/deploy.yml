name: "LabBuilder - Deploy Scenarios"

on:
  push:
    branches: none
  pull_request:
    branches: none
  workflow_dispatch:
    inputs:
      LabBuilderLocation:
        type: choice
        options:
          - swedencentral
        required: true
        default: swedencentral
      LabBuilderType:
        type: choice
        options:
          - vnet
          - vwan
        required: true
        default: vwan
      LabBuilderCleanup:
        type: boolean
        required: true
        default: true
  workflow_call:
    inputs:
      LabBuilderType:
        type: string
        required: true
      LabBuilderCleanup:
        type: boolean
        required: true
      LabBuilderLocation:
        type: string
        required: true

permissions:
  id-token: write

jobs:
  BicepBuildandLint:
    name: "Bicep Build and Lint"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Bicep Build and Lint
        run: |
          az bicep install
          az bicep version
          az bicep build --file main.bicep

  DeployScenarios:
    name: "Deploy ${{ inputs.LabBuilderType }} scenario ${{ strategy.job-index }}"
    runs-on: ubuntu-latest
    needs: BicepBuildandLint
    strategy:
      max-parallel: 1
      matrix:
        scenarios:
          [
            "scenario0.${{ inputs.LabBuilderType }}.bicepparam",
            "scenario1.${{ inputs.LabBuilderType }}.bicepparam",
            # "scenario2.${{ inputs.LabBuilderType }}.bicepparam",
            # "scenario3.${{ inputs.LabBuilderType }}.bicepparam",
            # "scenario4.${{ inputs.LabBuilderType }}.bicepparam",
            # "scenario5.${{ inputs.LabBuilderType }}.bicepparam"
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: "Validating ${{ inputs.LabBuilderType }} scenario ${{ strategy.job-index }}"
        uses: azure/bicep-deploy@v2
        with:
          type: "deployment"
          scope: "subscription"
          operation: "validate"
          name: "LabBuilderValidation-${{ inputs.LabBuilderType }}-${{ github.run_id }}"    
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          location: ${{ inputs.LabBuilderLocation}}
          template-file: main.bicep
          parameters-file: bicepparams/${{ matrix.scenarios }}
          parameters: >-
            {
            "adminUsername": "${{ secrets.ADMINUSERNAME }}",
            "adminPassword": "${{ secrets.ADMINPASSWORD }}",
            "sharedKey": "${{ secrets.SHAREDKEY }}",
            "hubSubscriptionID": "${{ secrets.HUB_SUBSCRIPTION_ID }}",
            "spokeSubscriptionID": "${{ secrets.SPOKE_SUBSCRIPTION_ID }}",
            "onPremSubscriptionID": "${{ secrets.ONPREM_SUBSCRIPTION_ID }}",
            "spokeRgNamePrefix": "LabBuilderValidation-${{ inputs.LabBuilderType }}-spoke",
            "hubRgName": "LabBuilderValidation-${{ inputs.LabBuilderType }}-hub",
            "onpremRgName": "LabBuilderValidation-${{ inputs.LabBuilderType }}-onprem"
            }
      - name: "Deploy ${{ inputs.LabBuilderType }} scenario ${{ strategy.job-index }}"
        uses: azure/bicep-deploy@v2
        with:
          type: "deployment"
          operation: "create"
          scope: "subscription"
          name: "LabBuilderValidation-${{ inputs.LabBuilderType }}-${{ github.run_id }}"
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          location: ${{ inputs.LabBuilderLocation}}
          template-file: main.bicep
          parameters-file: bicepparams/${{ matrix.scenarios }}
          parameters: >-
            {
            "adminUsername": "${{ secrets.ADMINUSERNAME }}",
            "adminPassword": "${{ secrets.ADMINPASSWORD }}",
            "sharedKey": "${{ secrets.SHAREDKEY }}",
            "hubSubscriptionID": "${{ secrets.HUB_SUBSCRIPTION_ID }}",
            "spokeSubscriptionID": "${{ secrets.SPOKE_SUBSCRIPTION_ID }}",
            "onPremSubscriptionID": "${{ secrets.ONPREM_SUBSCRIPTION_ID }}",
            "spokeRgNamePrefix": "LabBuilderValidation-${{ inputs.LabBuilderType }}-spoke",
            "hubRgName": "LabBuilderValidation-${{ inputs.LabBuilderType }}-hub",
            "onpremRgName": "LabBuilderValidation-${{ inputs.LabBuilderType }}-onprem"
            }
                
  Cleanup:
    if: inputs.LabBuilderCleanup
    needs: DeployScenarios
    uses: ./.github/workflows/cleanup.yml
    with:
        LabBuilderType: ${{ inputs.LabBuilderType }}
    secrets:
        inherit


        
