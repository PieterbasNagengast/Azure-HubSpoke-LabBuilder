name: "LabBuilder - CleanUp"

on:
  workflow_dispatch:
    inputs:
      Type:
        description: "Type of LabBuilder deployment"
        type: choice
        options:
          - vnet
          - vwan
          - avnm
        required: true
        default: vnet
  workflow_call:
    inputs:
      Type:
        type: string
        required: true

permissions:
  id-token: write
  
jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.buildMatrix.outputs.matrix }}
    steps:
      - id: buildMatrix
        run: |
          json_input='${{ secrets.LOCATIONS }}'
          unique=$(echo "$json_input" | jq -r '[.[].hubSubscriptionID, .[].spokeSubscriptionID, .[].onPremSubscriptionID] | unique')
          echo "matrix={\"sub_id\":$unique}" >> $GITHUB_OUTPUT

  VNETremoval:
    name: "Remove deployments"
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ matrix.sub_id }}
      - name: Cleanup ${{ matrix.sub_id }}
        run: |
          echo "Switching to subscription ${{ matrix.sub_id }} ..."
          az account set --subscription ${{ matrix.sub_id }}
          echo 'List of Resource groups to be deleted....'
          az group list --tag LabBuilder=Validation --tag LabBuilderType=${{ inputs.Type }} --output table
          echo 'Removing Resource groups...'
          az group list --tag LabBuilder=Validation --tag LabBuilderType=${{ inputs.Type }} --query "[].[name]" --output tsv | xargs -r -l az group delete --yes --no-wait --name
