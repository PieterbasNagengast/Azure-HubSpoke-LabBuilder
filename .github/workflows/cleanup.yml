name: "LabBuilder - CleanUp"

on:
  workflow_dispatch:
    inputs:
      MultiOrSingleRegion:
        description: "Deploy Multi or Single Region?"
        type: choice
        options:
          - MultiRegion
          - SingleRegion        
        default: SingleRegion
        required: true
      Type:
        description: "Type of LabBuilder deployment"
        type: choice
        options:
          - vnet
          - vwan
          - avnm
        required: true
        default: vnet
  workflow_call:
    inputs:
      MultiOrSingleRegion:
        type: string
        required: true
      Type:
        type: string
        required: true

permissions:
  id-token: write
  
jobs:
  prepare-matrix:
    environment:
      name: ${{ inputs.MultiOrSingleRegion }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.buildMatrix.outputs.matrix }}
    steps:
      - id: buildMatrix
        run: |
          json_input='${{ secrets.LOCATIONS }}'
          if [ -z "$json_input" ]; then
            echo "Error: LOCATIONS secret is empty or not set."
            exit 1
          fi
          unique=$(echo "$json_input" | jq -c '[.[].hubSubscriptionID, .[].spokeSubscriptionID, .[].onPremSubscriptionID] | unique')
          if [ -z "$unique" ]; then
            echo "Error: Failed to generate unique subscription IDs."
            exit 1
          fi
          echo "matrix=$(echo "{\"sub_id\":$unique}" | jq -c)" | tee -a $GITHUB_OUTPUT
        
      - name: display-output
        run: |
          echo "Matrix output:"
          echo "${{ steps.buildMatrix.outputs.matrix }}"

  reviewValues:
    name: "Review values"
    runs-on: ubuntu-latest
    needs: prepare-matrix
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Review values
        run: |
          echo "Subscription IDs to be cleaned up:"
          echo "${{ needs.prepare-matrix.outputs.matrix }}"
          echo "LabBuilder Type:"
          echo "${{ inputs.Type }}"  

  # VNETremoval:
  #   name: "Remove deployments"
  #   needs: prepare-matrix
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #      sub_id: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Azure Login
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #         subscription-id: ${{ matrix.sub_id }}
  #     - name: Cleanup ${{ matrix.sub_id }}
  #       run: |
  #         echo "Switching to subscription ${{ matrix.sub_id }} ..."
  #         az account set --subscription ${{ matrix.sub_id }}
  #         echo 'List of Resource groups to be deleted....'
  #         az group list --tag LabBuilder=Validation --tag LabBuilderType=${{ inputs.Type }} --output table
  #         echo 'Removing Resource groups...'
  #         az group list --tag LabBuilder=Validation --tag LabBuilderType=${{ inputs.Type }} --query "[].[name]" --output tsv | xargs -r -l az group delete --yes --no-wait --name
