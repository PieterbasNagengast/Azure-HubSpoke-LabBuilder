{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "11674629811520131182"
    }
  },
  "definitions": {
    "_Locations": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string"
          },
          "addressSpace": {
            "type": "string"
          },
          "hubSubscriptionID": {
            "type": "string"
          },
          "spokeSubscriptionID": {
            "type": "string"
          },
          "onPremSubscriptionID": {
            "type": "string"
          }
        }
      },
      "maxLength": 2,
      "metadata": {
        "__bicep_imported_from!": {
          "sourceTemplate": "types.bicep"
        }
      }
    }
  },
  "parameters": {
    "locations": {
      "$ref": "#/definitions/_Locations",
      "defaultValue": [
        {
          "region": "swedencentral",
          "addressSpace": "172.16.0.0/16",
          "hubSubscriptionID": "[subscription().subscriptionId]",
          "spokeSubscriptionID": "[subscription().subscriptionId]",
          "onPremSubscriptionID": "[subscription().subscriptionId]"
        }
      ]
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Admin username for Virtual Machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Admin Password for Virtual Machines"
      }
    },
    "vmSizeSpoke": {
      "type": "string",
      "defaultValue": "Standard_B2ls_v2",
      "metadata": {
        "description": "Spoke Virtual Machine SKU. Default = Standard_B2s"
      }
    },
    "vmSizeOnPrem": {
      "type": "string",
      "defaultValue": "Standard_B2ls_v2",
      "metadata": {
        "description": "OnPrem Virtual Machine SKU. Default = Standard_B2s"
      }
    },
    "osTypeSpoke": {
      "type": "string",
      "defaultValue": "Windows",
      "allowedValues": [
        "Linux",
        "Windows"
      ],
      "metadata": {
        "description": "Spoke Virtual Machine(s) OS type. Windows or Linux. Default = Windows"
      }
    },
    "osTypeOnPrem": {
      "type": "string",
      "defaultValue": "Windows",
      "allowedValues": [
        "Linux",
        "Windows"
      ],
      "metadata": {
        "description": "OnPrem Virtual Machine OS type. Windows or Linux. Default = Windows"
      }
    },
    "tagsByResource": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags by resource types. Default = empty"
      }
    },
    "diagnosticWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "LogAnalytics Workspace resourceID"
      }
    },
    "dcrRgName": {
      "type": "string",
      "defaultValue": "rg-dcr",
      "metadata": {
        "description": "Resource group name for DCR"
      }
    },
    "deploySpokes": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Spoke VNETs. Default = true"
      }
    },
    "spokeRgNamePrefix": {
      "type": "string",
      "defaultValue": "rg-spoke",
      "metadata": {
        "description": "Spoke resource group prefix name. Default = rg-spoke"
      }
    },
    "amountOfSpokes": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Amount of Spoke VNETs you want to deploy. Default = 2"
      }
    },
    "deployVMsInSpokes": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy VM in every Spoke VNET"
      }
    },
    "deployVnetPeeringMesh": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Directly connect VNET Spokes (Fully Meshed Topology)"
      }
    },
    "deployAvnmUDRs": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Let Azure Virtual Network Manager manage UDRs in Spoke VNETs"
      }
    },
    "defaultOutboundAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable or Disbale default outbound access on Subnets. Default = true"
      }
    },
    "deployHUB": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Hub"
      }
    },
    "hubType": {
      "type": "string",
      "defaultValue": "VNET",
      "allowedValues": [
        "VNET",
        "VWAN"
      ],
      "metadata": {
        "description": "Deploy Hub VNET or Azuere vWAN. Default = VNET"
      }
    },
    "hubRgName": {
      "type": "string",
      "defaultValue": "rg-hub",
      "metadata": {
        "description": "Hub resource group pre-fix name. Default = rg-hub"
      }
    },
    "deployBastionInHub": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Bastion Host in Hub VNET. Default = true"
      }
    },
    "bastionInHubSKU": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Hub Bastion SKU"
      }
    },
    "deployGatewayInHub": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Virtual Network Gateway in Hub VNET"
      }
    },
    "deployFirewallInHub": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Azure Firewall in Hub VNET. includes deployment of custom route tables in Spokes and Hub VNETs"
      }
    },
    "AzureFirewallTier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Azure Firewall Tier: Standard or Premium"
      }
    },
    "deployFirewallrules": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Firewall policy Rule Collection group which allows spoke-to-spoke and internet traffic"
      }
    },
    "firewallDNSproxy": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Azure Firewall DNS Proxy"
      }
    },
    "deployUDRs": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Dploy route tables (UDR's) to VM subnet(s) in Hub and Spokes"
      }
    },
    "hubBgp": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable BGP on Hub Gateway"
      }
    },
    "hubBgpAsn": {
      "type": "int",
      "defaultValue": 65515,
      "metadata": {
        "description": "Hub BGP ASN"
      }
    },
    "avnmRgName": {
      "type": "string",
      "defaultValue": "rg-avnm",
      "metadata": {
        "description": "AVNM resource group name. Default = rg-avnm"
      }
    },
    "deployVnetPeeringAVNM": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Let Azure Virtual Network Manager manage Peerings in Hub&Spoke"
      }
    },
    "internetTrafficRoutingPolicy": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Azure vWAN routing Intent Policy for Internet Traffic"
      }
    },
    "privateTrafficRoutingPolicy": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Azure vWAN routing Intent Policy for Private Traffic"
      }
    },
    "deployOnPrem": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Virtual Network Gateway in OnPrem"
      }
    },
    "onpremRgName": {
      "type": "string",
      "defaultValue": "rg-onprem",
      "metadata": {
        "description": "OnPrem Resource Group Name"
      }
    },
    "deployBastionInOnPrem": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Bastion Host in OnPrem VNET"
      }
    },
    "bastionInOnPremSKU": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "OnPrem Bastion SKU"
      }
    },
    "deployVMinOnPrem": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy VM in OnPrem VNET"
      }
    },
    "deployGatewayinOnPrem": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Virtual Network Gateway in OnPrem VNET"
      }
    },
    "deploySiteToSite": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Site-to-Site VPN connection between OnPrem and Hub Gateways"
      }
    },
    "sharedKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Site-to-Site ShareKey"
      }
    },
    "onpremBgp": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable BGP on OnPrem Gateway"
      }
    },
    "onpremBgpAsn": {
      "type": "int",
      "defaultValue": 65020,
      "metadata": {
        "description": "OnPrem BGP ASN"
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "avnmSubscriptions",
        "count": "[length(parameters('locations'))]",
        "input": "[if(variables('deployAVNM'), createArray(format('/subscriptions/{0}', tryGet(parameters('locations')[copyIndex('avnmSubscriptions')], 'hubSubscriptionID')), format('/subscriptions/{0}', tryGet(parameters('locations')[copyIndex('avnmSubscriptions')], 'spokeSubscriptionID'))), createArray('NoAVNM'))]"
      }
    ],
    "regionShortCodes": {
      "southafricanorth": "SAN",
      "australiaeast": "AUE",
      "centralindia": "CIN",
      "eastasia": "EAS",
      "indonesiacentral": "IDC",
      "japaneast": "JAE",
      "japanwest": "JAW",
      "koreacentral": "KOC",
      "newzealandnorth": "NZN",
      "southeastasia": "SEA",
      "canadacentral": "CAC",
      "francecentral": "FRC",
      "germanywestcentral": "GWC",
      "italynorth": "ITN",
      "northeurope": "NEU",
      "norwayeast": "NOE",
      "polandcentral": "POC",
      "spaincentral": "SCE",
      "swedencentral": "SCE",
      "switzerlandnorth": "SWN",
      "uksouth": "UKS",
      "westeurope": "WEU",
      "mexicocentral": "MEC",
      "israelcentral": "ISC",
      "qatarcentral": "QAC",
      "uaenorth": "UAE",
      "brazilsouth": "BRS",
      "centralus": "CUS",
      "eastus": "EUS",
      "southcentralus": "SCU",
      "westus2": "WUS2",
      "westus3": "WUS3"
    },
    "isMultiRegion": "[greater(length(parameters('locations')), 1)]",
    "isVnetHub": "[equals(parameters('hubType'), 'VNET')]",
    "isVwanHub": "[equals(parameters('hubType'), 'VWAN')]",
    "avnmSubscriptionScopes": "[union(flatten(variables('avnmSubscriptions')), flatten(variables('avnmSubscriptions')))]",
    "deployVWAN": "[and(parameters('deployHUB'), variables('isVwanHub'))]",
    "deployAVNM": "[and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM'))]",
    "deployGlobalVnetPeerings": "[and(and(variables('isMultiRegion'), variables('isVnetHub')), parameters('deployHUB'))]",
    "deployRoutes": "[and(and(and(and(variables('isMultiRegion'), parameters('deployFirewallInHub')), parameters('deployUDRs')), variables('isVnetHub')), parameters('deployHUB'))]",
    "deployCrossRegionVPNConnections": "[and(and(and(and(and(parameters('deployGatewayInHub'), parameters('deployGatewayinOnPrem')), parameters('deploySiteToSite')), parameters('deployHUB')), variables('isMultiRegion')), or(variables('isVnetHub'), variables('isVwanHub')))]"
  },
  "resources": {
    "vwanhubrg": {
      "condition": "[variables('deployVWAN')]",
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2025-04-01",
      "name": "[parameters('hubRgName')]",
      "location": "[parameters('locations')[0].region]",
      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/subscriptions/resourceGroups'), createObject())]"
    },
    "avnmrg": {
      "condition": "[variables('deployAVNM')]",
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2025-04-01",
      "name": "[parameters('avnmRgName')]",
      "location": "[parameters('locations')[0].region]",
      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/subscriptions/resourceGroups'), createObject())]"
    },
    "dcrrg": {
      "condition": "[not(empty(parameters('diagnosticWorkspaceId')))]",
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2025-04-01",
      "name": "[parameters('dcrRgName')]",
      "location": "[parameters('locations')[0].region]",
      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/subscriptions/resourceGroups'), createObject())]"
    },
    "vwan": {
      "condition": "[variables('deployVWAN')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vWAN",
      "resourceGroup": "[parameters('hubRgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locations')[0].region]"
          },
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          },
          "vWanName": {
            "value": "vWAN"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "969145206617951130"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "vWanName": {
              "type": "string"
            },
            "vWanType": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "Standard",
                "Basic"
              ]
            },
            "tagsByResource": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualWans",
              "apiVersion": "2024-05-01",
              "name": "[parameters('vWanName')]",
              "location": "[parameters('location')]",
              "properties": {
                "type": "[parameters('vWanType')]",
                "disableVpnEncryption": false,
                "allowBranchToBranchTraffic": true
              },
              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualWans'), createObject())]"
            }
          ],
          "outputs": {
            "ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualWans', parameters('vWanName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "vwanhubrg"
      ]
    },
    "avnmmanager": {
      "condition": "[variables('deployAVNM')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "AVNM",
      "resourceGroup": "[parameters('avnmRgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locations')[0].region]"
          },
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          },
          "avnmName": {
            "value": "AVNM"
          },
          "avnmSubscriptionScopes": {
            "value": "[variables('avnmSubscriptionScopes')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "8949754200135956411"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "avnmName": {
              "type": "string"
            },
            "tagsByResource": {
              "type": "object",
              "defaultValue": {}
            },
            "avnmScopeAccesses": {
              "type": "array",
              "defaultValue": [
                "Connectivity",
                "Routing",
                "SecurityAdmin"
              ],
              "allowedValues": [
                "Connectivity",
                "Routing",
                "SecurityAdmin"
              ]
            },
            "avnmSubscriptionScopes": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkManagers",
              "apiVersion": "2024-05-01",
              "name": "[parameters('avnmName')]",
              "location": "[parameters('location')]",
              "properties": {
                "networkManagerScopeAccesses": "[parameters('avnmScopeAccesses')]",
                "networkManagerScopes": {
                  "subscriptions": "[parameters('avnmSubscriptionScopes')]"
                }
              },
              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/networkManagers'), createObject())]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "UserAssignedIdentityForAVNM",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "uaiName": {
                    "value": "[parameters('avnmName')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "12924950140642688591"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "uaiName": {
                      "type": "string"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2025-01-31-preview",
                      "name": "[format('{0}-{1}', parameters('uaiName'), parameters('location'))]",
                      "location": "[parameters('location')]",
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-{1}', parameters('uaiName'), parameters('location')))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[format('{0}-{1}', parameters('uaiName'), parameters('location'))]"
                    },
                    "principalID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-{1}', parameters('uaiName'), parameters('location'))), '2025-01-31-preview').principalId]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "RoleAssignmentForAVNMDeploymentScript",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalID": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'UserAssignedIdentityForAVNM'), '2022-09-01').outputs.principalID.value]"
                  },
                  "avnmName": {
                    "value": "[parameters('avnmName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10341906919521307969"
                    }
                  },
                  "parameters": {
                    "principalID": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "ServicePrincipal",
                        "Group",
                        "User",
                        "ForeignGroup"
                      ]
                    },
                    "roleID": {
                      "type": "string",
                      "defaultValue": "4d97b98b-1d4f-4787-a291-c67834d212e7"
                    },
                    "avnmName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Network/networkManagers/{0}', parameters('avnmName'))]",
                      "name": "[guid(resourceGroup().id, parameters('principalID'))]",
                      "properties": {
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleID'))]",
                        "principalId": "[parameters('principalID')]",
                        "principalType": "[parameters('principalType')]"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[extensionResourceId(resourceId('Microsoft.Network/networkManagers', parameters('avnmName')), 'Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, parameters('principalID')))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'UserAssignedIdentityForAVNM')]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkManagers', parameters('avnmName'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('avnmName')]"
            },
            "uaiId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'UserAssignedIdentityForAVNM'), '2022-09-01').outputs.id.value]"
            }
          }
        }
      },
      "dependsOn": [
        "avnmrg"
      ]
    },
    "dcrvminsights": {
      "condition": "[not(empty(parameters('diagnosticWorkspaceId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "dcr-vminsights",
      "resourceGroup": "[parameters('dcrRgName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "diagnosticWorkspaceId": {
            "value": "[coalesce(parameters('diagnosticWorkspaceId'), '')]"
          },
          "location": {
            "value": "[parameters('locations')[0].region]"
          },
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "16424891739902597606"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "diagnosticWorkspaceId": {
              "type": "string"
            },
            "tagsByResource": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/dataCollectionRules",
              "apiVersion": "2023-03-11",
              "name": "MSVMI-LabBuilder",
              "location": "[parameters('location')]",
              "properties": {
                "description": "Data collection rule for VM Insights.",
                "dataSources": {
                  "performanceCounters": [
                    {
                      "name": "VMInsightsPerfCounters",
                      "streams": [
                        "Microsoft-InsightsMetrics"
                      ],
                      "samplingFrequencyInSeconds": 60,
                      "counterSpecifiers": [
                        "\\VmInsights\\DetailedMetrics"
                      ]
                    }
                  ],
                  "extensions": [
                    {
                      "streams": [
                        "Microsoft-ServiceMap"
                      ],
                      "extensionName": "DependencyAgent",
                      "extensionSettings": {},
                      "name": "DependencyAgentDataSource"
                    }
                  ]
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "name": "VMInsightsPerf-Logs-Dest",
                      "workspaceResourceId": "[parameters('diagnosticWorkspaceId')]"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Microsoft-InsightsMetrics"
                    ],
                    "destinations": [
                      "VMInsightsPerf-Logs-Dest"
                    ]
                  },
                  {
                    "streams": [
                      "Microsoft-ServiceMap"
                    ],
                    "destinations": [
                      "VMInsightsPerf-Logs-Dest"
                    ]
                  }
                ]
              },
              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Insights/dataCollectionRules'), createObject())]"
            }
          ],
          "outputs": {
            "dcrID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/dataCollectionRules', 'MSVMI-LabBuilder')]"
            }
          }
        }
      },
      "dependsOn": [
        "dcrrg"
      ]
    },
    "deployRegion": {
      "copy": {
        "name": "deployRegion",
        "count": "[length(parameters('locations'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deployRegion-{0}', variables('regionShortCodes')[parameters('locations')[copyIndex()].region])]",
      "subscriptionId": "[parameters('locations')[copyIndex()].hubSubscriptionID]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locations')[copyIndex()].region]"
          },
          "isMultiRegion": {
            "value": "[variables('isMultiRegion')]"
          },
          "shortLocationCode": {
            "value": "[variables('regionShortCodes')[parameters('locations')[copyIndex()].region]]"
          },
          "hubSubscriptionID": {
            "value": "[parameters('locations')[copyIndex()].hubSubscriptionID]"
          },
          "spokeSubscriptionID": {
            "value": "[parameters('locations')[copyIndex()].spokeSubscriptionID]"
          },
          "onPremSubscriptionID": {
            "value": "[parameters('locations')[copyIndex()].onPremSubscriptionID]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSizeSpoke": {
            "value": "[parameters('vmSizeSpoke')]"
          },
          "vmSizeOnPrem": {
            "value": "[parameters('vmSizeOnPrem')]"
          },
          "osTypeSpoke": {
            "value": "[parameters('osTypeSpoke')]"
          },
          "osTypeOnPrem": {
            "value": "[parameters('osTypeOnPrem')]"
          },
          "AddressSpace": {
            "value": "[parameters('locations')[copyIndex()].addressSpace]"
          },
          "SecondRegionAddressSpace": "[if(equals(copyIndex(), 0), createObject('value', coalesce(tryGet(tryGet(parameters('locations'), 1), 'addressSpace'), 'NoSecondRegion')), createObject('value', parameters('locations')[0].addressSpace))]",
          "amountOfSpokes": {
            "value": "[parameters('amountOfSpokes')]"
          },
          "spokeRgNamePrefix": {
            "value": "[parameters('spokeRgNamePrefix')]"
          },
          "AzureFirewallTier": {
            "value": "[parameters('AzureFirewallTier')]"
          },
          "bastionInHubSKU": {
            "value": "[parameters('bastionInHubSKU')]"
          },
          "bastionInOnPremSKU": {
            "value": "[parameters('bastionInOnPremSKU')]"
          },
          "hubBgp": {
            "value": "[parameters('hubBgp')]"
          },
          "defaultOutboundAccess": {
            "value": "[parameters('defaultOutboundAccess')]"
          },
          "deployAvnmUDRs": {
            "value": "[parameters('deployAvnmUDRs')]"
          },
          "deployBastionInHub": {
            "value": "[parameters('deployBastionInHub')]"
          },
          "deployBastionInOnPrem": {
            "value": "[parameters('deployBastionInOnPrem')]"
          },
          "deployFirewallInHub": {
            "value": "[parameters('deployFirewallInHub')]"
          },
          "deployGatewayInHub": {
            "value": "[parameters('deployGatewayInHub')]"
          },
          "deployGatewayinOnPrem": {
            "value": "[parameters('deployGatewayinOnPrem')]"
          },
          "deployHUB": {
            "value": "[parameters('deployHUB')]"
          },
          "deployOnPrem": {
            "value": "[parameters('deployOnPrem')]"
          },
          "deploySpokes": {
            "value": "[parameters('deploySpokes')]"
          },
          "deployVMsInSpokes": {
            "value": "[parameters('deployVMsInSpokes')]"
          },
          "deployVnetPeeringMesh": {
            "value": "[parameters('deployVnetPeeringMesh')]"
          },
          "avnmRgName": "[if(variables('deployAVNM'), createObject('value', parameters('avnmRgName')), createObject('value', 'noAVNM'))]",
          "avnmName": "[if(variables('deployAVNM'), createObject('value', reference('avnmmanager').outputs.name.value), createObject('value', 'noAVNM'))]",
          "avnmUserAssignedIdentityId": "[if(variables('deployAVNM'), createObject('value', reference('avnmmanager').outputs.uaiId.value), createObject('value', 'noAVNM'))]",
          "deployVnetPeeringAVNM": {
            "value": "[parameters('deployVnetPeeringAVNM')]"
          },
          "deployUDRs": {
            "value": "[parameters('deployUDRs')]"
          },
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          },
          "internetTrafficRoutingPolicy": {
            "value": "[parameters('internetTrafficRoutingPolicy')]"
          },
          "privateTrafficRoutingPolicy": {
            "value": "[parameters('privateTrafficRoutingPolicy')]"
          },
          "sharedKey": {
            "value": "[parameters('sharedKey')]"
          },
          "hubBgpAsn": {
            "value": "[parameters('hubBgpAsn')]"
          },
          "onpremBgpAsn": {
            "value": "[add(parameters('onpremBgpAsn'), copyIndex())]"
          },
          "onpremBgp": {
            "value": "[parameters('onpremBgp')]"
          },
          "deployFirewallrules": {
            "value": "[parameters('deployFirewallrules')]"
          },
          "firewallDNSproxy": {
            "value": "[parameters('firewallDNSproxy')]"
          },
          "deploySiteToSite": {
            "value": "[parameters('deploySiteToSite')]"
          },
          "deployVMinOnPrem": {
            "value": "[parameters('deployVMinOnPrem')]"
          },
          "hubRgName": {
            "value": "[parameters('hubRgName')]"
          },
          "onpremRgName": {
            "value": "[parameters('onpremRgName')]"
          },
          "hubType": {
            "value": "[parameters('hubType')]"
          },
          "vWanID": "[if(variables('deployVWAN'), createObject('value', reference('vwan').outputs.ID.value), createObject('value', 'noVWAN'))]",
          "dcrID": "[if(not(empty(parameters('diagnosticWorkspaceId'))), createObject('value', reference('dcrvminsights').outputs.dcrID.value), createObject('value', ''))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "14915384502526261373"
            }
          },
          "definitions": {
            "_1._VPNGatewaySettingsVNET": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "allowedValues": [
                    "VNET"
                  ]
                },
                "GatewayID": {
                  "type": "string"
                },
                "GatewayPublicIP": {
                  "type": "string"
                },
                "AddressPrefixes": {
                  "type": "array"
                },
                "BgpAsn": {
                  "type": "int"
                },
                "BgpPeeringAddress": {
                  "type": "string"
                },
                "Location": {
                  "type": "string"
                },
                "shortLocationCode": {
                  "type": "string"
                },
                "enableBgp": {
                  "type": "bool"
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "_1._VPNGatewaySettingsVWAN": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "allowedValues": [
                    "VWAN"
                  ]
                },
                "vWanID": {
                  "type": "string"
                },
                "vWanHubName": {
                  "type": "string"
                },
                "vWanGatewayName": {
                  "type": "string"
                },
                "vwanVpnGwInfo": {
                  "type": "array"
                },
                "AddressPrefixes": {
                  "type": "array"
                },
                "BgpAsn": {
                  "type": "int"
                },
                "Location": {
                  "type": "string"
                },
                "shortLocationCode": {
                  "type": "string"
                },
                "enableBgp": {
                  "type": "bool"
                },
                "propagateToNoneRouteTable": {
                  "type": "bool"
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "_VPNSettings": {
              "type": "object",
              "properties": {
                "Hub": {
                  "type": "object",
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "VNET": {
                        "$ref": "#/definitions/_1._VPNGatewaySettingsVNET"
                      },
                      "VWAN": {
                        "$ref": "#/definitions/_1._VPNGatewaySettingsVWAN"
                      }
                    }
                  }
                },
                "OnPrem": {
                  "type": "object",
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "VNET": {
                        "$ref": "#/definitions/_1._VPNGatewaySettingsVNET"
                      },
                      "VWAN": {
                        "$ref": "#/definitions/_1._VPNGatewaySettingsVWAN"
                      }
                    }
                  }
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            }
          },
          "parameters": {
            "hubSubscriptionID": {
              "type": "string"
            },
            "spokeSubscriptionID": {
              "type": "string"
            },
            "onPremSubscriptionID": {
              "type": "string"
            },
            "adminUsername": {
              "type": "string"
            },
            "adminPassword": {
              "type": "securestring"
            },
            "vmSizeSpoke": {
              "type": "string"
            },
            "vmSizeOnPrem": {
              "type": "string"
            },
            "dcrID": {
              "type": "string"
            },
            "osTypeSpoke": {
              "type": "string",
              "allowedValues": [
                "Linux",
                "Windows"
              ]
            },
            "osTypeOnPrem": {
              "type": "string",
              "allowedValues": [
                "Linux",
                "Windows"
              ]
            },
            "AddressSpace": {
              "type": "string"
            },
            "SecondRegionAddressSpace": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "shortLocationCode": {
              "type": "string"
            },
            "tagsByResource": {
              "type": "object"
            },
            "isMultiRegion": {
              "type": "bool"
            },
            "deploySpokes": {
              "type": "bool"
            },
            "spokeRgNamePrefix": {
              "type": "string"
            },
            "amountOfSpokes": {
              "type": "int"
            },
            "deployVMsInSpokes": {
              "type": "bool"
            },
            "deployVnetPeeringMesh": {
              "type": "bool"
            },
            "deployAvnmUDRs": {
              "type": "bool"
            },
            "defaultOutboundAccess": {
              "type": "bool"
            },
            "deployHUB": {
              "type": "bool"
            },
            "hubType": {
              "type": "string",
              "allowedValues": [
                "VNET",
                "VWAN"
              ]
            },
            "hubRgName": {
              "type": "string"
            },
            "deployBastionInHub": {
              "type": "bool"
            },
            "bastionInHubSKU": {
              "type": "string",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ]
            },
            "deployGatewayInHub": {
              "type": "bool"
            },
            "deployFirewallInHub": {
              "type": "bool"
            },
            "AzureFirewallTier": {
              "type": "string",
              "allowedValues": [
                "Standard",
                "Premium"
              ]
            },
            "deployFirewallrules": {
              "type": "bool"
            },
            "firewallDNSproxy": {
              "type": "bool"
            },
            "deployUDRs": {
              "type": "bool"
            },
            "hubBgp": {
              "type": "bool"
            },
            "hubBgpAsn": {
              "type": "int"
            },
            "vWanID": {
              "type": "string"
            },
            "internetTrafficRoutingPolicy": {
              "type": "bool"
            },
            "privateTrafficRoutingPolicy": {
              "type": "bool"
            },
            "avnmRgName": {
              "type": "string"
            },
            "avnmName": {
              "type": "string"
            },
            "avnmUserAssignedIdentityId": {
              "type": "string"
            },
            "deployVnetPeeringAVNM": {
              "type": "bool"
            },
            "deployOnPrem": {
              "type": "bool"
            },
            "onpremRgName": {
              "type": "string"
            },
            "deployBastionInOnPrem": {
              "type": "bool"
            },
            "bastionInOnPremSKU": {
              "type": "string",
              "allowedValues": [
                "Basic",
                "Standard"
              ]
            },
            "deployVMinOnPrem": {
              "type": "bool"
            },
            "deployGatewayinOnPrem": {
              "type": "bool"
            },
            "deploySiteToSite": {
              "type": "bool"
            },
            "sharedKey": {
              "type": "securestring"
            },
            "onpremBgp": {
              "type": "bool"
            },
            "onpremBgpAsn": {
              "type": "int"
            }
          },
          "variables": {
            "copy": [
              {
                "name": "AllAddressSpaces",
                "count": "[length(range(0, add(parameters('amountOfSpokes'), 1)))]",
                "input": "[cidrSubnet(parameters('AddressSpace'), 24, range(0, add(parameters('amountOfSpokes'), 1))[copyIndex('AllAddressSpaces')])]"
              }
            ],
            "isVnetHub": "[equals(parameters('hubType'), 'VNET')]",
            "isVwanHub": "[equals(parameters('hubType'), 'VWAN')]",
            "varHubRgName": "[format('{0}-{1}', parameters('hubRgName'), parameters('shortLocationCode'))]",
            "deployVPNConnectionsVNET": "[and(and(and(and(parameters('deployGatewayInHub'), parameters('deployGatewayinOnPrem')), parameters('deploySiteToSite')), variables('isVnetHub')), parameters('deployHUB'))]",
            "deployVPNConnectionsVWAN": "[and(and(and(and(and(parameters('deployGatewayInHub'), parameters('deployGatewayinOnPrem')), parameters('deploySiteToSite')), variables('isVwanHub')), parameters('deployHUB')), parameters('deployOnPrem'))]"
          },
          "resources": {
            "hubrg": {
              "condition": "[and(parameters('deployHUB'), variables('isVnetHub'))]",
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2025-04-01",
              "name": "[variables('varHubRgName')]",
              "location": "[parameters('location')]",
              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/subscriptions/resourceGroups'), createObject())]"
            },
            "hubVnet": {
              "condition": "[and(parameters('deployHUB'), variables('isVnetHub'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-{1}-VNET', parameters('hubRgName'), parameters('shortLocationCode'))]",
              "subscriptionId": "[parameters('hubSubscriptionID')]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "deployBastionInHub": {
                    "value": "[and(and(parameters('deployBastionInHub'), variables('isVnetHub')), parameters('deployHUB'))]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "isMultiRegion": {
                    "value": "[parameters('isMultiRegion')]"
                  },
                  "shortLocationCode": {
                    "value": "[parameters('shortLocationCode')]"
                  },
                  "AddressSpace": {
                    "value": "[parameters('AddressSpace')]"
                  },
                  "hubAddressSpace": {
                    "value": "[variables('AllAddressSpaces')[0]]"
                  },
                  "deployFirewallInHub": {
                    "value": "[and(and(parameters('deployFirewallInHub'), variables('isVnetHub')), parameters('deployHUB'))]"
                  },
                  "AzureFirewallTier": {
                    "value": "[parameters('AzureFirewallTier')]"
                  },
                  "hubRgName": "[if(and(parameters('deployHUB'), variables('isVnetHub')), createObject('value', variables('varHubRgName')), createObject('value', 'none'))]",
                  "deployFirewallrules": {
                    "value": "[and(and(parameters('deployFirewallrules'), variables('isVnetHub')), parameters('deployHUB'))]"
                  },
                  "deployGatewayInHub": {
                    "value": "[and(and(parameters('deployGatewayInHub'), variables('isVnetHub')), parameters('deployHUB'))]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "AllSpokeAddressSpaces": {
                    "value": "[skip(variables('AllAddressSpaces'), 1)]"
                  },
                  "SecondRegionAddressSpace": "[if(parameters('isMultiRegion'), createObject('value', parameters('SecondRegionAddressSpace')), createObject('value', ''))]",
                  "vpnGwBgpAsn": "[if(parameters('hubBgp'), createObject('value', parameters('hubBgpAsn')), createObject('value', 65515))]",
                  "vpnGwEnebaleBgp": {
                    "value": "[parameters('hubBgp')]"
                  },
                  "deployUDRs": {
                    "value": "[parameters('deployUDRs')]"
                  },
                  "bastionSku": {
                    "value": "[parameters('bastionInHubSKU')]"
                  },
                  "firewallDNSproxy": {
                    "value": "[and(and(parameters('firewallDNSproxy'), parameters('deployFirewallInHub')), variables('isVnetHub'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "13322945589923233864"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "shortLocationCode": {
                      "type": "string"
                    },
                    "AddressSpace": {
                      "type": "string"
                    },
                    "isMultiRegion": {
                      "type": "bool"
                    },
                    "hubAddressSpace": {
                      "type": "string"
                    },
                    "deployBastionInHub": {
                      "type": "bool"
                    },
                    "bastionSku": {
                      "type": "string"
                    },
                    "deployFirewallInHub": {
                      "type": "bool"
                    },
                    "AzureFirewallTier": {
                      "type": "string"
                    },
                    "hubRgName": {
                      "type": "string"
                    },
                    "deployFirewallrules": {
                      "type": "bool"
                    },
                    "deployUDRs": {
                      "type": "bool"
                    },
                    "deployGatewayInHub": {
                      "type": "bool"
                    },
                    "tagsByResource": {
                      "type": "object"
                    },
                    "AllSpokeAddressSpaces": {
                      "type": "array"
                    },
                    "SecondRegionAddressSpace": {
                      "type": "string"
                    },
                    "firewallDNSproxy": {
                      "type": "bool"
                    },
                    "vpnGwEnebaleBgp": {
                      "type": "bool"
                    },
                    "vpnGwBgpAsn": {
                      "type": "int"
                    }
                  },
                  "variables": {
                    "firewallSubnetPrefix": "[cidrSubnet(parameters('hubAddressSpace'), 26, 0)]",
                    "bastionSubnetPrefix": "[cidrSubnet(parameters('hubAddressSpace'), 26, 1)]",
                    "gatewaySubnetPrefix": "[cidrSubnet(parameters('hubAddressSpace'), 26, 2)]",
                    "firewallIP": "[cidrHost(variables('firewallSubnetPrefix'), 3)]",
                    "bastionName": "[format('Bastion-Hub-{0}', parameters('shortLocationCode'))]",
                    "rtNameVPNgwSubnet": "[format('RT-Hub-GatewaySubnet-{0}', parameters('shortLocationCode'))]",
                    "hubVnetName": "[format('VNET-Hub-{0}', parameters('shortLocationCode'))]",
                    "firewallName": "[format('Firewall-Hub-{0}', parameters('shortLocationCode'))]",
                    "gatewayName": "[format('Gateway-Hub-{0}', parameters('shortLocationCode'))]",
                    "bastionNsgName": "[format('NSG-Bastion-Hub-{0}', parameters('shortLocationCode'))]"
                  },
                  "resources": [
                    {
                      "condition": "[parameters('deployBastionInHub')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('bastionNsgName')]",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "nsgName": {
                            "value": "[variables('bastionNsgName')]"
                          },
                          "isBastionNSG": {
                            "value": true
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "9437059312845360120"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "nsgName": {
                              "type": "string"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "isBastionNSG": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "variables": {
                            "securityRules": "[if(parameters('isBastionNSG'), createArray(createObject('name', 'AllowGatewayManager', 'properties', createObject('description', 'Allow GatewayManager', 'protocol', '*', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', 'GatewayManager', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 2702, 'direction', 'Inbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowHttpsInBound', 'properties', createObject('description', 'Allow HTTPs', 'protocol', '*', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', 'Internet', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 2703, 'direction', 'Inbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowSshRdpOutbound', 'properties', createObject('protocol', '*', 'sourcePortRange', '*', 'sourceAddressPrefix', '*', 'destinationAddressPrefix', 'VirtualNetwork', 'access', 'Allow', 'priority', 100, 'direction', 'Outbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray('22', '3389'), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowAzureCloudOutbound', 'properties', createObject('protocol', 'TCP', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', '*', 'destinationAddressPrefix', 'AzureCloud', 'access', 'Allow', 'priority', 110, 'direction', 'Outbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray()))), createArray())]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkSecurityGroups",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('nsgName')]",
                              "location": "[parameters('location')]",
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), createObject())]",
                              "properties": {
                                "securityRules": "[variables('securityRules')]"
                              }
                            }
                          ],
                          "outputs": {
                            "nsgID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "hubvnet",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "vnetAddressSpcae": {
                            "value": "[parameters('hubAddressSpace')]"
                          },
                          "rtGwID": "[if(and(parameters('deployFirewallInHub'), parameters('deployGatewayInHub')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable-VPNGW'), '2022-09-01').outputs.rtID.value), createObject('value', 'none'))]",
                          "bastionNSGID": "[if(parameters('deployBastionInHub'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('bastionNsgName')), '2022-09-01').outputs.nsgID.value), createObject('value', 'none'))]",
                          "vnetname": {
                            "value": "[variables('hubVnetName')]"
                          },
                          "bastionSubnetPrefix": {
                            "value": "[variables('bastionSubnetPrefix')]"
                          },
                          "firewallSubnetPrefix": {
                            "value": "[variables('firewallSubnetPrefix')]"
                          },
                          "GatewaySubnetPrefix": {
                            "value": "[variables('gatewaySubnetPrefix')]"
                          },
                          "deployDefaultSubnet": {
                            "value": false
                          },
                          "deployBastionSubnet": {
                            "value": "[parameters('deployBastionInHub')]"
                          },
                          "deployFirewallSubnet": {
                            "value": "[parameters('deployFirewallInHub')]"
                          },
                          "deployGatewaySubnet": {
                            "value": "[parameters('deployGatewayInHub')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "azFwIp": {
                            "value": "[variables('firewallIP')]"
                          },
                          "rtFwID": "[if(and(and(parameters('isMultiRegion'), parameters('deployFirewallInHub')), parameters('deployUDRs')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable-FW'), '2022-09-01').outputs.rtID.value), createObject('value', 'none'))]",
                          "firewallDNSproxy": {
                            "value": "[parameters('firewallDNSproxy')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16985540615874253541"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vnetname": {
                              "type": "string"
                            },
                            "vnetAddressSpcae": {
                              "type": "string"
                            },
                            "defaultSubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "bastionSubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "firewallSubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "GatewaySubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "nsgID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "bastionNSGID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "rtDefID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "rtGwID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "rtFwID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "deployDefaultSubnet": {
                              "type": "bool"
                            },
                            "deployBastionSubnet": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "deployFirewallSubnet": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "deployGatewaySubnet": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "firewallDNSproxy": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "azFwIp": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "defaultOutboundAccess": {
                              "type": "bool",
                              "defaultValue": true
                            }
                          },
                          "variables": {
                            "defaultSubnet": "[if(parameters('deployDefaultSubnet'), createArray(createObject('name', 'default', 'properties', createObject('addressPrefix', parameters('defaultSubnetPrefix'), 'networkSecurityGroup', if(equals(parameters('nsgID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}', parameters('nsgID')))), 'routeTable', if(equals(parameters('rtDefID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtDefID')))), 'defaultOutboundAccess', parameters('defaultOutboundAccess')))), createArray())]",
                            "bastionSubnet": "[if(parameters('deployBastionSubnet'), createArray(createObject('name', 'AzureBastionSubnet', 'properties', createObject('addressPrefix', parameters('bastionSubnetPrefix'), 'networkSecurityGroup', if(equals(parameters('bastionNSGID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}', parameters('bastionNSGID'))))))), createArray())]",
                            "firewallSubnet": "[if(parameters('deployFirewallSubnet'), createArray(createObject('name', 'AzureFirewallSubnet', 'properties', createObject('addressPrefix', parameters('firewallSubnetPrefix'), 'routeTable', if(equals(parameters('rtFwID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtFwID'))))))), createArray())]",
                            "gatewaySubnet": "[if(parameters('deployGatewaySubnet'), createArray(createObject('name', 'GatewaySubnet', 'properties', createObject('addressPrefix', parameters('GatewaySubnetPrefix'), 'routeTable', if(equals(parameters('rtGwID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtGwID'))))))), createArray())]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('vnetname')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "dhcpOptions": {
                                  "dnsServers": "[if(parameters('firewallDNSproxy'), array(parameters('azFwIp')), createArray())]"
                                },
                                "addressSpace": {
                                  "addressPrefixes": [
                                    "[parameters('vnetAddressSpcae')]"
                                  ]
                                },
                                "subnets": "[concat(variables('defaultSubnet'), variables('bastionSubnet'), variables('firewallSubnet'), variables('gatewaySubnet'))]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), createObject())]"
                            }
                          ],
                          "outputs": {
                            "vnetName": {
                              "type": "string",
                              "value": "[parameters('vnetname')]"
                            },
                            "vnetID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))]"
                            },
                            "vnetAddressSpace": {
                              "type": "array",
                              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname')), '2024-07-01').addressSpace.addressPrefixes]"
                            },
                            "defaultSubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployDefaultSubnet'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetname'), 'default'), 'Not deployed')]"
                            },
                            "bastionSubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployBastionSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureBastionSubnet'), 'Not deployed')]"
                            },
                            "firewallSubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployFirewallSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureFirewallSubnet'), 'Not deployed')]"
                            },
                            "gatewaySubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployGatewaySubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'GatewaySubnet'), 'Not deployed')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('bastionNsgName'))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable-FW')]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable-VPNGW')]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployBastionInHub')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "bastion",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "subnetID": "[if(parameters('deployBastionInHub'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.bastionSubnetID.value), createObject('value', ''))]",
                          "bastionName": {
                            "value": "[variables('bastionName')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "bastionSku": {
                            "value": "[parameters('bastionSku')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "17645327430110910640"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "bastionName": {
                              "type": "string"
                            },
                            "subnetID": {
                              "type": "string"
                            },
                            "bastionSku": {
                              "type": "string",
                              "allowedValues": [
                                "Basic",
                                "Standard",
                                "Premium"
                              ]
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/bastionHosts",
                              "apiVersion": "2024-01-01",
                              "name": "[parameters('bastionName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "IpConf",
                                    "properties": {
                                      "subnet": {
                                        "id": "[parameters('subnetID')]"
                                      },
                                      "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                                      }
                                    }
                                  }
                                ]
                              },
                              "sku": {
                                "name": "[parameters('bastionSku')]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/bastionHosts'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2024-07-01",
                              "name": "[format('{0}-pip', parameters('bastionName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "publicIPAddressVersion": "IPv4",
                                "publicIPAllocationMethod": "Static"
                              },
                              "sku": {
                                "tier": "Regional",
                                "name": "Standard"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployFirewallInHub')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "hubFirewall",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "deployInVWan": {
                            "value": false
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "firewallName": {
                            "value": "[variables('firewallName')]"
                          },
                          "azfwsubnetid": "[if(parameters('deployFirewallInHub'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.firewallSubnetID.value), createObject('value', ''))]",
                          "azfwTier": {
                            "value": "[parameters('AzureFirewallTier')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "firewallDNSproxy": {
                            "value": "[parameters('firewallDNSproxy')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "3755135132406788936"
                            }
                          },
                          "parameters": {
                            "firewallName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "azfwTier": {
                              "type": "string",
                              "allowedValues": [
                                "Standard",
                                "Premium"
                              ]
                            },
                            "azfwsubnetid": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "vWanID": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "vWanAzFwPublicIPcount": {
                              "type": "int",
                              "defaultValue": 1
                            },
                            "deployInVWan": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "firewallDNSproxy": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "variables": {
                            "azfwSKUname": "[if(parameters('deployInVWan'), 'AZFW_Hub', 'AZFW_VNet')]",
                            "pipName": "[format('{0}-pip', parameters('firewallName'))]",
                            "firewallPolicyName": "[format('{0}-policy', parameters('firewallName'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/azureFirewalls",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('firewallName')]",
                              "location": "[parameters('location')]",
                              "zones": [],
                              "properties": {
                                "sku": {
                                  "name": "[variables('azfwSKUname')]",
                                  "tier": "[parameters('azfwTier')]"
                                },
                                "firewallPolicy": {
                                  "id": "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
                                },
                                "ipConfigurations": "[if(parameters('deployInVWan'), null(), createArray(createObject('properties', createObject('publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))), 'subnet', createObject('id', parameters('azfwsubnetid'))), 'name', 'ipconfig1')))]",
                                "virtualHub": "[if(parameters('deployInVWan'), createObject('id', parameters('vWanID')), null())]",
                                "hubIPAddresses": "[if(parameters('deployInVWan'), createObject('publicIPs', createObject('count', parameters('vWanAzFwPublicIPcount'))), null())]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/azureFirewalls'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",
                                "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/firewallPolicies",
                              "apiVersion": "2024-07-01",
                              "name": "[variables('firewallPolicyName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "sku": {
                                  "tier": "[parameters('azfwTier')]"
                                },
                                "threatIntelMode": "Alert",
                                "dnsSettings": {
                                  "enableProxy": "[parameters('firewallDNSproxy')]"
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/firewallPolicies'), createObject())]"
                            },
                            {
                              "condition": "[not(parameters('deployInVWan'))]",
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2024-07-01",
                              "name": "[variables('pipName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "publicIPAddressVersion": "IPv4",
                                "publicIPAllocationMethod": "Static"
                              },
                              "sku": {
                                "tier": "Regional",
                                "name": "Standard"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                            }
                          ],
                          "outputs": {
                            "azFwIP": {
                              "type": "string",
                              "value": "[if(parameters('deployInVWan'), reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2024-07-01').hubIPAddresses.privateIPAddress, reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2024-07-01').ipConfigurations[0].properties.privateIPAddress)]"
                            },
                            "azFwIPvWan": {
                              "type": "array",
                              "value": "[if(parameters('deployInVWan'), reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2024-07-01').hubIPAddresses.publicIPs.addresses, createArray())]"
                            },
                            "azFwID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName'))]"
                            },
                            "azFwPolicyName": {
                              "type": "string",
                              "value": "[variables('firewallPolicyName')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')]"
                      ]
                    },
                    {
                      "condition": "[and(parameters('deployFirewallrules'), parameters('deployFirewallInHub'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "firewallRules",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "azFwPolicyName": "[if(and(parameters('deployFirewallInHub'), parameters('deployFirewallrules')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall'), '2022-09-01').outputs.azFwPolicyName.value), createObject('value', ''))]",
                          "AddressSpace": {
                            "value": "[parameters('AddressSpace')]"
                          },
                          "SecondRegionAddressSpace": {
                            "value": "[parameters('SecondRegionAddressSpace')]"
                          },
                          "isMultiRegion": {
                            "value": "[parameters('isMultiRegion')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "15266096257810825967"
                            }
                          },
                          "parameters": {
                            "azFwPolicyName": {
                              "type": "string"
                            },
                            "ruleCollectiongroupName": {
                              "type": "string",
                              "defaultValue": "HubSpokeLabBuilderCollectionGroup"
                            },
                            "AddressSpace": {
                              "type": "string"
                            },
                            "SecondRegionAddressSpace": {
                              "type": "string"
                            },
                            "isMultiRegion": {
                              "type": "bool"
                            }
                          },
                          "variables": {
                            "addressSpaces": "[union(array(parameters('AddressSpace')), if(parameters('isMultiRegion'), array(parameters('SecondRegionAddressSpace')), createArray()))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                              "apiVersion": "2024-07-01",
                              "name": "[format('{0}/{1}', parameters('azFwPolicyName'), parameters('ruleCollectiongroupName'))]",
                              "properties": {
                                "priority": 400,
                                "ruleCollections": [
                                  {
                                    "name": "NetworkRules",
                                    "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                                    "action": {
                                      "type": "Allow"
                                    },
                                    "priority": 100,
                                    "rules": [
                                      {
                                        "name": "AllowLocalTraffic",
                                        "ruleType": "NetworkRule",
                                        "sourceAddresses": "[variables('addressSpaces')]",
                                        "destinationAddresses": "[variables('addressSpaces')]",
                                        "ipProtocols": [
                                          "Any"
                                        ],
                                        "destinationPorts": [
                                          "*"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "name": "ApplicationRules",
                                    "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                                    "action": {
                                      "type": "Allow"
                                    },
                                    "priority": 200,
                                    "rules": [
                                      {
                                        "name": "AllowHttpHttps",
                                        "ruleType": "ApplicationRule",
                                        "sourceAddresses": [
                                          "[parameters('AddressSpace')]"
                                        ],
                                        "sourceIpGroups": [],
                                        "destinationAddresses": [],
                                        "terminateTLS": false,
                                        "fqdnTags": [],
                                        "webCategories": [],
                                        "targetUrls": [],
                                        "targetFqdns": [
                                          "*"
                                        ],
                                        "protocols": [
                                          {
                                            "protocolType": "Http",
                                            "port": 80
                                          },
                                          {
                                            "protocolType": "Https",
                                            "port": 443
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall')]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployGatewayInHub')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('gatewayName')]",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "vpnGatewayName": {
                            "value": "[variables('gatewayName')]"
                          },
                          "vpnGatewaySubnetID": "[if(parameters('deployGatewayInHub'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.gatewaySubnetID.value), createObject('value', ''))]",
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "vpnGatewayBgpAsn": "[if(parameters('vpnGwEnebaleBgp'), createObject('value', parameters('vpnGwBgpAsn')), createObject('value', 65515))]",
                          "vpnGatewayEnableBgp": {
                            "value": "[parameters('vpnGwEnebaleBgp')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "17067597851478703533"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vpnGatewayName": {
                              "type": "string"
                            },
                            "vpnGatewaySubnetID": {
                              "type": "string"
                            },
                            "vpnGatewaySKU": {
                              "type": "string",
                              "defaultValue": "VpnGw1"
                            },
                            "vpnGatewayType": {
                              "type": "string",
                              "defaultValue": "Vpn"
                            },
                            "vpnGatewayVPNtype": {
                              "type": "string",
                              "defaultValue": "RouteBased"
                            },
                            "vpnGatewayGen": {
                              "type": "string",
                              "defaultValue": "Generation1"
                            },
                            "vpnGatewayEnableBgp": {
                              "type": "bool"
                            },
                            "vpnGatewayBgpAsn": {
                              "type": "int"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "variables": {
                            "pipName": "[format('{0}-pip', parameters('vpnGatewayName'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworkGateways",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('vpnGatewayName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "gatewayType": "[parameters('vpnGatewayType')]",
                                "vpnType": "[parameters('vpnGatewayVPNtype')]",
                                "enableBgp": "[parameters('vpnGatewayEnableBgp')]",
                                "bgpSettings": {
                                  "asn": "[parameters('vpnGatewayBgpAsn')]"
                                },
                                "sku": {
                                  "name": "[parameters('vpnGatewaySKU')]",
                                  "tier": "[parameters('vpnGatewaySKU')]"
                                },
                                "vpnGatewayGeneration": "[parameters('vpnGatewayGen')]",
                                "activeActive": false,
                                "ipConfigurations": [
                                  {
                                    "name": "ipConfig",
                                    "properties": {
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[parameters('vpnGatewaySubnetID')]"
                                      },
                                      "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                                      }
                                    }
                                  }
                                ]
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworkGateways'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2024-07-01",
                              "name": "[variables('pipName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "publicIPAddressVersion": "IPv4",
                                "publicIPAllocationMethod": "Static"
                              },
                              "sku": {
                                "tier": "Regional",
                                "name": "Standard"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                            }
                          ],
                          "outputs": {
                            "vpnGwPublicIP": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('pipName')), '2024-07-01').ipAddress]"
                            },
                            "vpnGwID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName'))]"
                            },
                            "vpnGwBgpPeeringAddress": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName')), '2024-07-01').bgpSettings.bgpPeeringAddress]"
                            },
                            "vpnGwName": {
                              "type": "string",
                              "value": "[parameters('vpnGatewayName')]"
                            },
                            "vpnGwAsn": {
                              "type": "int",
                              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName')), '2024-07-01').bgpSettings.asn]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')]"
                      ]
                    },
                    {
                      "condition": "[and(and(parameters('deployFirewallInHub'), parameters('deployGatewayInHub')), parameters('deployUDRs'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "routeTable-VPNGW",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "rtName": {
                            "value": "[variables('rtNameVPNgwSubnet')]"
                          },
                          "disableRouteProp": {
                            "value": false
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16306892622810336252"
                            }
                          },
                          "parameters": {
                            "rtName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "disableRouteProp": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "isFirewallSubnet": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/routeTables",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('rtName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "disableBgpRoutePropagation": "[parameters('disableRouteProp')]",
                                "routes": "[if(parameters('isFirewallSubnet'), createArray(createObject('name', 'toInternet', 'properties', createObject('nextHopType', 'Internet', 'addressPrefix', '0.0.0.0/0'))), createArray())]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/routeTables'), createObject())]"
                            }
                          ],
                          "outputs": {
                            "rtID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/routeTables', parameters('rtName'))]"
                            },
                            "rtName": {
                              "type": "string",
                              "value": "[parameters('rtName')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "routeVPNgw",
                        "count": "[length(parameters('AllSpokeAddressSpaces'))]"
                      },
                      "condition": "[and(and(parameters('deployFirewallInHub'), parameters('deployGatewayInHub')), parameters('deployUDRs'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('Route-vpngw{0}', copyIndex())]",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "routeAddressPrefix": {
                            "value": "[parameters('AllSpokeAddressSpaces')[copyIndex()]]"
                          },
                          "routeName": "[if(and(and(parameters('deployFirewallInHub'), parameters('deployGatewayInHub')), parameters('deployUDRs')), createObject('value', format('{0}/LocalRoute{1}', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable-VPNGW'), '2022-09-01').outputs.rtName.value, copyIndex())), createObject('value', 'dummy3'))]",
                          "routeNextHopIpAddress": "[if(and(parameters('deployFirewallInHub'), parameters('deployUDRs')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall'), '2022-09-01').outputs.azFwIP.value), createObject('value', '1.2.3.4'))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "12643868851101357934"
                            }
                          },
                          "parameters": {
                            "routeName": {
                              "type": "string"
                            },
                            "routeNextHopType": {
                              "type": "string",
                              "defaultValue": "VirtualAppliance",
                              "allowedValues": [
                                "VirtualAppliance",
                                "Internet",
                                "VnetLocal",
                                "VirtualNetworkGateway",
                                "None"
                              ]
                            },
                            "routeAddressPrefix": {
                              "type": "string"
                            },
                            "routeNextHopIpAddress": {
                              "type": "string",
                              "defaultValue": ""
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/routeTables/routes",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('routeName')]",
                              "properties": {
                                "nextHopType": "[parameters('routeNextHopType')]",
                                "addressPrefix": "[parameters('routeAddressPrefix')]",
                                "nextHopIpAddress": "[parameters('routeNextHopIpAddress')]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall')]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable-VPNGW')]"
                      ]
                    },
                    {
                      "condition": "[and(and(parameters('deployFirewallInHub'), parameters('deployUDRs')), parameters('isMultiRegion'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "routeTable-FW",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "rtName": {
                            "value": "[format('RT-Hub-FW-{0}', parameters('shortLocationCode'))]"
                          },
                          "disableRouteProp": {
                            "value": false
                          },
                          "isFirewallSubnet": {
                            "value": true
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16306892622810336252"
                            }
                          },
                          "parameters": {
                            "rtName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "disableRouteProp": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "isFirewallSubnet": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/routeTables",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('rtName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "disableBgpRoutePropagation": "[parameters('disableRouteProp')]",
                                "routes": "[if(parameters('isFirewallSubnet'), createArray(createObject('name', 'toInternet', 'properties', createObject('nextHopType', 'Internet', 'addressPrefix', '0.0.0.0/0'))), createArray())]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/routeTables'), createObject())]"
                            }
                          ],
                          "outputs": {
                            "rtID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/routeTables', parameters('rtName'))]"
                            },
                            "rtName": {
                              "type": "string",
                              "value": "[parameters('rtName')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "hubVnetID": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.vnetID.value]"
                    },
                    "azFwIp": {
                      "type": "string",
                      "value": "[if(parameters('deployFirewallInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall'), '2022-09-01').outputs.azFwIP.value, '1.2.3.4')]"
                    },
                    "hubRgName": {
                      "type": "string",
                      "value": "[parameters('hubRgName')]"
                    },
                    "HubResourceGroupName": {
                      "type": "string",
                      "value": "[parameters('hubRgName')]"
                    },
                    "hubVnetName": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.vnetName.value]"
                    },
                    "hubVnetAddressSpace": {
                      "type": "array",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.vnetAddressSpace.value]"
                    },
                    "hubGatewayPublicIP": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwPublicIP.value, 'none')]"
                    },
                    "hubGatewayID": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwID.value, 'none')]"
                    },
                    "HubGwBgpPeeringAddress": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwBgpPeeringAddress.value, 'none')]"
                    },
                    "rtFirewallName": {
                      "type": "string",
                      "value": "[if(and(and(parameters('deployFirewallInHub'), parameters('deployUDRs')), parameters('isMultiRegion')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable-FW'), '2022-09-01').outputs.rtName.value, 'none')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "hubrg"
              ]
            },
            "vwan": {
              "condition": "[and(parameters('deployHUB'), variables('isVwanHub'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('shortLocationCode'))]",
              "subscriptionId": "[parameters('hubSubscriptionID')]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "shortLocationCode": {
                    "value": "[parameters('shortLocationCode')]"
                  },
                  "isMultiRegion": {
                    "value": "[parameters('isMultiRegion')]"
                  },
                  "vWanID": {
                    "value": "[parameters('vWanID')]"
                  },
                  "deployFirewallInHub": {
                    "value": "[and(parameters('deployFirewallInHub'), variables('isVwanHub'))]"
                  },
                  "AddressSpace": {
                    "value": "[variables('AllAddressSpaces')[0]]"
                  },
                  "SecondRegionAddressSpace": "[if(parameters('isMultiRegion'), createObject('value', parameters('SecondRegionAddressSpace')), createObject('value', ''))]",
                  "AzureFirewallTier": {
                    "value": "[parameters('AzureFirewallTier')]"
                  },
                  "firewallDNSproxy": {
                    "value": "[and(parameters('firewallDNSproxy'), variables('isVwanHub'))]"
                  },
                  "deployFirewallrules": {
                    "value": "[and(parameters('deployFirewallrules'), variables('isVwanHub'))]"
                  },
                  "hubRgName": {
                    "value": "[parameters('hubRgName')]"
                  },
                  "deployGatewayInHub": {
                    "value": "[and(parameters('deployGatewayInHub'), variables('isVwanHub'))]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "internetTrafficRoutingPolicy": {
                    "value": "[parameters('internetTrafficRoutingPolicy')]"
                  },
                  "privateTrafficRoutingPolicy": {
                    "value": "[parameters('privateTrafficRoutingPolicy')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "2295888306499319569"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "shortLocationCode": {
                      "type": "string"
                    },
                    "isMultiRegion": {
                      "type": "bool"
                    },
                    "vWanID": {
                      "type": "string"
                    },
                    "AddressSpace": {
                      "type": "string"
                    },
                    "SecondRegionAddressSpace": {
                      "type": "string"
                    },
                    "deployFirewallInHub": {
                      "type": "bool"
                    },
                    "AzureFirewallTier": {
                      "type": "string"
                    },
                    "hubRgName": {
                      "type": "string"
                    },
                    "deployFirewallrules": {
                      "type": "bool"
                    },
                    "deployGatewayInHub": {
                      "type": "bool"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "firewallDNSproxy": {
                      "type": "bool"
                    },
                    "internetTrafficRoutingPolicy": {
                      "type": "bool"
                    },
                    "privateTrafficRoutingPolicy": {
                      "type": "bool"
                    }
                  },
                  "variables": {
                    "firewallName": "[format('Firewall-Hub-{0}', parameters('shortLocationCode'))]",
                    "gatewayName": "[format('Gateway-Hub-{0}', parameters('shortLocationCode'))]",
                    "vwanHubName": "[format('HUB-{0}', parameters('shortLocationCode'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('vwanHubName')]",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "HubName": {
                            "value": "[variables('vwanHubName')]"
                          },
                          "AddressPrefix": {
                            "value": "[parameters('AddressSpace')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "vWanID": {
                            "value": "[parameters('vWanID')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "12825315759225212584"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vWanID": {
                              "type": "string"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "AddressPrefix": {
                              "type": "string"
                            },
                            "HubName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualHubs",
                              "apiVersion": "2024-05-01",
                              "name": "[parameters('HubName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "allowBranchToBranchTraffic": true,
                                "hubRoutingPreference": "ExpressRoute",
                                "virtualRouterAsn": 65515,
                                "virtualRouterAutoScaleConfiguration": {
                                  "minCapacity": 2
                                },
                                "addressPrefix": "[parameters('AddressPrefix')]",
                                "virtualWan": {
                                  "id": "[parameters('vWanID')]"
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualHubs'), createObject())]"
                            }
                          ],
                          "outputs": {
                            "ID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/virtualHubs', parameters('HubName'))]"
                            },
                            "Name": {
                              "type": "string",
                              "value": "[parameters('HubName')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "condition": "[parameters('deployFirewallInHub')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('firewallName')]",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "deployInVWan": {
                            "value": true
                          },
                          "azfwTier": {
                            "value": "[parameters('AzureFirewallTier')]"
                          },
                          "firewallName": {
                            "value": "[variables('firewallName')]"
                          },
                          "vWanID": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vwanHubName')), '2022-09-01').outputs.ID.value]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "firewallDNSproxy": {
                            "value": "[parameters('firewallDNSproxy')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "3755135132406788936"
                            }
                          },
                          "parameters": {
                            "firewallName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "azfwTier": {
                              "type": "string",
                              "allowedValues": [
                                "Standard",
                                "Premium"
                              ]
                            },
                            "azfwsubnetid": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "vWanID": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "vWanAzFwPublicIPcount": {
                              "type": "int",
                              "defaultValue": 1
                            },
                            "deployInVWan": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "firewallDNSproxy": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "variables": {
                            "azfwSKUname": "[if(parameters('deployInVWan'), 'AZFW_Hub', 'AZFW_VNet')]",
                            "pipName": "[format('{0}-pip', parameters('firewallName'))]",
                            "firewallPolicyName": "[format('{0}-policy', parameters('firewallName'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/azureFirewalls",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('firewallName')]",
                              "location": "[parameters('location')]",
                              "zones": [],
                              "properties": {
                                "sku": {
                                  "name": "[variables('azfwSKUname')]",
                                  "tier": "[parameters('azfwTier')]"
                                },
                                "firewallPolicy": {
                                  "id": "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
                                },
                                "ipConfigurations": "[if(parameters('deployInVWan'), null(), createArray(createObject('properties', createObject('publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))), 'subnet', createObject('id', parameters('azfwsubnetid'))), 'name', 'ipconfig1')))]",
                                "virtualHub": "[if(parameters('deployInVWan'), createObject('id', parameters('vWanID')), null())]",
                                "hubIPAddresses": "[if(parameters('deployInVWan'), createObject('publicIPs', createObject('count', parameters('vWanAzFwPublicIPcount'))), null())]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/azureFirewalls'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",
                                "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/firewallPolicies",
                              "apiVersion": "2024-07-01",
                              "name": "[variables('firewallPolicyName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "sku": {
                                  "tier": "[parameters('azfwTier')]"
                                },
                                "threatIntelMode": "Alert",
                                "dnsSettings": {
                                  "enableProxy": "[parameters('firewallDNSproxy')]"
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/firewallPolicies'), createObject())]"
                            },
                            {
                              "condition": "[not(parameters('deployInVWan'))]",
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2024-07-01",
                              "name": "[variables('pipName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "publicIPAddressVersion": "IPv4",
                                "publicIPAllocationMethod": "Static"
                              },
                              "sku": {
                                "tier": "Regional",
                                "name": "Standard"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                            }
                          ],
                          "outputs": {
                            "azFwIP": {
                              "type": "string",
                              "value": "[if(parameters('deployInVWan'), reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2024-07-01').hubIPAddresses.privateIPAddress, reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2024-07-01').ipConfigurations[0].properties.privateIPAddress)]"
                            },
                            "azFwIPvWan": {
                              "type": "array",
                              "value": "[if(parameters('deployInVWan'), reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2024-07-01').hubIPAddresses.publicIPs.addresses, createArray())]"
                            },
                            "azFwID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName'))]"
                            },
                            "azFwPolicyName": {
                              "type": "string",
                              "value": "[variables('firewallPolicyName')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vwanHubName'))]"
                      ]
                    },
                    {
                      "condition": "[and(parameters('deployFirewallrules'), parameters('deployFirewallInHub'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('firewallRules-{0}', parameters('shortLocationCode'))]",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "azFwPolicyName": "[if(and(parameters('deployFirewallInHub'), parameters('deployFirewallrules')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('firewallName')), '2022-09-01').outputs.azFwPolicyName.value), createObject('value', 'none'))]",
                          "AddressSpace": {
                            "value": "[parameters('AddressSpace')]"
                          },
                          "isMultiRegion": {
                            "value": "[parameters('isMultiRegion')]"
                          },
                          "SecondRegionAddressSpace": "[if(parameters('isMultiRegion'), createObject('value', parameters('SecondRegionAddressSpace')), createObject('value', 'none'))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "15266096257810825967"
                            }
                          },
                          "parameters": {
                            "azFwPolicyName": {
                              "type": "string"
                            },
                            "ruleCollectiongroupName": {
                              "type": "string",
                              "defaultValue": "HubSpokeLabBuilderCollectionGroup"
                            },
                            "AddressSpace": {
                              "type": "string"
                            },
                            "SecondRegionAddressSpace": {
                              "type": "string"
                            },
                            "isMultiRegion": {
                              "type": "bool"
                            }
                          },
                          "variables": {
                            "addressSpaces": "[union(array(parameters('AddressSpace')), if(parameters('isMultiRegion'), array(parameters('SecondRegionAddressSpace')), createArray()))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                              "apiVersion": "2024-07-01",
                              "name": "[format('{0}/{1}', parameters('azFwPolicyName'), parameters('ruleCollectiongroupName'))]",
                              "properties": {
                                "priority": 400,
                                "ruleCollections": [
                                  {
                                    "name": "NetworkRules",
                                    "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                                    "action": {
                                      "type": "Allow"
                                    },
                                    "priority": 100,
                                    "rules": [
                                      {
                                        "name": "AllowLocalTraffic",
                                        "ruleType": "NetworkRule",
                                        "sourceAddresses": "[variables('addressSpaces')]",
                                        "destinationAddresses": "[variables('addressSpaces')]",
                                        "ipProtocols": [
                                          "Any"
                                        ],
                                        "destinationPorts": [
                                          "*"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "name": "ApplicationRules",
                                    "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                                    "action": {
                                      "type": "Allow"
                                    },
                                    "priority": 200,
                                    "rules": [
                                      {
                                        "name": "AllowHttpHttps",
                                        "ruleType": "ApplicationRule",
                                        "sourceAddresses": [
                                          "[parameters('AddressSpace')]"
                                        ],
                                        "sourceIpGroups": [],
                                        "destinationAddresses": [],
                                        "terminateTLS": false,
                                        "fqdnTags": [],
                                        "webCategories": [],
                                        "targetUrls": [],
                                        "targetFqdns": [
                                          "*"
                                        ],
                                        "protocols": [
                                          {
                                            "protocolType": "Http",
                                            "port": 80
                                          },
                                          {
                                            "protocolType": "Https",
                                            "port": 443
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('firewallName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('routeTable-{0}', parameters('shortLocationCode'))]",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vwanHubName": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vwanHubName')), '2022-09-01').outputs.Name.value]"
                          },
                          "AzFirewallID": "[if(parameters('deployFirewallInHub'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('firewallName')), '2022-09-01').outputs.azFwID.value), createObject('value', 'none'))]",
                          "deployFirewallInHub": {
                            "value": "[parameters('deployFirewallInHub')]"
                          },
                          "internetTrafficRoutingPolicy": {
                            "value": "[parameters('internetTrafficRoutingPolicy')]"
                          },
                          "privateTrafficRoutingPolicy": {
                            "value": "[parameters('privateTrafficRoutingPolicy')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "13156476726140249367"
                            }
                          },
                          "parameters": {
                            "vwanHubName": {
                              "type": "string"
                            },
                            "AzFirewallID": {
                              "type": "string"
                            },
                            "deployFirewallInHub": {
                              "type": "bool"
                            },
                            "internetTrafficRoutingPolicy": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "privateTrafficRoutingPolicy": {
                              "type": "bool",
                              "defaultValue": true
                            }
                          },
                          "resources": [
                            {
                              "condition": "[not(parameters('deployFirewallInHub'))]",
                              "type": "Microsoft.Network/virtualHubs/hubRouteTables",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/defaultRouteTable', parameters('vwanHubName'))]",
                              "properties": {
                                "routes": [],
                                "labels": [
                                  "default"
                                ]
                              }
                            },
                            {
                              "condition": "[and(and(parameters('deployFirewallInHub'), not(parameters('internetTrafficRoutingPolicy'))), not(parameters('privateTrafficRoutingPolicy')))]",
                              "type": "Microsoft.Network/virtualHubs/hubRouteTables",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/defaultRouteTable', parameters('vwanHubName'))]",
                              "properties": {
                                "routes": [
                                  {
                                    "name": "all_traffic",
                                    "destinationType": "CIDR",
                                    "destinations": [
                                      "10.0.0.0/8",
                                      "172.16.0.0/12",
                                      "192.168.0.0/16",
                                      "0.0.0.0/0"
                                    ],
                                    "nextHopType": "ResourceId",
                                    "nextHop": "[parameters('AzFirewallID')]"
                                  }
                                ],
                                "labels": [
                                  "default"
                                ]
                              }
                            },
                            {
                              "condition": "[and(parameters('deployFirewallInHub'), or(parameters('internetTrafficRoutingPolicy'), parameters('privateTrafficRoutingPolicy')))]",
                              "type": "Microsoft.Network/virtualHubs/routingIntent",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/{1}-RoutingIntent', parameters('vwanHubName'), parameters('vwanHubName'))]",
                              "properties": {
                                "routingPolicies": "[if(and(equals(parameters('internetTrafficRoutingPolicy'), true()), equals(parameters('privateTrafficRoutingPolicy'), true())), createArray(createObject('name', 'PublicTraffic', 'destinations', createArray('Internet'), 'nextHop', parameters('AzFirewallID')), createObject('name', 'PrivateTraffic', 'destinations', createArray('PrivateTraffic'), 'nextHop', parameters('AzFirewallID'))), if(and(equals(parameters('internetTrafficRoutingPolicy'), true()), equals(parameters('privateTrafficRoutingPolicy'), false())), createArray(createObject('name', 'PublicTraffic', 'destinations', createArray('Internet'), 'nextHop', parameters('AzFirewallID'))), createArray(createObject('name', 'PrivateTraffic', 'destinations', createArray('PrivateTraffic'), 'nextHop', parameters('AzFirewallID')))))]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('firewallName'))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vwanHubName'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployGatewayInHub')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('gatewayName')]",
                      "resourceGroup": "[parameters('hubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "vpnGwName": {
                            "value": "[variables('gatewayName')]"
                          },
                          "vWanHubID": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vwanHubName')), '2022-09-01').outputs.ID.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "9360499694470220804"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vWanHubID": {
                              "type": "string"
                            },
                            "vpnGwName": {
                              "type": "string"
                            },
                            "vpnGwScaleUnits": {
                              "type": "int",
                              "defaultValue": 1,
                              "minValue": 1,
                              "maxValue": 25
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/vpnGateways",
                              "apiVersion": "2024-05-01",
                              "name": "[parameters('vpnGwName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "bgpSettings": {
                                  "asn": 65515
                                },
                                "vpnGatewayScaleUnit": "[parameters('vpnGwScaleUnits')]",
                                "virtualHub": {
                                  "id": "[parameters('vWanHubID')]"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "vpnGwID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/vpnGateways', parameters('vpnGwName'))]"
                            },
                            "vpnGwPip": {
                              "type": "array",
                              "value": "[reference(resourceId('Microsoft.Network/vpnGateways', parameters('vpnGwName')), '2024-05-01').ipConfigurations]"
                            },
                            "vpnGwBgpIp": {
                              "type": "array",
                              "value": "[reference(resourceId('Microsoft.Network/vpnGateways', parameters('vpnGwName')), '2024-05-01').bgpSettings.bgpPeeringAddresses]"
                            },
                            "vpnGwBgpAsn": {
                              "type": "int",
                              "value": "[reference(resourceId('Microsoft.Network/vpnGateways', parameters('vpnGwName')), '2024-05-01').bgpSettings.asn]"
                            },
                            "vpnGwName": {
                              "type": "string",
                              "value": "[parameters('vpnGwName')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vwanHubName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "vWanHubName": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vwanHubName')), '2022-09-01').outputs.Name.value]"
                    },
                    "HubResourceGroupName": {
                      "type": "string",
                      "value": "[parameters('hubRgName')]"
                    },
                    "vWanFwIP": {
                      "type": "string",
                      "value": "[if(parameters('deployFirewallInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('firewallName')), '2022-09-01').outputs.azFwIP.value, 'none')]"
                    },
                    "vpnGwBgpIp": {
                      "type": "array",
                      "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwBgpIp.value, createArray())]"
                    },
                    "vpnGwName": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwName.value, 'none')]"
                    },
                    "vWanHubID": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vwanHubName')), '2022-09-01').outputs.ID.value]"
                    }
                  }
                }
              }
            },
            "spokeVnets": {
              "copy": {
                "name": "spokeVnets",
                "count": "[length(range(1, parameters('amountOfSpokes')))]"
              },
              "condition": "[parameters('deploySpokes')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[copyIndex()], parameters('shortLocationCode'))]",
              "subscriptionId": "[parameters('spokeSubscriptionID')]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "shortLocationCode": {
                    "value": "[parameters('shortLocationCode')]"
                  },
                  "counter": {
                    "value": "[range(1, parameters('amountOfSpokes'))[copyIndex()]]"
                  },
                  "AddressSpace": {
                    "value": "[variables('AllAddressSpaces')[range(1, parameters('amountOfSpokes'))[copyIndex()]]]"
                  },
                  "adminPassword": {
                    "value": "[parameters('adminPassword')]"
                  },
                  "adminUsername": {
                    "value": "[parameters('adminUsername')]"
                  },
                  "deployVMsInSpokes": {
                    "value": "[parameters('deployVMsInSpokes')]"
                  },
                  "deployFirewallInHub": {
                    "value": "[and(parameters('deployFirewallInHub'), variables('isVnetHub'))]"
                  },
                  "AzureFirewallpip": "[if(and(parameters('deployHUB'), variables('isVnetHub')), createObject('value', reference('hubVnet').outputs.azFwIp.value), if(and(parameters('deployHUB'), variables('isVwanHub')), createObject('value', reference('vwan').outputs.vWanFwIP.value), createObject('value', 'none')))]",
                  "HubDeployed": {
                    "value": "[and(parameters('deployHUB'), variables('isVnetHub'))]"
                  },
                  "spokeRgName": {
                    "value": "[format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[copyIndex()], parameters('shortLocationCode'))]"
                  },
                  "vmSize": {
                    "value": "[parameters('vmSizeSpoke')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "osType": {
                    "value": "[parameters('osTypeSpoke')]"
                  },
                  "deployUDRs": "[if(parameters('deployAvnmUDRs'), createObject('value', false()), createObject('value', parameters('deployUDRs')))]",
                  "firewallDNSproxy": {
                    "value": "[and(parameters('firewallDNSproxy'), parameters('deployFirewallInHub'))]"
                  },
                  "dcrID": {
                    "value": "[coalesce(parameters('dcrID'), '')]"
                  },
                  "defaultOutboundAccess": {
                    "value": "[parameters('defaultOutboundAccess')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "13674644849095250626"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "shortLocationCode": {
                      "type": "string"
                    },
                    "AddressSpace": {
                      "type": "string"
                    },
                    "counter": {
                      "type": "int"
                    },
                    "adminUsername": {
                      "type": "string"
                    },
                    "adminPassword": {
                      "type": "securestring"
                    },
                    "deployVMsInSpokes": {
                      "type": "bool"
                    },
                    "deployFirewallInHub": {
                      "type": "bool"
                    },
                    "deployUDRs": {
                      "type": "bool"
                    },
                    "AzureFirewallpip": {
                      "type": "string"
                    },
                    "HubDeployed": {
                      "type": "bool"
                    },
                    "spokeRgName": {
                      "type": "string"
                    },
                    "vmSize": {
                      "type": "string"
                    },
                    "tagsByResource": {
                      "type": "object"
                    },
                    "osType": {
                      "type": "string"
                    },
                    "firewallDNSproxy": {
                      "type": "bool"
                    },
                    "defaultOutboundAccess": {
                      "type": "bool"
                    },
                    "dcrID": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "vnetName": "[format('VNET-Spoke{0}-{1}', parameters('counter'), parameters('shortLocationCode'))]",
                    "vmName": "[format('VM-Spoke{0}-{1}', parameters('counter'), parameters('shortLocationCode'))]",
                    "rtName": "[format('RT-Spoke{0}-{1}', parameters('counter'), parameters('shortLocationCode'))]",
                    "nsgName": "[format('NSG-Spoke{0}-{1}', parameters('counter'), parameters('shortLocationCode'))]",
                    "defaultSubnetPrefix": "[cidrSubnet(parameters('AddressSpace'), 26, 0)]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/resourceGroups",
                      "apiVersion": "2025-04-01",
                      "name": "[parameters('spokeRgName')]",
                      "location": "[parameters('location')]",
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/subscriptions/resourceGroups'), createObject())]"
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('vnetName')]",
                      "resourceGroup": "[parameters('spokeRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "vnetAddressSpcae": {
                            "value": "[parameters('AddressSpace')]"
                          },
                          "nsgID": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('spokeRgName')), 'Microsoft.Resources/deployments', variables('nsgName')), '2022-09-01').outputs.nsgID.value]"
                          },
                          "rtDefID": "[if(and(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), parameters('deployUDRs')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('spokeRgName')), 'Microsoft.Resources/deployments', variables('rtName')), '2022-09-01').outputs.rtID.value), createObject('value', 'none'))]",
                          "vnetname": {
                            "value": "[variables('vnetName')]"
                          },
                          "deployDefaultSubnet": {
                            "value": true
                          },
                          "defaultSubnetPrefix": {
                            "value": "[variables('defaultSubnetPrefix')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "firewallDNSproxy": {
                            "value": "[parameters('firewallDNSproxy')]"
                          },
                          "azFwIp": {
                            "value": "[parameters('AzureFirewallpip')]"
                          },
                          "defaultOutboundAccess": {
                            "value": "[parameters('defaultOutboundAccess')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16985540615874253541"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vnetname": {
                              "type": "string"
                            },
                            "vnetAddressSpcae": {
                              "type": "string"
                            },
                            "defaultSubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "bastionSubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "firewallSubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "GatewaySubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "nsgID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "bastionNSGID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "rtDefID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "rtGwID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "rtFwID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "deployDefaultSubnet": {
                              "type": "bool"
                            },
                            "deployBastionSubnet": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "deployFirewallSubnet": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "deployGatewaySubnet": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "firewallDNSproxy": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "azFwIp": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "defaultOutboundAccess": {
                              "type": "bool",
                              "defaultValue": true
                            }
                          },
                          "variables": {
                            "defaultSubnet": "[if(parameters('deployDefaultSubnet'), createArray(createObject('name', 'default', 'properties', createObject('addressPrefix', parameters('defaultSubnetPrefix'), 'networkSecurityGroup', if(equals(parameters('nsgID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}', parameters('nsgID')))), 'routeTable', if(equals(parameters('rtDefID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtDefID')))), 'defaultOutboundAccess', parameters('defaultOutboundAccess')))), createArray())]",
                            "bastionSubnet": "[if(parameters('deployBastionSubnet'), createArray(createObject('name', 'AzureBastionSubnet', 'properties', createObject('addressPrefix', parameters('bastionSubnetPrefix'), 'networkSecurityGroup', if(equals(parameters('bastionNSGID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}', parameters('bastionNSGID'))))))), createArray())]",
                            "firewallSubnet": "[if(parameters('deployFirewallSubnet'), createArray(createObject('name', 'AzureFirewallSubnet', 'properties', createObject('addressPrefix', parameters('firewallSubnetPrefix'), 'routeTable', if(equals(parameters('rtFwID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtFwID'))))))), createArray())]",
                            "gatewaySubnet": "[if(parameters('deployGatewaySubnet'), createArray(createObject('name', 'GatewaySubnet', 'properties', createObject('addressPrefix', parameters('GatewaySubnetPrefix'), 'routeTable', if(equals(parameters('rtGwID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtGwID'))))))), createArray())]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('vnetname')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "dhcpOptions": {
                                  "dnsServers": "[if(parameters('firewallDNSproxy'), array(parameters('azFwIp')), createArray())]"
                                },
                                "addressSpace": {
                                  "addressPrefixes": [
                                    "[parameters('vnetAddressSpcae')]"
                                  ]
                                },
                                "subnets": "[concat(variables('defaultSubnet'), variables('bastionSubnet'), variables('firewallSubnet'), variables('gatewaySubnet'))]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), createObject())]"
                            }
                          ],
                          "outputs": {
                            "vnetName": {
                              "type": "string",
                              "value": "[parameters('vnetname')]"
                            },
                            "vnetID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))]"
                            },
                            "vnetAddressSpace": {
                              "type": "array",
                              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname')), '2024-07-01').addressSpace.addressPrefixes]"
                            },
                            "defaultSubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployDefaultSubnet'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetname'), 'default'), 'Not deployed')]"
                            },
                            "bastionSubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployBastionSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureBastionSubnet'), 'Not deployed')]"
                            },
                            "firewallSubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployFirewallSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureFirewallSubnet'), 'Not deployed')]"
                            },
                            "gatewaySubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployGatewaySubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'GatewaySubnet'), 'Not deployed')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('spokeRgName')), 'Microsoft.Resources/deployments', variables('nsgName'))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('spokeRgName')), 'Microsoft.Resources/deployments', variables('rtName'))]",
                        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('spokeRgName'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployVMsInSpokes')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('vmName')]",
                      "resourceGroup": "[parameters('spokeRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "adminPassword": {
                            "value": "[parameters('adminPassword')]"
                          },
                          "adminUsername": {
                            "value": "[parameters('adminUsername')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "subnetID": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('spokeRgName')), 'Microsoft.Resources/deployments', variables('vnetName')), '2022-09-01').outputs.defaultSubnetID.value]"
                          },
                          "vmName": {
                            "value": "[variables('vmName')]"
                          },
                          "vmSize": {
                            "value": "[parameters('vmSize')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "osType": {
                            "value": "[parameters('osType')]"
                          },
                          "dcrID": {
                            "value": "[parameters('dcrID')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "13348549453334912712"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "adminUsername": {
                              "type": "string"
                            },
                            "adminPassword": {
                              "type": "securestring"
                            },
                            "subnetID": {
                              "type": "string"
                            },
                            "vmSize": {
                              "type": "string"
                            },
                            "storageType": {
                              "type": "string",
                              "defaultValue": "StandardSSD_LRS"
                            },
                            "osType": {
                              "type": "string",
                              "defaultValue": "Windows"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "dcrID": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "EnableICMPv4": "netsh advfirewall firewall add rule name=\"ICMP Allow incoming V4 echo request\" protocol=\"icmpv4:8,any\" dir=in action=allow",
                            "AmaExtensionName": "[if(equals(parameters('osType'), 'Windows'), 'AzureMonitorWindowsAgent', 'AzureMonitorLinuxAgent')]",
                            "AmaExtensionType": "[if(equals(parameters('osType'), 'Windows'), 'AzureMonitorWindowsAgent', 'AzureMonitorLinuxAgent')]",
                            "AmaExtensionVersion": "1.0",
                            "DaExtensionName": "DependencyAgentWindows",
                            "DaExtensionType": "DependencyAgentWindows",
                            "DaExtensionVersion": "9.10",
                            "Windows": {
                              "publisher": "MicrosoftWindowsServer",
                              "offer": "WindowsServer",
                              "sku": "2022-datacenter-g2",
                              "version": "latest"
                            },
                            "Linux": {
                              "publisher": "Canonical",
                              "offer": "0001-com-ubuntu-server-jammy",
                              "sku": "22_04-lts-gen2",
                              "version": "latest"
                            },
                            "imagereference": "[if(equals(parameters('osType'), 'Windows'), variables('Windows'), if(equals(parameters('osType'), 'Linux'), variables('Linux'), createObject()))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines",
                              "apiVersion": "2024-11-01",
                              "name": "[parameters('vmName')]",
                              "location": "[parameters('location')]",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "properties": {
                                "osProfile": {
                                  "computerName": "[parameters('vmName')]",
                                  "adminUsername": "[parameters('adminUsername')]",
                                  "adminPassword": "[parameters('adminPassword')]"
                                },
                                "storageProfile": {
                                  "imageReference": "[variables('imagereference')]",
                                  "osDisk": {
                                    "createOption": "FromImage",
                                    "name": "[format('{0}-osDisk', parameters('vmName'))]",
                                    "managedDisk": {
                                      "storageAccountType": "[parameters('storageType')]"
                                    },
                                    "osType": "[parameters('osType')]",
                                    "deleteOption": "Delete"
                                  }
                                },
                                "networkProfile": {
                                  "networkInterfaces": [
                                    {
                                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]",
                                      "properties": {
                                        "deleteOption": "Delete"
                                      }
                                    }
                                  ]
                                },
                                "hardwareProfile": {
                                  "vmSize": "[parameters('vmSize')]"
                                },
                                "diagnosticsProfile": {
                                  "bootDiagnostics": {
                                    "enabled": true
                                  }
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                              ]
                            },
                            {
                              "condition": "[not(empty(parameters('dcrID')))]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2025-04-01",
                              "name": "[format('{0}/{1}', parameters('vmName'), variables('AmaExtensionName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "publisher": "Microsoft.Azure.Monitor",
                                "type": "[variables('AmaExtensionType')]",
                                "typeHandlerVersion": "[variables('AmaExtensionVersion')]",
                                "autoUpgradeMinorVersion": true,
                                "enableAutomaticUpgrade": true
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                              ]
                            },
                            {
                              "condition": "[and(not(empty(parameters('dcrID'))), equals(parameters('osType'), 'Windows'))]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2025-04-01",
                              "name": "[format('{0}/{1}', parameters('vmName'), variables('DaExtensionName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                                "type": "[variables('DaExtensionType')]",
                                "typeHandlerVersion": "[variables('DaExtensionVersion')]",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "enableAMA": true
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                              ]
                            },
                            {
                              "condition": "[not(empty(parameters('dcrID')))]",
                              "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                              "apiVersion": "2023-03-11",
                              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
                              "name": "VMInsights-Dcr-Association",
                              "properties": {
                                "dataCollectionRuleId": "[parameters('dcrID')]",
                                "description": "Association of data collection rule for VM Insights."
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2024-07-01",
                              "name": "[format('{0}-nic', parameters('vmName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "primary": true,
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[parameters('subnetID')]"
                                      }
                                    }
                                  }
                                ]
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/networkInterfaces'), createObject())]"
                            },
                            {
                              "condition": "[equals(parameters('osType'), 'Windows')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-runCommand', parameters('vmName'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "runCommand": {
                                    "value": "[variables('EnableICMPv4')]"
                                  },
                                  "vmName": {
                                    "value": "[parameters('vmName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "17239340461846775827"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "vmName": {
                                      "type": "string"
                                    },
                                    "runName": {
                                      "type": "string",
                                      "defaultValue": "RunCommand"
                                    },
                                    "runCommand": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Compute/virtualMachines/runCommands",
                                      "apiVersion": "2025-04-01",
                                      "name": "[format('{0}/{1}', parameters('vmName'), parameters('runName'))]",
                                      "location": "[parameters('location')]",
                                      "properties": {
                                        "source": {
                                          "script": "[parameters('runCommand')]"
                                        },
                                        "timeoutInSeconds": 60
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "vmResourceID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('spokeRgName'))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('spokeRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('nsgName')]",
                      "resourceGroup": "[parameters('spokeRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "nsgName": {
                            "value": "[variables('nsgName')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "9437059312845360120"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "nsgName": {
                              "type": "string"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "isBastionNSG": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "variables": {
                            "securityRules": "[if(parameters('isBastionNSG'), createArray(createObject('name', 'AllowGatewayManager', 'properties', createObject('description', 'Allow GatewayManager', 'protocol', '*', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', 'GatewayManager', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 2702, 'direction', 'Inbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowHttpsInBound', 'properties', createObject('description', 'Allow HTTPs', 'protocol', '*', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', 'Internet', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 2703, 'direction', 'Inbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowSshRdpOutbound', 'properties', createObject('protocol', '*', 'sourcePortRange', '*', 'sourceAddressPrefix', '*', 'destinationAddressPrefix', 'VirtualNetwork', 'access', 'Allow', 'priority', 100, 'direction', 'Outbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray('22', '3389'), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowAzureCloudOutbound', 'properties', createObject('protocol', 'TCP', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', '*', 'destinationAddressPrefix', 'AzureCloud', 'access', 'Allow', 'priority', 110, 'direction', 'Outbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray()))), createArray())]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkSecurityGroups",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('nsgName')]",
                              "location": "[parameters('location')]",
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), createObject())]",
                              "properties": {
                                "securityRules": "[variables('securityRules')]"
                              }
                            }
                          ],
                          "outputs": {
                            "nsgID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('spokeRgName'))]"
                      ]
                    },
                    {
                      "condition": "[and(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), parameters('deployUDRs'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('rtName')]",
                      "resourceGroup": "[parameters('spokeRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "rtName": {
                            "value": "[variables('rtName')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16306892622810336252"
                            }
                          },
                          "parameters": {
                            "rtName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            },
                            "disableRouteProp": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "isFirewallSubnet": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/routeTables",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('rtName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "disableBgpRoutePropagation": "[parameters('disableRouteProp')]",
                                "routes": "[if(parameters('isFirewallSubnet'), createArray(createObject('name', 'toInternet', 'properties', createObject('nextHopType', 'Internet', 'addressPrefix', '0.0.0.0/0'))), createArray())]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/routeTables'), createObject())]"
                            }
                          ],
                          "outputs": {
                            "rtID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/routeTables', parameters('rtName'))]"
                            },
                            "rtName": {
                              "type": "string",
                              "value": "[parameters('rtName')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('spokeRgName'))]"
                      ]
                    },
                    {
                      "condition": "[and(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), parameters('deployUDRs'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-RouteToInternet', variables('rtName'))]",
                      "resourceGroup": "[parameters('spokeRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "routeAddressPrefix": {
                            "value": "0.0.0.0/0"
                          },
                          "routeName": "[if(and(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), parameters('deployUDRs')), createObject('value', format('{0}/toInternet', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('spokeRgName')), 'Microsoft.Resources/deployments', variables('rtName')), '2022-09-01').outputs.rtName.value)), createObject('value', 'dummy1'))]",
                          "routeNextHopIpAddress": "[if(and(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), parameters('deployUDRs')), createObject('value', parameters('AzureFirewallpip')), createObject('value', '1.2.3.4'))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "12643868851101357934"
                            }
                          },
                          "parameters": {
                            "routeName": {
                              "type": "string"
                            },
                            "routeNextHopType": {
                              "type": "string",
                              "defaultValue": "VirtualAppliance",
                              "allowedValues": [
                                "VirtualAppliance",
                                "Internet",
                                "VnetLocal",
                                "VirtualNetworkGateway",
                                "None"
                              ]
                            },
                            "routeAddressPrefix": {
                              "type": "string"
                            },
                            "routeNextHopIpAddress": {
                              "type": "string",
                              "defaultValue": ""
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/routeTables/routes",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('routeName')]",
                              "properties": {
                                "nextHopType": "[parameters('routeNextHopType')]",
                                "addressPrefix": "[parameters('routeAddressPrefix')]",
                                "nextHopIpAddress": "[parameters('routeNextHopIpAddress')]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('spokeRgName')), 'Microsoft.Resources/deployments', variables('rtName'))]",
                        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('spokeRgName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "spokeVnetID": {
                      "type": "string",
                      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('spokeRgName')), 'Microsoft.Resources/deployments', variables('vnetName')), '2022-09-01').outputs.vnetID.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "hubVnet",
                "vwan"
              ]
            },
            "vnetPeerings": {
              "copy": {
                "name": "vnetPeerings",
                "count": "[length(range(0, parameters('amountOfSpokes')))]"
              },
              "condition": "[and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), not(parameters('deployVnetPeeringAVNM')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-VnetPeering{1}-{2}', parameters('hubRgName'), add(range(0, parameters('amountOfSpokes'))[copyIndex()], 1), parameters('shortLocationCode'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetIDA": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), createObject('value', reference(format('spokeVnets[{0}]', range(0, parameters('amountOfSpokes'))[copyIndex()])).outputs.spokeVnetID.value), createObject('value', 'No VNET peering'))]",
                  "vnetIDB": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), createObject('value', reference('hubVnet').outputs.hubVnetID.value), createObject('value', 'No VNET peering'))]",
                  "useRemoteGatewaysVnetA": {
                    "value": "[parameters('deployGatewayInHub')]"
                  },
                  "allowGatewayTransitVnetB": {
                    "value": "[parameters('deployGatewayInHub')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "9609043373619495226"
                    }
                  },
                  "parameters": {
                    "vnetIDA": {
                      "type": "string"
                    },
                    "useRemoteGatewaysVnetA": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "allowGatewayTransitVnetA": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "vnetIDB": {
                      "type": "string"
                    },
                    "useRemoteGatewaysVnetB": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "allowGatewayTransitVnetB": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "variables": {
                    "subscriptionA": "[split(parameters('vnetIDA'), '/')[2]]",
                    "subscriptionB": "[split(parameters('vnetIDB'), '/')[2]]",
                    "rgNameA": "[split(parameters('vnetIDA'), '/')[4]]",
                    "rgNameB": "[split(parameters('vnetIDB'), '/')[4]]",
                    "vnetNameA": "[split(parameters('vnetIDA'), '/')[8]]",
                    "vnetNameB": "[split(parameters('vnetIDB'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('peeringTo{0}', variables('vnetNameB'))]",
                      "subscriptionId": "[variables('subscriptionA')]",
                      "resourceGroup": "[variables('rgNameA')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "peeringName": {
                            "value": "[format('{0}/peeringTo{1}', variables('vnetNameA'), variables('vnetNameB'))]"
                          },
                          "remoteVnetID": {
                            "value": "[parameters('vnetIDB')]"
                          },
                          "useRemoteGateways": {
                            "value": "[parameters('useRemoteGatewaysVnetA')]"
                          },
                          "allowGatewayTransit": {
                            "value": "[parameters('allowGatewayTransitVnetA')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16929137594029772900"
                            }
                          },
                          "parameters": {
                            "remoteVnetID": {
                              "type": "string"
                            },
                            "peeringName": {
                              "type": "string"
                            },
                            "allowForwardedTraffic": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "allowGatewayTransit": {
                              "type": "bool"
                            },
                            "allowVirtualNetworkAccess": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "useRemoteGateways": {
                              "type": "bool"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('peeringName')]",
                              "properties": {
                                "remoteVirtualNetwork": {
                                  "id": "[parameters('remoteVnetID')]"
                                },
                                "allowForwardedTraffic": "[parameters('allowForwardedTraffic')]",
                                "allowGatewayTransit": "[parameters('allowGatewayTransit')]",
                                "allowVirtualNetworkAccess": "[parameters('allowVirtualNetworkAccess')]",
                                "useRemoteGateways": "[parameters('useRemoteGateways')]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionB'), variables('rgNameB')), 'Microsoft.Resources/deployments', format('peeringTo{0}', variables('vnetNameA')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('peeringTo{0}', variables('vnetNameA'))]",
                      "subscriptionId": "[variables('subscriptionB')]",
                      "resourceGroup": "[variables('rgNameB')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "peeringName": {
                            "value": "[format('{0}/peeringTo{1}', variables('vnetNameB'), variables('vnetNameA'))]"
                          },
                          "remoteVnetID": {
                            "value": "[parameters('vnetIDA')]"
                          },
                          "useRemoteGateways": {
                            "value": "[parameters('useRemoteGatewaysVnetB')]"
                          },
                          "allowGatewayTransit": {
                            "value": "[parameters('allowGatewayTransitVnetB')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16929137594029772900"
                            }
                          },
                          "parameters": {
                            "remoteVnetID": {
                              "type": "string"
                            },
                            "peeringName": {
                              "type": "string"
                            },
                            "allowForwardedTraffic": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "allowGatewayTransit": {
                              "type": "bool"
                            },
                            "allowVirtualNetworkAccess": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "useRemoteGateways": {
                              "type": "bool"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('peeringName')]",
                              "properties": {
                                "remoteVirtualNetwork": {
                                  "id": "[parameters('remoteVnetID')]"
                                },
                                "allowForwardedTraffic": "[parameters('allowForwardedTraffic')]",
                                "allowGatewayTransit": "[parameters('allowGatewayTransit')]",
                                "allowVirtualNetworkAccess": "[parameters('allowVirtualNetworkAccess')]",
                                "useRemoteGateways": "[parameters('useRemoteGateways')]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "hubVnet",
                "[format('spokeVnets[{0}]', range(0, parameters('amountOfSpokes'))[copyIndex()])]"
              ]
            },
            "vnetPeeringsAVNM": {
              "condition": "[and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('AVNM-{0}', parameters('shortLocationCode'))]",
              "subscriptionId": "[parameters('hubSubscriptionID')]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "avnmName": {
                    "value": "[parameters('avnmName')]"
                  },
                  "userAssignedIdentityId": {
                    "value": "[parameters('avnmUserAssignedIdentityId')]"
                  },
                  "shortLocationCode": {
                    "value": "[parameters('shortLocationCode')]"
                  },
                  "avnmRgName": "[if(and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM')), createObject('value', parameters('avnmRgName')), createObject('value', 'No Hub'))]",
                  "spokeVNETids": {
                    "copy": [
                      {
                        "name": "value",
                        "count": "[length(range(0, parameters('amountOfSpokes')))]",
                        "input": "[if(and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM')), reference(format('spokeVnets[{0}]', range(0, parameters('amountOfSpokes'))[copyIndex('value')])).outputs.spokeVnetID.value, createArray())]"
                      }
                    ]
                  },
                  "hubVNETid": "[if(and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM')), createObject('value', reference('hubVnet').outputs.hubVnetID.value), createObject('value', 'No Hub'))]",
                  "useHubGateway": {
                    "value": "[parameters('deployGatewayInHub')]"
                  },
                  "deployVnetPeeringMesh": {
                    "value": "[and(and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM')), parameters('deployVnetPeeringMesh'))]"
                  },
                  "deployAvnmUDRs": {
                    "value": "[and(and(and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM')), parameters('deployAvnmUDRs')), parameters('deployFirewallInHub'))]"
                  },
                  "AzFwPrivateIP": "[if(and(and(and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM')), parameters('deployAvnmUDRs')), parameters('deployFirewallInHub')), createObject('value', reference('hubVnet').outputs.azFwIp.value), createObject('value', 'none'))]",
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "18374788786658922928"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "shortLocationCode": {
                      "type": "string"
                    },
                    "avnmRgName": {
                      "type": "string"
                    },
                    "avnmName": {
                      "type": "string"
                    },
                    "spokeVNETids": {
                      "type": "array"
                    },
                    "hubVNETid": {
                      "type": "string"
                    },
                    "useHubGateway": {
                      "type": "bool"
                    },
                    "deployVnetPeeringMesh": {
                      "type": "bool"
                    },
                    "deployAvnmUDRs": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "AzFwPrivateIP": {
                      "type": "string"
                    },
                    "userAssignedIdentityId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AVNM-NetworkGroup-{0}', parameters('shortLocationCode'))]",
                      "resourceGroup": "[parameters('avnmRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "avnmGroupName": {
                            "value": "[format('{0}-NetworkGroup-{1}', parameters('avnmName'), parameters('shortLocationCode'))]"
                          },
                          "avnmName": {
                            "value": "[parameters('avnmName')]"
                          },
                          "spokeVNETids": {
                            "value": "[parameters('spokeVNETids')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "9965671241313502352"
                            }
                          },
                          "parameters": {
                            "avnmName": {
                              "type": "string"
                            },
                            "avnmGroupName": {
                              "type": "string"
                            },
                            "spokeVNETids": {
                              "type": "array"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkManagers/networkGroups",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName'))]",
                              "properties": {
                                "description": "LabBuilder AVNM - Network Group"
                              }
                            },
                            {
                              "copy": {
                                "name": "avnmNetworkGroupMemeber",
                                "count": "[length(parameters('spokeVNETids'))]"
                              },
                              "type": "Microsoft.Network/networkManagers/networkGroups/staticMembers",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[1], format('avnmNetworkGroupMemeber{0}', copyIndex()))]",
                              "properties": {
                                "resourceId": "[parameters('spokeVNETids')[copyIndex()]]"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkManagers/networkGroups', split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[1])]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/networkManagers/networkGroups', split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[1])]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AVNM-ConnectivityConfig-{0}', parameters('shortLocationCode'))]",
                      "resourceGroup": "[parameters('avnmRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "avnmName": {
                            "value": "[parameters('avnmName')]"
                          },
                          "avnmNetworkGroupID": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avnmRgName')), 'Microsoft.Resources/deployments', format('AVNM-NetworkGroup-{0}', parameters('shortLocationCode'))), '2022-09-01').outputs.id.value]"
                          },
                          "avvmConnectivityConfigName": {
                            "value": "[format('{0}-ConnectivityConfig-{1}', parameters('avnmName'), parameters('shortLocationCode'))]"
                          },
                          "hubVNETid": {
                            "value": "[parameters('hubVNETid')]"
                          },
                          "useHubGateway": {
                            "value": "[parameters('useHubGateway')]"
                          },
                          "groupConnectivity": "[if(parameters('deployVnetPeeringMesh'), createObject('value', 'DirectlyConnected'), createObject('value', 'None'))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "4361107947113490154"
                            }
                          },
                          "parameters": {
                            "avnmName": {
                              "type": "string"
                            },
                            "avvmConnectivityConfigName": {
                              "type": "string"
                            },
                            "connectivityTopology": {
                              "type": "string",
                              "defaultValue": "HubAndSpoke",
                              "allowedValues": [
                                "HubAndSpoke",
                                "Mesh"
                              ]
                            },
                            "deleteExistingPeering": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "isGlobal": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "hubVNETid": {
                              "type": "string"
                            },
                            "avnmNetworkGroupID": {
                              "type": "string"
                            },
                            "groupConnectivity": {
                              "type": "string",
                              "defaultValue": "None",
                              "allowedValues": [
                                "None",
                                "DirectlyConnected"
                              ]
                            },
                            "useHubGateway": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkManagers/connectivityConfigurations",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/{1}', parameters('avnmName'), parameters('avvmConnectivityConfigName'))]",
                              "properties": {
                                "connectivityTopology": "[parameters('connectivityTopology')]",
                                "description": "LabBuilder AVNM - Connectivity Configuration",
                                "deleteExistingPeering": "[string(parameters('deleteExistingPeering'))]",
                                "isGlobal": "[string(parameters('isGlobal'))]",
                                "hubs": [
                                  {
                                    "resourceId": "[parameters('hubVNETid')]",
                                    "resourceType": "Microsoft.Network/virtualNetworks"
                                  }
                                ],
                                "appliesToGroups": [
                                  {
                                    "networkGroupId": "[parameters('avnmNetworkGroupID')]",
                                    "groupConnectivity": "[parameters('groupConnectivity')]",
                                    "useHubGateway": "[string(parameters('useHubGateway'))]",
                                    "isGlobal": "[string(parameters('isGlobal'))]"
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/networkManagers/connectivityConfigurations', split(format('{0}/{1}', parameters('avnmName'), parameters('avvmConnectivityConfigName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avvmConnectivityConfigName')), '/')[1])]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[format('{0}/{1}', parameters('avnmName'), parameters('avvmConnectivityConfigName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avnmRgName')), 'Microsoft.Resources/deployments', format('AVNM-NetworkGroup-{0}', parameters('shortLocationCode')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployAvnmUDRs')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AVNM-RoutingConfig-{0}', parameters('shortLocationCode'))]",
                      "resourceGroup": "[parameters('avnmRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "avnmName": {
                            "value": "[parameters('avnmName')]"
                          },
                          "avnmNetworkGroupId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avnmRgName')), 'Microsoft.Resources/deployments', format('AVNM-NetworkGroup-{0}', parameters('shortLocationCode'))), '2022-09-01').outputs.id.value]"
                          },
                          "avnmRoutingConfigName": {
                            "value": "[format('{0}-RoutingConfig-{1}', parameters('avnmName'), parameters('shortLocationCode'))]"
                          },
                          "AzFwPrivateIP": {
                            "value": "[parameters('AzFwPrivateIP')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "3396970488196667661"
                            }
                          },
                          "parameters": {
                            "avnmName": {
                              "type": "string"
                            },
                            "avnmNetworkGroupId": {
                              "type": "string"
                            },
                            "AzFwPrivateIP": {
                              "type": "string"
                            },
                            "avnmRoutingConfigName": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkManagers/routingConfigurations",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName'))]",
                              "properties": {
                                "description": "LabBuilder AVNM - Routing Configuration"
                              }
                            },
                            {
                              "type": "Microsoft.Network/networkManagers/routingConfigurations/ruleCollections",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName')), '/')[1], format('{0}-RuleCollection', parameters('avnmName')))]",
                              "properties": {
                                "description": "LabBuilder AVNM - Routing Configuration Rule Collection",
                                "appliesTo": [
                                  {
                                    "networkGroupId": "[parameters('avnmNetworkGroupId')]"
                                  }
                                ],
                                "disableBgpRoutePropagation": "True"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkManagers/routingConfigurations', split(format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName')), '/')[1])]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkManagers/routingConfigurations/ruleCollections/rules",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/{1}/{2}/{3}', split(format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName')), '/')[1], format('{0}-RuleCollection', parameters('avnmName')), 'toInternet')]",
                              "properties": {
                                "description": "LabBuilder AVNM - Routing Configuration Rule",
                                "destination": {
                                  "destinationAddress": "0.0.0.0/0",
                                  "type": "AddressPrefix"
                                },
                                "nextHop": {
                                  "nextHopType": "VirtualAppliance",
                                  "nextHopAddress": "[parameters('AzFwPrivateIP')]"
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkManagers/routingConfigurations/ruleCollections', split(format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName')), '/')[1], format('{0}-RuleCollection', parameters('avnmName')))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "id": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/networkManagers/routingConfigurations', split(format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName')), '/')[1])]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[format('{0}/{1}', parameters('avnmName'), parameters('avnmRoutingConfigName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avnmRgName')), 'Microsoft.Resources/deployments', format('AVNM-NetworkGroup-{0}', parameters('shortLocationCode')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AVNM-ConnectivityConfig-Deployment-{0}', parameters('shortLocationCode'))]",
                      "resourceGroup": "[parameters('avnmRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "avnmName": {
                            "value": "[parameters('avnmName')]"
                          },
                          "configType": {
                            "value": "Connectivity"
                          },
                          "configurationId": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avnmRgName')), 'Microsoft.Resources/deployments', format('AVNM-ConnectivityConfig-{0}', parameters('shortLocationCode'))), '2022-09-01').outputs.id.value]"
                          },
                          "deploymentScriptName": {
                            "value": "[format('{0}-ConnectivityConfig-DeploymentScript-{1}', parameters('avnmName'), parameters('shortLocationCode'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "userAssignedIdentityId": {
                            "value": "[parameters('userAssignedIdentityId')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "7035208373969922301"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "userAssignedIdentityId": {
                              "type": "string"
                            },
                            "avnmName": {
                              "type": "string"
                            },
                            "configurationId": {
                              "type": "string"
                            },
                            "deploymentScriptName": {
                              "type": "string"
                            },
                            "configType": {
                              "type": "string",
                              "allowedValues": [
                                "Connectivity",
                                "Routing"
                              ]
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "timeStamp": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2023-08-01",
                              "name": "[parameters('deploymentScriptName')]",
                              "location": "[parameters('location')]",
                              "kind": "AzurePowerShell",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userAssignedIdentityId'))]": {}
                                }
                              },
                              "properties": {
                                "forceUpdateTag": "[parameters('timeStamp')]",
                                "azPowerShellVersion": "8.3",
                                "retentionInterval": "PT1H",
                                "timeout": "PT1H",
                                "arguments": "[format('-networkManagerName \"{0}\" -targetLocations {1} -configIds {2} -subscriptionId {3} -configType {4} -resourceGroupName {5}', parameters('avnmName'), parameters('location'), parameters('configurationId'), subscription().subscriptionId, parameters('configType'), resourceGroup().name)]",
                                "scriptContent": "    param (\n      # AVNM subscription id\n      [parameter(mandatory=$true)][string]$subscriptionId,\n\n      # AVNM resource name\n      [parameter(mandatory=$true)][string]$networkManagerName,\n\n      # string with comma-separated list of config ids to deploy. ids must be of the same config type\n      [parameter(mandatory=$true)][string[]]$configIds,\n\n      # string with comma-separated list of deployment target regions\n      [parameter(mandatory=$true)][string[]]$targetLocations,\n\n      # configuration type to deploy. must be either connecticity or securityadmin\n      [parameter(mandatory=$true)][ValidateSet('Connectivity','Routing')][string]$configType,\n\n      # AVNM resource group name\n      [parameter(mandatory=$true)][string]$resourceGroupName\n    )\n  \n    $null = Login-AzAccount -Identity -Subscription $subscriptionId\n  \n    [System.Collections.Generic.List[string]]$configIdList = @()  \n    $configIdList.addRange($configIds) \n    [System.Collections.Generic.List[string]]$targetLocationList = @() # target locations for deployment\n    $targetLocationList.addRange($targetLocations)     \n    \n    $deployment = @{\n        Name = $networkManagerName\n        ResourceGroupName = $resourceGroupName\n        ConfigurationId = $configIdList\n        TargetLocation = $targetLocationList\n        CommitType = $configType\n    }\n  \n    try {\n      Deploy-AzNetworkManagerCommit @deployment -ErrorAction Stop\n    }\n    catch {\n      Write-Error \"Deployment failed with error: $_\"\n      throw \"Deployment failed with error: $_\"\n    }\n    "
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), createObject())]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avnmRgName')), 'Microsoft.Resources/deployments', format('AVNM-ConnectivityConfig-{0}', parameters('shortLocationCode')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployAvnmUDRs')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('AVNM-RoutingConfig-Deployment-{0}', parameters('shortLocationCode'))]",
                      "resourceGroup": "[parameters('avnmRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "avnmName": {
                            "value": "[parameters('avnmName')]"
                          },
                          "configType": {
                            "value": "Routing"
                          },
                          "configurationId": "[if(parameters('deployAvnmUDRs'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avnmRgName')), 'Microsoft.Resources/deployments', format('AVNM-RoutingConfig-{0}', parameters('shortLocationCode'))), '2022-09-01').outputs.id.value), createObject('value', ''))]",
                          "deploymentScriptName": {
                            "value": "[format('{0}-RoutingConfig-DeploymentScript-{1}', parameters('avnmName'), parameters('shortLocationCode'))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "userAssignedIdentityId": {
                            "value": "[parameters('userAssignedIdentityId')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "7035208373969922301"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "userAssignedIdentityId": {
                              "type": "string"
                            },
                            "avnmName": {
                              "type": "string"
                            },
                            "configurationId": {
                              "type": "string"
                            },
                            "deploymentScriptName": {
                              "type": "string"
                            },
                            "configType": {
                              "type": "string",
                              "allowedValues": [
                                "Connectivity",
                                "Routing"
                              ]
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "timeStamp": {
                              "type": "string",
                              "defaultValue": "[utcNow()]"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deploymentScripts",
                              "apiVersion": "2023-08-01",
                              "name": "[parameters('deploymentScriptName')]",
                              "location": "[parameters('location')]",
                              "kind": "AzurePowerShell",
                              "identity": {
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                  "[format('{0}', parameters('userAssignedIdentityId'))]": {}
                                }
                              },
                              "properties": {
                                "forceUpdateTag": "[parameters('timeStamp')]",
                                "azPowerShellVersion": "8.3",
                                "retentionInterval": "PT1H",
                                "timeout": "PT1H",
                                "arguments": "[format('-networkManagerName \"{0}\" -targetLocations {1} -configIds {2} -subscriptionId {3} -configType {4} -resourceGroupName {5}', parameters('avnmName'), parameters('location'), parameters('configurationId'), subscription().subscriptionId, parameters('configType'), resourceGroup().name)]",
                                "scriptContent": "    param (\n      # AVNM subscription id\n      [parameter(mandatory=$true)][string]$subscriptionId,\n\n      # AVNM resource name\n      [parameter(mandatory=$true)][string]$networkManagerName,\n\n      # string with comma-separated list of config ids to deploy. ids must be of the same config type\n      [parameter(mandatory=$true)][string[]]$configIds,\n\n      # string with comma-separated list of deployment target regions\n      [parameter(mandatory=$true)][string[]]$targetLocations,\n\n      # configuration type to deploy. must be either connecticity or securityadmin\n      [parameter(mandatory=$true)][ValidateSet('Connectivity','Routing')][string]$configType,\n\n      # AVNM resource group name\n      [parameter(mandatory=$true)][string]$resourceGroupName\n    )\n  \n    $null = Login-AzAccount -Identity -Subscription $subscriptionId\n  \n    [System.Collections.Generic.List[string]]$configIdList = @()  \n    $configIdList.addRange($configIds) \n    [System.Collections.Generic.List[string]]$targetLocationList = @() # target locations for deployment\n    $targetLocationList.addRange($targetLocations)     \n    \n    $deployment = @{\n        Name = $networkManagerName\n        ResourceGroupName = $resourceGroupName\n        ConfigurationId = $configIdList\n        TargetLocation = $targetLocationList\n        CommitType = $configType\n    }\n  \n    try {\n      Deploy-AzNetworkManagerCommit @deployment -ErrorAction Stop\n    }\n    catch {\n      Write-Error \"Deployment failed with error: $_\"\n      throw \"Deployment failed with error: $_\"\n    }\n    "
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), createObject())]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('avnmRgName')), 'Microsoft.Resources/deployments', format('AVNM-RoutingConfig-{0}', parameters('shortLocationCode')))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "hubVnet",
                "spokeVnets"
              ]
            },
            "vnetConnections": {
              "copy": {
                "name": "vnetConnections",
                "count": "[length(range(0, parameters('amountOfSpokes')))]"
              },
              "condition": "[and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVwanHub'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('VWAN-VnetConnection{0}-{1}', add(range(0, parameters('amountOfSpokes'))[copyIndex()], 1), parameters('shortLocationCode'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "HubResourceGroupName": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVwanHub')), createObject('value', reference('vwan').outputs.HubResourceGroupName.value), createObject('value', 'No VNET peering'))]",
                  "SpokeVnetID": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVwanHub')), createObject('value', reference(format('spokeVnets[{0}]', range(0, parameters('amountOfSpokes'))[copyIndex()])).outputs.spokeVnetID.value), createObject('value', 'No VNET peering'))]",
                  "vwanHubName": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVwanHub')), createObject('value', reference('vwan').outputs.vWanHubName.value), createObject('value', 'No VNET peering'))]",
                  "deployFirewallInHub": {
                    "value": "[and(parameters('deployFirewallInHub'), variables('isVwanHub'))]"
                  },
                  "counter": {
                    "value": "[range(0, parameters('amountOfSpokes'))[copyIndex()]]"
                  },
                  "hubSubscriptionID": {
                    "value": "[parameters('hubSubscriptionID')]"
                  },
                  "enableRoutingIntent": {
                    "value": "[or(parameters('internetTrafficRoutingPolicy'), parameters('privateTrafficRoutingPolicy'))]"
                  },
                  "shortLocationCode": {
                    "value": "[parameters('shortLocationCode')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "15125274289752577962"
                    }
                  },
                  "parameters": {
                    "shortLocationCode": {
                      "type": "string"
                    },
                    "vwanHubName": {
                      "type": "string"
                    },
                    "SpokeVnetID": {
                      "type": "string"
                    },
                    "HubResourceGroupName": {
                      "type": "string"
                    },
                    "counter": {
                      "type": "int"
                    },
                    "deployFirewallInHub": {
                      "type": "bool"
                    },
                    "hubSubscriptionID": {
                      "type": "string"
                    },
                    "enableRoutingIntent": {
                      "type": "bool",
                      "defaultValue": true
                    }
                  },
                  "variables": {
                    "spokeName": "[split(parameters('SpokeVnetID'), '/')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('VWAN-VnetConnection{0}-{1}', add(parameters('counter'), 1), parameters('shortLocationCode'))]",
                      "subscriptionId": "[parameters('hubSubscriptionID')]",
                      "resourceGroup": "[parameters('HubResourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "SpokeVnetID": {
                            "value": "[parameters('SpokeVnetID')]"
                          },
                          "vwanHubName": {
                            "value": "[parameters('vwanHubName')]"
                          },
                          "spokeName": {
                            "value": "[variables('spokeName')]"
                          },
                          "enableInternetSecurity": {
                            "value": "[parameters('deployFirewallInHub')]"
                          },
                          "propagateToNoneRouteTable": {
                            "value": "[parameters('deployFirewallInHub')]"
                          },
                          "enableRoutingIntent": {
                            "value": "[parameters('enableRoutingIntent')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "12075192248064682434"
                            }
                          },
                          "parameters": {
                            "vwanHubName": {
                              "type": "string"
                            },
                            "spokeName": {
                              "type": "string"
                            },
                            "SpokeVnetID": {
                              "type": "string"
                            },
                            "enableInternetSecurity": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "propagateToNoneRouteTable": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "enableRoutingIntent": {
                              "type": "bool"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/{1}-to-{2}', parameters('vwanHubName'), parameters('vwanHubName'), parameters('spokeName'))]",
                              "properties": {
                                "routingConfiguration": "[if(parameters('enableRoutingIntent'), createObject(), createObject('associatedRouteTable', createObject('id', resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vwanHubName'), 'defaultRouteTable')), 'propagatedRouteTables', createObject('labels', createArray(if(parameters('propagateToNoneRouteTable'), '', 'default')), 'ids', createArray(createObject('id', resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vwanHubName'), if(parameters('propagateToNoneRouteTable'), 'noneRouteTable', 'defaultRouteTable')))))))]",
                                "remoteVirtualNetwork": {
                                  "id": "[parameters('SpokeVnetID')]"
                                },
                                "enableInternetSecurity": "[or(parameters('enableInternetSecurity'), parameters('enableRoutingIntent'))]",
                                "allowHubToRemoteVnetTransit": "[parameters('enableRoutingIntent')]",
                                "allowRemoteVnetToUseHubVnetGateways": "[parameters('enableRoutingIntent')]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[format('spokeVnets[{0}]', range(0, parameters('amountOfSpokes'))[copyIndex()])]",
                "vwan"
              ]
            },
            "onprem": {
              "condition": "[parameters('deployOnPrem')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-{1}', parameters('onpremRgName'), parameters('shortLocationCode'))]",
              "subscriptionId": "[parameters('onPremSubscriptionID')]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "shortLocationCode": {
                    "value": "[parameters('shortLocationCode')]"
                  },
                  "adminPassword": {
                    "value": "[parameters('adminPassword')]"
                  },
                  "adminUsername": {
                    "value": "[parameters('adminUsername')]"
                  },
                  "AddressSpace": {
                    "value": "[cidrSubnet(parameters('AddressSpace'), 24, 255)]"
                  },
                  "deployBastionInOnPrem": {
                    "value": "[parameters('deployBastionInOnPrem')]"
                  },
                  "deployGatewayInOnPrem": {
                    "value": "[parameters('deployGatewayinOnPrem')]"
                  },
                  "deployVMsInOnPrem": {
                    "value": "[parameters('deployVMinOnPrem')]"
                  },
                  "OnPremRgName": {
                    "value": "[parameters('onpremRgName')]"
                  },
                  "vmSize": {
                    "value": "[parameters('vmSizeOnPrem')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "osType": {
                    "value": "[parameters('osTypeOnPrem')]"
                  },
                  "vpnGwBgpAsn": "[if(parameters('onpremBgp'), createObject('value', parameters('onpremBgpAsn')), createObject('value', 65515))]",
                  "vpnGwEnebaleBgp": {
                    "value": "[parameters('onpremBgp')]"
                  },
                  "bastionSku": {
                    "value": "[parameters('bastionInOnPremSKU')]"
                  },
                  "dcrID": {
                    "value": "[coalesce(parameters('dcrID'), '')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "12856939801144320014"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "shortLocationCode": {
                      "type": "string"
                    },
                    "AddressSpace": {
                      "type": "string"
                    },
                    "deployBastionInOnPrem": {
                      "type": "bool"
                    },
                    "bastionSku": {
                      "type": "string"
                    },
                    "adminUsername": {
                      "type": "string"
                    },
                    "adminPassword": {
                      "type": "securestring"
                    },
                    "deployVMsInOnPrem": {
                      "type": "bool"
                    },
                    "deployGatewayInOnPrem": {
                      "type": "bool"
                    },
                    "OnPremRgName": {
                      "type": "string"
                    },
                    "vmSize": {
                      "type": "string"
                    },
                    "tagsByResource": {
                      "type": "object"
                    },
                    "osType": {
                      "type": "string"
                    },
                    "vpnGwEnebaleBgp": {
                      "type": "bool"
                    },
                    "vpnGwBgpAsn": {
                      "type": "int"
                    },
                    "dcrID": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "vnetName": "[format('VNET-OnPrem-{0}', parameters('shortLocationCode'))]",
                    "vmName": "[format('VM-OnPrem-{0}', parameters('shortLocationCode'))]",
                    "nsgName": "[format('NSG-OnPrem-{0}', parameters('shortLocationCode'))]",
                    "bastionName": "[format('Bastion-OnPrem-{0}', parameters('shortLocationCode'))]",
                    "gatewayName": "[format('Gateway-OnPrem-{0}', parameters('shortLocationCode'))]",
                    "bastionNsgName": "[format('NSG-Bastion-OnPrm-{0}', parameters('shortLocationCode'))]",
                    "varOnPremRgName": "[format('{0}-{1}', parameters('OnPremRgName'), parameters('shortLocationCode'))]",
                    "defaultSubnetPrefix": "[cidrSubnet(parameters('AddressSpace'), 26, 0)]",
                    "bastionSubnetPrefix": "[cidrSubnet(parameters('AddressSpace'), 26, 1)]",
                    "gatewaySubnetPrefix": "[cidrSubnet(parameters('AddressSpace'), 26, 2)]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/resourceGroups",
                      "apiVersion": "2025-04-01",
                      "name": "[variables('varOnPremRgName')]",
                      "location": "[parameters('location')]",
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/subscriptions/resourceGroups'), createObject())]"
                    },
                    {
                      "condition": "[parameters('deployBastionInOnPrem')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('bastionNsgName')]",
                      "resourceGroup": "[variables('varOnPremRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "nsgName": {
                            "value": "[variables('bastionNsgName')]"
                          },
                          "isBastionNSG": {
                            "value": true
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "9437059312845360120"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "nsgName": {
                              "type": "string"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "isBastionNSG": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "variables": {
                            "securityRules": "[if(parameters('isBastionNSG'), createArray(createObject('name', 'AllowGatewayManager', 'properties', createObject('description', 'Allow GatewayManager', 'protocol', '*', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', 'GatewayManager', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 2702, 'direction', 'Inbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowHttpsInBound', 'properties', createObject('description', 'Allow HTTPs', 'protocol', '*', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', 'Internet', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 2703, 'direction', 'Inbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowSshRdpOutbound', 'properties', createObject('protocol', '*', 'sourcePortRange', '*', 'sourceAddressPrefix', '*', 'destinationAddressPrefix', 'VirtualNetwork', 'access', 'Allow', 'priority', 100, 'direction', 'Outbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray('22', '3389'), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowAzureCloudOutbound', 'properties', createObject('protocol', 'TCP', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', '*', 'destinationAddressPrefix', 'AzureCloud', 'access', 'Allow', 'priority', 110, 'direction', 'Outbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray()))), createArray())]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkSecurityGroups",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('nsgName')]",
                              "location": "[parameters('location')]",
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), createObject())]",
                              "properties": {
                                "securityRules": "[variables('securityRules')]"
                              }
                            }
                          ],
                          "outputs": {
                            "nsgID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('varOnPremRgName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('vnetName')]",
                      "resourceGroup": "[variables('varOnPremRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "vnetAddressSpcae": {
                            "value": "[parameters('AddressSpace')]"
                          },
                          "nsgID": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('nsgName')), '2022-09-01').outputs.nsgID.value]"
                          },
                          "bastionNSGID": "[if(parameters('deployBastionInOnPrem'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('bastionNsgName')), '2022-09-01').outputs.nsgID.value), createObject('value', 'none'))]",
                          "vnetname": {
                            "value": "[variables('vnetName')]"
                          },
                          "deployDefaultSubnet": {
                            "value": true
                          },
                          "defaultSubnetPrefix": {
                            "value": "[variables('defaultSubnetPrefix')]"
                          },
                          "bastionSubnetPrefix": {
                            "value": "[variables('bastionSubnetPrefix')]"
                          },
                          "GatewaySubnetPrefix": {
                            "value": "[variables('gatewaySubnetPrefix')]"
                          },
                          "deployBastionSubnet": {
                            "value": "[parameters('deployBastionInOnPrem')]"
                          },
                          "deployGatewaySubnet": {
                            "value": "[parameters('deployGatewayInOnPrem')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16985540615874253541"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vnetname": {
                              "type": "string"
                            },
                            "vnetAddressSpcae": {
                              "type": "string"
                            },
                            "defaultSubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "bastionSubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "firewallSubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "GatewaySubnetPrefix": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "nsgID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "bastionNSGID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "rtDefID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "rtGwID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "rtFwID": {
                              "type": "string",
                              "defaultValue": "none"
                            },
                            "deployDefaultSubnet": {
                              "type": "bool"
                            },
                            "deployBastionSubnet": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "deployFirewallSubnet": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "deployGatewaySubnet": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "firewallDNSproxy": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "azFwIp": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "defaultOutboundAccess": {
                              "type": "bool",
                              "defaultValue": true
                            }
                          },
                          "variables": {
                            "defaultSubnet": "[if(parameters('deployDefaultSubnet'), createArray(createObject('name', 'default', 'properties', createObject('addressPrefix', parameters('defaultSubnetPrefix'), 'networkSecurityGroup', if(equals(parameters('nsgID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}', parameters('nsgID')))), 'routeTable', if(equals(parameters('rtDefID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtDefID')))), 'defaultOutboundAccess', parameters('defaultOutboundAccess')))), createArray())]",
                            "bastionSubnet": "[if(parameters('deployBastionSubnet'), createArray(createObject('name', 'AzureBastionSubnet', 'properties', createObject('addressPrefix', parameters('bastionSubnetPrefix'), 'networkSecurityGroup', if(equals(parameters('bastionNSGID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}', parameters('bastionNSGID'))))))), createArray())]",
                            "firewallSubnet": "[if(parameters('deployFirewallSubnet'), createArray(createObject('name', 'AzureFirewallSubnet', 'properties', createObject('addressPrefix', parameters('firewallSubnetPrefix'), 'routeTable', if(equals(parameters('rtFwID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtFwID'))))))), createArray())]",
                            "gatewaySubnet": "[if(parameters('deployGatewaySubnet'), createArray(createObject('name', 'GatewaySubnet', 'properties', createObject('addressPrefix', parameters('GatewaySubnetPrefix'), 'routeTable', if(equals(parameters('rtGwID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtGwID'))))))), createArray())]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('vnetname')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "dhcpOptions": {
                                  "dnsServers": "[if(parameters('firewallDNSproxy'), array(parameters('azFwIp')), createArray())]"
                                },
                                "addressSpace": {
                                  "addressPrefixes": [
                                    "[parameters('vnetAddressSpcae')]"
                                  ]
                                },
                                "subnets": "[concat(variables('defaultSubnet'), variables('bastionSubnet'), variables('firewallSubnet'), variables('gatewaySubnet'))]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), createObject())]"
                            }
                          ],
                          "outputs": {
                            "vnetName": {
                              "type": "string",
                              "value": "[parameters('vnetname')]"
                            },
                            "vnetID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))]"
                            },
                            "vnetAddressSpace": {
                              "type": "array",
                              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname')), '2024-07-01').addressSpace.addressPrefixes]"
                            },
                            "defaultSubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployDefaultSubnet'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetname'), 'default'), 'Not deployed')]"
                            },
                            "bastionSubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployBastionSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureBastionSubnet'), 'Not deployed')]"
                            },
                            "firewallSubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployFirewallSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureFirewallSubnet'), 'Not deployed')]"
                            },
                            "gatewaySubnetID": {
                              "type": "string",
                              "value": "[if(parameters('deployGatewaySubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'GatewaySubnet'), 'Not deployed')]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('bastionNsgName'))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('nsgName'))]",
                        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('varOnPremRgName'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployVMsInOnPrem')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('vmName')]",
                      "resourceGroup": "[variables('varOnPremRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "adminPassword": {
                            "value": "[parameters('adminPassword')]"
                          },
                          "adminUsername": {
                            "value": "[parameters('adminUsername')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "subnetID": {
                            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName')), '2022-09-01').outputs.defaultSubnetID.value]"
                          },
                          "vmName": {
                            "value": "[variables('vmName')]"
                          },
                          "vmSize": {
                            "value": "[parameters('vmSize')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "osType": {
                            "value": "[parameters('osType')]"
                          },
                          "dcrID": {
                            "value": "[parameters('dcrID')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "13348549453334912712"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "adminUsername": {
                              "type": "string"
                            },
                            "adminPassword": {
                              "type": "securestring"
                            },
                            "subnetID": {
                              "type": "string"
                            },
                            "vmSize": {
                              "type": "string"
                            },
                            "storageType": {
                              "type": "string",
                              "defaultValue": "StandardSSD_LRS"
                            },
                            "osType": {
                              "type": "string",
                              "defaultValue": "Windows"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "dcrID": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "EnableICMPv4": "netsh advfirewall firewall add rule name=\"ICMP Allow incoming V4 echo request\" protocol=\"icmpv4:8,any\" dir=in action=allow",
                            "AmaExtensionName": "[if(equals(parameters('osType'), 'Windows'), 'AzureMonitorWindowsAgent', 'AzureMonitorLinuxAgent')]",
                            "AmaExtensionType": "[if(equals(parameters('osType'), 'Windows'), 'AzureMonitorWindowsAgent', 'AzureMonitorLinuxAgent')]",
                            "AmaExtensionVersion": "1.0",
                            "DaExtensionName": "DependencyAgentWindows",
                            "DaExtensionType": "DependencyAgentWindows",
                            "DaExtensionVersion": "9.10",
                            "Windows": {
                              "publisher": "MicrosoftWindowsServer",
                              "offer": "WindowsServer",
                              "sku": "2022-datacenter-g2",
                              "version": "latest"
                            },
                            "Linux": {
                              "publisher": "Canonical",
                              "offer": "0001-com-ubuntu-server-jammy",
                              "sku": "22_04-lts-gen2",
                              "version": "latest"
                            },
                            "imagereference": "[if(equals(parameters('osType'), 'Windows'), variables('Windows'), if(equals(parameters('osType'), 'Linux'), variables('Linux'), createObject()))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines",
                              "apiVersion": "2024-11-01",
                              "name": "[parameters('vmName')]",
                              "location": "[parameters('location')]",
                              "identity": {
                                "type": "SystemAssigned"
                              },
                              "properties": {
                                "osProfile": {
                                  "computerName": "[parameters('vmName')]",
                                  "adminUsername": "[parameters('adminUsername')]",
                                  "adminPassword": "[parameters('adminPassword')]"
                                },
                                "storageProfile": {
                                  "imageReference": "[variables('imagereference')]",
                                  "osDisk": {
                                    "createOption": "FromImage",
                                    "name": "[format('{0}-osDisk', parameters('vmName'))]",
                                    "managedDisk": {
                                      "storageAccountType": "[parameters('storageType')]"
                                    },
                                    "osType": "[parameters('osType')]",
                                    "deleteOption": "Delete"
                                  }
                                },
                                "networkProfile": {
                                  "networkInterfaces": [
                                    {
                                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]",
                                      "properties": {
                                        "deleteOption": "Delete"
                                      }
                                    }
                                  ]
                                },
                                "hardwareProfile": {
                                  "vmSize": "[parameters('vmSize')]"
                                },
                                "diagnosticsProfile": {
                                  "bootDiagnostics": {
                                    "enabled": true
                                  }
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                              ]
                            },
                            {
                              "condition": "[not(empty(parameters('dcrID')))]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2025-04-01",
                              "name": "[format('{0}/{1}', parameters('vmName'), variables('AmaExtensionName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "publisher": "Microsoft.Azure.Monitor",
                                "type": "[variables('AmaExtensionType')]",
                                "typeHandlerVersion": "[variables('AmaExtensionVersion')]",
                                "autoUpgradeMinorVersion": true,
                                "enableAutomaticUpgrade": true
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                              ]
                            },
                            {
                              "condition": "[and(not(empty(parameters('dcrID'))), equals(parameters('osType'), 'Windows'))]",
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2025-04-01",
                              "name": "[format('{0}/{1}', parameters('vmName'), variables('DaExtensionName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                                "type": "[variables('DaExtensionType')]",
                                "typeHandlerVersion": "[variables('DaExtensionVersion')]",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                  "enableAMA": true
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                              ]
                            },
                            {
                              "condition": "[not(empty(parameters('dcrID')))]",
                              "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                              "apiVersion": "2023-03-11",
                              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
                              "name": "VMInsights-Dcr-Association",
                              "properties": {
                                "dataCollectionRuleId": "[parameters('dcrID')]",
                                "description": "Association of data collection rule for VM Insights."
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2024-07-01",
                              "name": "[format('{0}-nic', parameters('vmName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "primary": true,
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[parameters('subnetID')]"
                                      }
                                    }
                                  }
                                ]
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/networkInterfaces'), createObject())]"
                            },
                            {
                              "condition": "[equals(parameters('osType'), 'Windows')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}-runCommand', parameters('vmName'))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "runCommand": {
                                    "value": "[variables('EnableICMPv4')]"
                                  },
                                  "vmName": {
                                    "value": "[parameters('vmName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "17239340461846775827"
                                    }
                                  },
                                  "parameters": {
                                    "location": {
                                      "type": "string"
                                    },
                                    "vmName": {
                                      "type": "string"
                                    },
                                    "runName": {
                                      "type": "string",
                                      "defaultValue": "RunCommand"
                                    },
                                    "runCommand": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Compute/virtualMachines/runCommands",
                                      "apiVersion": "2025-04-01",
                                      "name": "[format('{0}/{1}', parameters('vmName'), parameters('runName'))]",
                                      "location": "[parameters('location')]",
                                      "properties": {
                                        "source": {
                                          "script": "[parameters('runCommand')]"
                                        },
                                        "timeoutInSeconds": 60
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "vmResourceID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('varOnPremRgName'))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('nsgName')]",
                      "resourceGroup": "[variables('varOnPremRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "nsgName": {
                            "value": "[variables('nsgName')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "9437059312845360120"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "nsgName": {
                              "type": "string"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "isBastionNSG": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "variables": {
                            "securityRules": "[if(parameters('isBastionNSG'), createArray(createObject('name', 'AllowGatewayManager', 'properties', createObject('description', 'Allow GatewayManager', 'protocol', '*', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', 'GatewayManager', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 2702, 'direction', 'Inbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowHttpsInBound', 'properties', createObject('description', 'Allow HTTPs', 'protocol', '*', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', 'Internet', 'destinationAddressPrefix', '*', 'access', 'Allow', 'priority', 2703, 'direction', 'Inbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowSshRdpOutbound', 'properties', createObject('protocol', '*', 'sourcePortRange', '*', 'sourceAddressPrefix', '*', 'destinationAddressPrefix', 'VirtualNetwork', 'access', 'Allow', 'priority', 100, 'direction', 'Outbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray('22', '3389'), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray())), createObject('name', 'AllowAzureCloudOutbound', 'properties', createObject('protocol', 'TCP', 'sourcePortRange', '*', 'destinationPortRange', '443', 'sourceAddressPrefix', '*', 'destinationAddressPrefix', 'AzureCloud', 'access', 'Allow', 'priority', 110, 'direction', 'Outbound', 'sourcePortRanges', createArray(), 'destinationPortRanges', createArray(), 'sourceAddressPrefixes', createArray(), 'destinationAddressPrefixes', createArray()))), createArray())]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/networkSecurityGroups",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('nsgName')]",
                              "location": "[parameters('location')]",
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), createObject())]",
                              "properties": {
                                "securityRules": "[variables('securityRules')]"
                              }
                            }
                          ],
                          "outputs": {
                            "nsgID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('varOnPremRgName'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployBastionInOnPrem')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('bastionName')]",
                      "resourceGroup": "[variables('varOnPremRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "subnetID": "[if(parameters('deployBastionInOnPrem'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName')), '2022-09-01').outputs.bastionSubnetID.value), createObject('value', ''))]",
                          "bastionName": {
                            "value": "[variables('bastionName')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "bastionSku": {
                            "value": "[parameters('bastionSku')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "17645327430110910640"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "bastionName": {
                              "type": "string"
                            },
                            "subnetID": {
                              "type": "string"
                            },
                            "bastionSku": {
                              "type": "string",
                              "allowedValues": [
                                "Basic",
                                "Standard",
                                "Premium"
                              ]
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/bastionHosts",
                              "apiVersion": "2024-01-01",
                              "name": "[parameters('bastionName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "IpConf",
                                    "properties": {
                                      "subnet": {
                                        "id": "[parameters('subnetID')]"
                                      },
                                      "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                                      }
                                    }
                                  }
                                ]
                              },
                              "sku": {
                                "name": "[parameters('bastionSku')]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/bastionHosts'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2024-07-01",
                              "name": "[format('{0}-pip', parameters('bastionName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "publicIPAddressVersion": "IPv4",
                                "publicIPAllocationMethod": "Static"
                              },
                              "sku": {
                                "tier": "Regional",
                                "name": "Standard"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('varOnPremRgName'))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))]"
                      ]
                    },
                    {
                      "condition": "[parameters('deployGatewayInOnPrem')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[variables('gatewayName')]",
                      "resourceGroup": "[variables('varOnPremRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "vpnGatewayName": {
                            "value": "[variables('gatewayName')]"
                          },
                          "vpnGatewaySubnetID": "[if(parameters('deployGatewayInOnPrem'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName')), '2022-09-01').outputs.gatewaySubnetID.value), createObject('value', ''))]",
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "vpnGatewayBgpAsn": "[if(parameters('vpnGwEnebaleBgp'), createObject('value', parameters('vpnGwBgpAsn')), createObject('value', 65515))]",
                          "vpnGatewayEnableBgp": {
                            "value": "[parameters('vpnGwEnebaleBgp')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "17067597851478703533"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vpnGatewayName": {
                              "type": "string"
                            },
                            "vpnGatewaySubnetID": {
                              "type": "string"
                            },
                            "vpnGatewaySKU": {
                              "type": "string",
                              "defaultValue": "VpnGw1"
                            },
                            "vpnGatewayType": {
                              "type": "string",
                              "defaultValue": "Vpn"
                            },
                            "vpnGatewayVPNtype": {
                              "type": "string",
                              "defaultValue": "RouteBased"
                            },
                            "vpnGatewayGen": {
                              "type": "string",
                              "defaultValue": "Generation1"
                            },
                            "vpnGatewayEnableBgp": {
                              "type": "bool"
                            },
                            "vpnGatewayBgpAsn": {
                              "type": "int"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "variables": {
                            "pipName": "[format('{0}-pip', parameters('vpnGatewayName'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworkGateways",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('vpnGatewayName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "gatewayType": "[parameters('vpnGatewayType')]",
                                "vpnType": "[parameters('vpnGatewayVPNtype')]",
                                "enableBgp": "[parameters('vpnGatewayEnableBgp')]",
                                "bgpSettings": {
                                  "asn": "[parameters('vpnGatewayBgpAsn')]"
                                },
                                "sku": {
                                  "name": "[parameters('vpnGatewaySKU')]",
                                  "tier": "[parameters('vpnGatewaySKU')]"
                                },
                                "vpnGatewayGeneration": "[parameters('vpnGatewayGen')]",
                                "activeActive": false,
                                "ipConfigurations": [
                                  {
                                    "name": "ipConfig",
                                    "properties": {
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[parameters('vpnGatewaySubnetID')]"
                                      },
                                      "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                                      }
                                    }
                                  }
                                ]
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworkGateways'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2024-07-01",
                              "name": "[variables('pipName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "publicIPAddressVersion": "IPv4",
                                "publicIPAllocationMethod": "Static"
                              },
                              "sku": {
                                "tier": "Regional",
                                "name": "Standard"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                            }
                          ],
                          "outputs": {
                            "vpnGwPublicIP": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('pipName')), '2024-07-01').ipAddress]"
                            },
                            "vpnGwID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName'))]"
                            },
                            "vpnGwBgpPeeringAddress": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName')), '2024-07-01').bgpSettings.bgpPeeringAddress]"
                            },
                            "vpnGwName": {
                              "type": "string",
                              "value": "[parameters('vpnGatewayName')]"
                            },
                            "vpnGwAsn": {
                              "type": "int",
                              "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName')), '2024-07-01').bgpSettings.asn]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('varOnPremRgName'))]",
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "OnPremRgName": {
                      "type": "string",
                      "value": "[variables('varOnPremRgName')]"
                    },
                    "OnPremGatewayPublicIP": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewayInOnPrem'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwPublicIP.value, 'none')]"
                    },
                    "OnPremGatewayID": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewayInOnPrem'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwID.value, 'none')]"
                    },
                    "OnPremAddressSpace": {
                      "type": "string",
                      "value": "[parameters('AddressSpace')]"
                    },
                    "OnPremGwBgpPeeringAddress": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewayInOnPrem'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwBgpPeeringAddress.value, 'none')]"
                    },
                    "OnPremGwBgpAsn": {
                      "type": "int",
                      "value": "[if(and(parameters('deployGatewayInOnPrem'), parameters('vpnGwEnebaleBgp')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('varOnPremRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwAsn.value, 0)]"
                    }
                  }
                }
              }
            },
            "s2s": {
              "condition": "[variables('deployVPNConnectionsVNET')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('VPN-s2s-Hub-to-OnPrem-{0}', parameters('shortLocationCode'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "HubLocation": {
                    "value": "[parameters('location')]"
                  },
                  "HubRgName": "[if(variables('deployVPNConnectionsVNET'), createObject('value', reference('hubVnet').outputs.hubRgName.value), createObject('value', 'none'))]",
                  "HubGatewayID": "[if(variables('deployVPNConnectionsVNET'), createObject('value', reference('hubVnet').outputs.hubGatewayID.value), createObject('value', 'none'))]",
                  "HubGatewayPublicIP": "[if(variables('deployVPNConnectionsVNET'), createObject('value', reference('hubVnet').outputs.hubGatewayPublicIP.value), createObject('value', 'none'))]",
                  "HubAddressPrefixes": "[if(variables('deployVPNConnectionsVNET'), createObject('value', variables('AllAddressSpaces')), createObject('value', createArray()))]",
                  "HubLocalGatewayName": "[if(variables('deployVPNConnectionsVNET'), createObject('value', format('LocalGateway-Hub-{0}', parameters('shortLocationCode'))), createObject('value', 'none'))]",
                  "OnPremLocation": {
                    "value": "[parameters('location')]"
                  },
                  "OnPremRgName": "[if(variables('deployVPNConnectionsVNET'), createObject('value', reference('onprem').outputs.OnPremRgName.value), createObject('value', 'none'))]",
                  "OnPremGatewayID": "[if(variables('deployVPNConnectionsVNET'), createObject('value', reference('onprem').outputs.OnPremGatewayID.value), createObject('value', 'none'))]",
                  "OnPremGatewayPublicIP": "[if(variables('deployVPNConnectionsVNET'), createObject('value', reference('onprem').outputs.OnPremGatewayPublicIP.value), createObject('value', 'none'))]",
                  "OnPremAddressPrefixes": "[if(variables('deployVPNConnectionsVNET'), createObject('value', array(reference('onprem').outputs.OnPremAddressSpace.value)), createObject('value', createArray()))]",
                  "OnPremLocalGatewayName": "[if(variables('deployVPNConnectionsVNET'), createObject('value', format('LocalGateway-OnPrem-{0}', parameters('shortLocationCode'))), createObject('value', 'none'))]",
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "enableBgp": {
                    "value": "[and(and(parameters('hubBgp'), parameters('onpremBgp')), variables('deployVPNConnectionsVNET'))]"
                  },
                  "HubBgpAsn": {
                    "value": "[parameters('hubBgpAsn')]"
                  },
                  "HubBgpPeeringAddress": "[if(variables('deployVPNConnectionsVNET'), createObject('value', reference('hubVnet').outputs.HubGwBgpPeeringAddress.value), createObject('value', 'none'))]",
                  "OnPremBgpAsn": {
                    "value": "[parameters('onpremBgpAsn')]"
                  },
                  "OnPremBgpPeeringAddress": "[if(variables('deployVPNConnectionsVNET'), createObject('value', reference('onprem').outputs.OnPremGwBgpPeeringAddress.value), createObject('value', 'none'))]",
                  "sharedKey": "[if(and(parameters('deploySiteToSite'), variables('deployVPNConnectionsVNET')), createObject('value', parameters('sharedKey')), createObject('value', 'none'))]",
                  "hubSubscriptionID": {
                    "value": "[parameters('hubSubscriptionID')]"
                  },
                  "onPremSubscriptionID": {
                    "value": "[parameters('onPremSubscriptionID')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11191372226905820960"
                    }
                  },
                  "parameters": {
                    "OnPremLocation": {
                      "type": "string"
                    },
                    "HubLocation": {
                      "type": "string"
                    },
                    "sharedKey": {
                      "type": "securestring"
                    },
                    "enableBgp": {
                      "type": "bool"
                    },
                    "tagsByResource": {
                      "type": "object"
                    },
                    "OnPremGatewayID": {
                      "type": "string"
                    },
                    "OnPremRgName": {
                      "type": "string"
                    },
                    "OnPremBgpAsn": {
                      "type": "int"
                    },
                    "OnPremBgpPeeringAddress": {
                      "type": "string"
                    },
                    "HubGatewayPublicIP": {
                      "type": "string"
                    },
                    "HubLocalGatewayName": {
                      "type": "string"
                    },
                    "HubAddressPrefixes": {
                      "type": "array"
                    },
                    "HubGatewayID": {
                      "type": "string"
                    },
                    "HubRgName": {
                      "type": "string"
                    },
                    "HubBgpAsn": {
                      "type": "int"
                    },
                    "HubBgpPeeringAddress": {
                      "type": "string"
                    },
                    "OnPremGatewayPublicIP": {
                      "type": "string"
                    },
                    "OnPremLocalGatewayName": {
                      "type": "string"
                    },
                    "OnPremAddressPrefixes": {
                      "type": "array"
                    },
                    "hubSubscriptionID": {
                      "type": "string"
                    },
                    "onPremSubscriptionID": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('HubLocalGatewayName')]",
                      "subscriptionId": "[parameters('onPremSubscriptionID')]",
                      "resourceGroup": "[parameters('OnPremRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "LocalGatewayAddressPrefixes": {
                            "value": "[parameters('HubAddressPrefixes')]"
                          },
                          "LocalGatewayName": {
                            "value": "[parameters('HubLocalGatewayName')]"
                          },
                          "LocalGatewayPublicIP": {
                            "value": "[parameters('HubGatewayPublicIP')]"
                          },
                          "location": {
                            "value": "[parameters('OnPremLocation')]"
                          },
                          "connectionName": {
                            "value": "[format('VPNtoHub-{0}', parameters('HubLocation'))]"
                          },
                          "sharedKey": {
                            "value": "[parameters('sharedKey')]"
                          },
                          "VpnGatewayID": {
                            "value": "[parameters('OnPremGatewayID')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "enableBgp": {
                            "value": "[parameters('enableBgp')]"
                          },
                          "BgpAsn": {
                            "value": "[parameters('HubBgpAsn')]"
                          },
                          "BgpPeeringAddress": {
                            "value": "[parameters('HubBgpPeeringAddress')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "3222989944455527977"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "LocalGatewayName": {
                              "type": "string"
                            },
                            "LocalGatewayPublicIP": {
                              "type": "string"
                            },
                            "LocalGatewayAddressPrefixes": {
                              "type": "array"
                            },
                            "VpnGatewayID": {
                              "type": "string"
                            },
                            "connectionName": {
                              "type": "string"
                            },
                            "sharedKey": {
                              "type": "securestring"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "enableBgp": {
                              "type": "bool"
                            },
                            "BgpAsn": {
                              "type": "int"
                            },
                            "BgpPeeringAddress": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/localNetworkGateways",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('LocalGatewayName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "gatewayIpAddress": "[parameters('LocalGatewayPublicIP')]",
                                "bgpSettings": "[if(parameters('enableBgp'), createObject('asn', parameters('BgpAsn'), 'bgpPeeringAddress', parameters('BgpPeeringAddress')), null())]",
                                "localNetworkAddressSpace": "[if(parameters('enableBgp'), createObject(), createObject('addressPrefixes', parameters('LocalGatewayAddressPrefixes')))]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/localNetworkGateways'), createObject())]"
                            },
                            {
                              "type": "Microsoft.Network/connections",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('connectionName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "connectionType": "IPsec",
                                "connectionMode": "Default",
                                "connectionProtocol": "IKEv2",
                                "useLocalAzureIpAddress": false,
                                "usePolicyBasedTrafficSelectors": false,
                                "enableBgp": "[parameters('enableBgp')]",
                                "sharedKey": "[parameters('sharedKey')]",
                                "virtualNetworkGateway1": {
                                  "id": "[parameters('VpnGatewayID')]",
                                  "properties": {}
                                },
                                "localNetworkGateway2": {
                                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]",
                                  "properties": {}
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/connections'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('OnPremLocalGatewayName')]",
                      "subscriptionId": "[parameters('hubSubscriptionID')]",
                      "resourceGroup": "[parameters('HubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "LocalGatewayAddressPrefixes": {
                            "value": "[parameters('OnPremAddressPrefixes')]"
                          },
                          "LocalGatewayName": {
                            "value": "[parameters('OnPremLocalGatewayName')]"
                          },
                          "LocalGatewayPublicIP": {
                            "value": "[parameters('OnPremGatewayPublicIP')]"
                          },
                          "location": {
                            "value": "[parameters('HubLocation')]"
                          },
                          "connectionName": {
                            "value": "[format('VPNtoOnPrem-{0}', parameters('OnPremLocation'))]"
                          },
                          "sharedKey": {
                            "value": "[parameters('sharedKey')]"
                          },
                          "VpnGatewayID": {
                            "value": "[parameters('HubGatewayID')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "enableBgp": {
                            "value": "[parameters('enableBgp')]"
                          },
                          "BgpAsn": {
                            "value": "[parameters('OnPremBgpAsn')]"
                          },
                          "BgpPeeringAddress": {
                            "value": "[parameters('OnPremBgpPeeringAddress')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "3222989944455527977"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "LocalGatewayName": {
                              "type": "string"
                            },
                            "LocalGatewayPublicIP": {
                              "type": "string"
                            },
                            "LocalGatewayAddressPrefixes": {
                              "type": "array"
                            },
                            "VpnGatewayID": {
                              "type": "string"
                            },
                            "connectionName": {
                              "type": "string"
                            },
                            "sharedKey": {
                              "type": "securestring"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "enableBgp": {
                              "type": "bool"
                            },
                            "BgpAsn": {
                              "type": "int"
                            },
                            "BgpPeeringAddress": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/localNetworkGateways",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('LocalGatewayName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "gatewayIpAddress": "[parameters('LocalGatewayPublicIP')]",
                                "bgpSettings": "[if(parameters('enableBgp'), createObject('asn', parameters('BgpAsn'), 'bgpPeeringAddress', parameters('BgpPeeringAddress')), null())]",
                                "localNetworkAddressSpace": "[if(parameters('enableBgp'), createObject(), createObject('addressPrefixes', parameters('LocalGatewayAddressPrefixes')))]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/localNetworkGateways'), createObject())]"
                            },
                            {
                              "type": "Microsoft.Network/connections",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('connectionName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "connectionType": "IPsec",
                                "connectionMode": "Default",
                                "connectionProtocol": "IKEv2",
                                "useLocalAzureIpAddress": false,
                                "usePolicyBasedTrafficSelectors": false,
                                "enableBgp": "[parameters('enableBgp')]",
                                "sharedKey": "[parameters('sharedKey')]",
                                "virtualNetworkGateway1": {
                                  "id": "[parameters('VpnGatewayID')]",
                                  "properties": {}
                                },
                                "localNetworkGateway2": {
                                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]",
                                  "properties": {}
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/connections'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "hubVnet",
                "onprem"
              ]
            },
            "vwans2s": {
              "condition": "[variables('deployVPNConnectionsVWAN')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-s2s-Hub-vWan-OnPrem-{1}', parameters('hubRgName'), parameters('shortLocationCode'))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "HubLocation": {
                    "value": "[parameters('location')]"
                  },
                  "HubShortLocationCode": {
                    "value": "[parameters('shortLocationCode')]"
                  },
                  "HubRgName": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', parameters('hubRgName')), createObject('value', 'none'))]",
                  "vwanVpnGwInfo": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', reference('vwan').outputs.vpnGwBgpIp.value), createObject('value', createArray()))]",
                  "vwanGatewayName": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', reference('vwan').outputs.vpnGwName.value), createObject('value', 'none'))]",
                  "vwanID": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', parameters('vWanID')), createObject('value', 'none'))]",
                  "vwanHubName": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', reference('vwan').outputs.vWanHubName.value), createObject('value', 'none'))]",
                  "HubAddressPrefixes": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', variables('AllAddressSpaces')), createObject('value', createArray()))]",
                  "HubLocalGatewayName": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', format('LocalGateway-Hub-{0}', parameters('shortLocationCode'))), createObject('value', 'none'))]",
                  "OnPremLocation": {
                    "value": "[parameters('location')]"
                  },
                  "OnPremShortLocationCode": {
                    "value": "[parameters('shortLocationCode')]"
                  },
                  "OnPremRgName": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', reference('onprem').outputs.OnPremRgName.value), createObject('value', 'none'))]",
                  "OnPremGatewayID": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', reference('onprem').outputs.OnPremGatewayID.value), createObject('value', 'none'))]",
                  "OnPremGatewayPublicIP": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', reference('onprem').outputs.OnPremGatewayPublicIP.value), createObject('value', 'none'))]",
                  "OnPremAddressPrefixes": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', array(reference('onprem').outputs.OnPremAddressSpace.value)), createObject('value', createArray()))]",
                  "OnPremBgpPeeringAddress": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', reference('onprem').outputs.OnPremGwBgpPeeringAddress.value), createObject('value', 'none'))]",
                  "OnPremBgpAsn": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', reference('onprem').outputs.OnPremGwBgpAsn.value), createObject('value', 65515))]",
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "enableBgp": {
                    "value": "[and(and(parameters('hubBgp'), parameters('onpremBgp')), variables('deployVPNConnectionsVWAN'))]"
                  },
                  "sharedKey": "[if(variables('deployVPNConnectionsVWAN'), createObject('value', parameters('sharedKey')), createObject('value', 'none'))]",
                  "hubSubscriptionID": {
                    "value": "[parameters('hubSubscriptionID')]"
                  },
                  "onPremSubscriptionID": {
                    "value": "[parameters('onPremSubscriptionID')]"
                  },
                  "deployFirewallInHub": {
                    "value": "[and(parameters('deployFirewallInHub'), variables('deployVPNConnectionsVWAN'))]"
                  },
                  "isCrossRegion": {
                    "value": false
                  },
                  "routingIntent": {
                    "value": "[or(parameters('internetTrafficRoutingPolicy'), parameters('privateTrafficRoutingPolicy'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "1530954957267726841"
                    }
                  },
                  "parameters": {
                    "OnPremLocation": {
                      "type": "string"
                    },
                    "OnPremShortLocationCode": {
                      "type": "string"
                    },
                    "HubLocation": {
                      "type": "string"
                    },
                    "HubShortLocationCode": {
                      "type": "string"
                    },
                    "sharedKey": {
                      "type": "securestring"
                    },
                    "enableBgp": {
                      "type": "bool"
                    },
                    "tagsByResource": {
                      "type": "object"
                    },
                    "OnPremRgName": {
                      "type": "string"
                    },
                    "OnPremGatewayID": {
                      "type": "string"
                    },
                    "HubLocalGatewayName": {
                      "type": "string"
                    },
                    "HubAddressPrefixes": {
                      "type": "array"
                    },
                    "vwanVpnGwInfo": {
                      "type": "array"
                    },
                    "HubRgName": {
                      "type": "string"
                    },
                    "OnPremBgpAsn": {
                      "type": "int"
                    },
                    "OnPremBgpPeeringAddress": {
                      "type": "string"
                    },
                    "OnPremGatewayPublicIP": {
                      "type": "string"
                    },
                    "OnPremAddressPrefixes": {
                      "type": "array"
                    },
                    "vwanGatewayName": {
                      "type": "string"
                    },
                    "vwanHubName": {
                      "type": "string"
                    },
                    "vwanID": {
                      "type": "string"
                    },
                    "deployFirewallInHub": {
                      "type": "bool"
                    },
                    "hubSubscriptionID": {
                      "type": "string"
                    },
                    "onPremSubscriptionID": {
                      "type": "string"
                    },
                    "routingIntent": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "isCrossRegion": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "variables": {
                    "vWanCrossRegionPostfix": "[if(parameters('isCrossRegion'), '-CrossRegion', '')]"
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "vpnOnPrem",
                        "count": "[length(parameters('vwanVpnGwInfo'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}{1}', parameters('HubLocalGatewayName'), add(copyIndex(), 1))]",
                      "subscriptionId": "[parameters('onPremSubscriptionID')]",
                      "resourceGroup": "[parameters('OnPremRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "LocalGatewayAddressPrefixes": {
                            "value": "[parameters('HubAddressPrefixes')]"
                          },
                          "LocalGatewayName": {
                            "value": "[format('{0}{1}', parameters('HubLocalGatewayName'), add(copyIndex(), 1))]"
                          },
                          "LocalGatewayPublicIP": {
                            "value": "[parameters('vwanVpnGwInfo')[copyIndex()].tunnelIpAddresses[0]]"
                          },
                          "location": {
                            "value": "[parameters('OnPremLocation')]"
                          },
                          "connectionName": {
                            "value": "[format('VPNtoVWAN{0}-{1}', add(copyIndex(), 1), parameters('HubShortLocationCode'))]"
                          },
                          "sharedKey": {
                            "value": "[parameters('sharedKey')]"
                          },
                          "VpnGatewayID": {
                            "value": "[parameters('OnPremGatewayID')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "enableBgp": {
                            "value": "[parameters('enableBgp')]"
                          },
                          "BgpAsn": {
                            "value": 65515
                          },
                          "BgpPeeringAddress": {
                            "value": "[parameters('vwanVpnGwInfo')[copyIndex()].defaultBgpIpAddresses[0]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "3222989944455527977"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "LocalGatewayName": {
                              "type": "string"
                            },
                            "LocalGatewayPublicIP": {
                              "type": "string"
                            },
                            "LocalGatewayAddressPrefixes": {
                              "type": "array"
                            },
                            "VpnGatewayID": {
                              "type": "string"
                            },
                            "connectionName": {
                              "type": "string"
                            },
                            "sharedKey": {
                              "type": "securestring"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "enableBgp": {
                              "type": "bool"
                            },
                            "BgpAsn": {
                              "type": "int"
                            },
                            "BgpPeeringAddress": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/localNetworkGateways",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('LocalGatewayName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "gatewayIpAddress": "[parameters('LocalGatewayPublicIP')]",
                                "bgpSettings": "[if(parameters('enableBgp'), createObject('asn', parameters('BgpAsn'), 'bgpPeeringAddress', parameters('BgpPeeringAddress')), null())]",
                                "localNetworkAddressSpace": "[if(parameters('enableBgp'), createObject(), createObject('addressPrefixes', parameters('LocalGatewayAddressPrefixes')))]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/localNetworkGateways'), createObject())]"
                            },
                            {
                              "type": "Microsoft.Network/connections",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('connectionName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "connectionType": "IPsec",
                                "connectionMode": "Default",
                                "connectionProtocol": "IKEv2",
                                "useLocalAzureIpAddress": false,
                                "usePolicyBasedTrafficSelectors": false,
                                "enableBgp": "[parameters('enableBgp')]",
                                "sharedKey": "[parameters('sharedKey')]",
                                "virtualNetworkGateway1": {
                                  "id": "[parameters('VpnGatewayID')]",
                                  "properties": {}
                                },
                                "localNetworkGateway2": {
                                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]",
                                  "properties": {}
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/connections'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('vwanVPNsites-{0}', parameters('OnPremLocation'))]",
                      "subscriptionId": "[parameters('hubSubscriptionID')]",
                      "resourceGroup": "[parameters('HubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "enableBgp": {
                            "value": "[parameters('enableBgp')]"
                          },
                          "addressPrefixes": {
                            "value": "[parameters('OnPremAddressPrefixes')]"
                          },
                          "linkBgpAsn": {
                            "value": "[parameters('OnPremBgpAsn')]"
                          },
                          "linkBgpPeeringAddress": {
                            "value": "[parameters('OnPremBgpPeeringAddress')]"
                          },
                          "linkPublicIP": {
                            "value": "[parameters('OnPremGatewayPublicIP')]"
                          },
                          "location": {
                            "value": "[parameters('HubLocation')]"
                          },
                          "vpnSiteName": {
                            "value": "[format('VPNtoOnPrem-{0}{1}', parameters('OnPremShortLocationCode'), variables('vWanCrossRegionPostfix'))]"
                          },
                          "vwanGatewayName": {
                            "value": "[parameters('vwanGatewayName')]"
                          },
                          "vwanHubName": {
                            "value": "[parameters('vwanHubName')]"
                          },
                          "vwanID": {
                            "value": "[parameters('vwanID')]"
                          },
                          "sharedKey": {
                            "value": "[parameters('sharedKey')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "propagateToNoneRouteTable": {
                            "value": "[parameters('deployFirewallInHub')]"
                          },
                          "routingIntent": {
                            "value": "[parameters('routingIntent')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "12912877370285026645"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "enableBgp": {
                              "type": "bool"
                            },
                            "linkBgpAsn": {
                              "type": "int"
                            },
                            "linkBgpPeeringAddress": {
                              "type": "string"
                            },
                            "linkPublicIP": {
                              "type": "string"
                            },
                            "vpnSiteName": {
                              "type": "string"
                            },
                            "vwanID": {
                              "type": "string"
                            },
                            "vwanHubName": {
                              "type": "string"
                            },
                            "vwanGatewayName": {
                              "type": "string"
                            },
                            "sharedKey": {
                              "type": "securestring"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "propagateToNoneRouteTable": {
                              "type": "bool"
                            },
                            "addressPrefixes": {
                              "type": "array"
                            },
                            "routingIntent": {
                              "type": "bool"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[not(parameters('enableBgp'))]",
                              "type": "Microsoft.Network/vpnSites",
                              "apiVersion": "2024-05-01",
                              "name": "[parameters('vpnSiteName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "deviceProperties": {
                                  "deviceModel": "LabBuilder",
                                  "deviceVendor": "LabBuilder",
                                  "linkSpeedInMbps": 1000
                                },
                                "addressSpace": {
                                  "addressPrefixes": "[parameters('addressPrefixes')]"
                                },
                                "vpnSiteLinks": [
                                  {
                                    "name": "[format('{0}-Link', parameters('vpnSiteName'))]",
                                    "properties": {
                                      "linkProperties": {
                                        "linkProviderName": "Azure",
                                        "linkSpeedInMbps": 1000
                                      },
                                      "ipAddress": "[parameters('linkPublicIP')]"
                                    }
                                  }
                                ],
                                "virtualWan": {
                                  "id": "[parameters('vwanID')]"
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/vpnSites'), createObject())]"
                            },
                            {
                              "condition": "[parameters('enableBgp')]",
                              "type": "Microsoft.Network/vpnSites",
                              "apiVersion": "2024-05-01",
                              "name": "[parameters('vpnSiteName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "deviceProperties": {
                                  "deviceModel": "LabBuilder",
                                  "deviceVendor": "LabBuilder",
                                  "linkSpeedInMbps": 1000
                                },
                                "addressSpace": {
                                  "addressPrefixes": []
                                },
                                "vpnSiteLinks": [
                                  {
                                    "name": "[format('{0}-Link', parameters('vpnSiteName'))]",
                                    "properties": {
                                      "linkProperties": {
                                        "linkProviderName": "Azure",
                                        "linkSpeedInMbps": 1000
                                      },
                                      "ipAddress": "[parameters('linkPublicIP')]",
                                      "bgpProperties": {
                                        "asn": "[parameters('linkBgpAsn')]",
                                        "bgpPeeringAddress": "[parameters('linkBgpPeeringAddress')]"
                                      }
                                    }
                                  }
                                ],
                                "virtualWan": {
                                  "id": "[parameters('vwanID')]"
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/vpnSites'), createObject())]"
                            },
                            {
                              "type": "Microsoft.Network/vpnGateways/vpnConnections",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/Connection-{1}', parameters('vwanGatewayName'), parameters('vpnSiteName'))]",
                              "properties": {
                                "remoteVpnSite": {
                                  "id": "[if(parameters('enableBgp'), resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName')), resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName')))]"
                                },
                                "routingConfiguration": "[if(parameters('routingIntent'), createObject(), createObject('associatedRouteTable', createObject('id', resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vwanHubName'), 'defaultRouteTable')), 'propagatedRouteTables', createObject('ids', createArray(createObject('id', resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vwanHubName'), if(parameters('propagateToNoneRouteTable'), 'noneRouteTable', 'defaultRouteTable')))), 'labels', createArray(if(parameters('propagateToNoneRouteTable'), '', 'default'))), 'vnetRoutes', createObject('staticRoutes', createArray())))]",
                                "vpnLinkConnections": [
                                  {
                                    "name": "[format('{0}-Link', parameters('vpnSiteName'))]",
                                    "properties": {
                                      "vpnSiteLink": {
                                        "id": "[if(parameters('enableBgp'), reference(resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName')), '2024-05-01').vpnSiteLinks[0].id, reference(resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName')), '2024-05-01').vpnSiteLinks[0].id)]"
                                      },
                                      "enableBgp": "[parameters('enableBgp')]",
                                      "vpnConnectionProtocolType": "IKEv2",
                                      "sharedKey": "[parameters('sharedKey')]",
                                      "ipsecPolicies": [],
                                      "enableRateLimiting": false,
                                      "useLocalAzureIpAddress": false,
                                      "usePolicyBasedTrafficSelectors": false,
                                      "vpnLinkConnectionMode": "Default"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName'))]",
                                "[resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName'))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "onprem",
                "vwan"
              ]
            }
          },
          "outputs": {
            "HubRtFirewallName": {
              "type": "string",
              "value": "[if(and(and(parameters('deployFirewallInHub'), parameters('deployHUB')), variables('isVnetHub')), reference('hubVnet').outputs.rtFirewallName.value, 'none')]"
            },
            "VNET_AzFwPrivateIp": {
              "type": "string",
              "value": "[if(and(and(parameters('deployFirewallInHub'), parameters('deployHUB')), variables('isVnetHub')), reference('hubVnet').outputs.azFwIp.value, 'none')]"
            },
            "vWanHubID": {
              "type": "string",
              "value": "[if(and(parameters('deployHUB'), variables('isVwanHub')), reference('vwan').outputs.vWanHubID.value, 'none')]"
            },
            "HubVnetID": {
              "type": "string",
              "value": "[if(and(parameters('deployHUB'), variables('isVnetHub')), reference('hubVnet').outputs.hubVnetID.value, 'none')]"
            },
            "VpnSettings": {
              "$ref": "#/definitions/_VPNSettings",
              "value": {
                "Hub": "[if(variables('deployVPNConnectionsVNET'), createObject('type', 'VNET', 'GatewayID', if(variables('deployVPNConnectionsVNET'), reference('hubVnet').outputs.hubGatewayID.value, 'none'), 'GatewayPublicIP', if(variables('deployVPNConnectionsVNET'), reference('hubVnet').outputs.hubGatewayPublicIP.value, 'none'), 'AddressPrefixes', if(variables('deployVPNConnectionsVNET'), variables('AllAddressSpaces'), createArray()), 'BgpAsn', parameters('hubBgpAsn'), 'BgpPeeringAddress', if(variables('deployVPNConnectionsVNET'), reference('hubVnet').outputs.HubGwBgpPeeringAddress.value, 'none'), 'Location', parameters('location'), 'shortLocationCode', parameters('shortLocationCode'), 'enableBgp', parameters('hubBgp')), createObject('type', 'VWAN', 'vWanID', if(variables('deployVPNConnectionsVWAN'), parameters('vWanID'), 'none'), 'vWanHubName', if(variables('deployVPNConnectionsVWAN'), reference('vwan').outputs.vWanHubName.value, 'none'), 'vWanGatewayName', if(variables('deployVPNConnectionsVWAN'), reference('vwan').outputs.vpnGwName.value, 'none'), 'vwanVpnGwInfo', if(variables('deployVPNConnectionsVWAN'), reference('vwan').outputs.vpnGwBgpIp.value, createArray()), 'AddressPrefixes', if(variables('deployVPNConnectionsVWAN'), variables('AllAddressSpaces'), createArray()), 'BgpAsn', 65515, 'Location', parameters('location'), 'shortLocationCode', parameters('shortLocationCode'), 'enableBgp', and(and(parameters('hubBgp'), parameters('onpremBgp')), variables('deployVPNConnectionsVWAN')), 'propagateToNoneRouteTable', and(parameters('deployFirewallInHub'), variables('deployVPNConnectionsVWAN'))))]",
                "OnPrem": {
                  "type": "VNET",
                  "GatewayID": "[if(or(variables('deployVPNConnectionsVNET'), variables('deployVPNConnectionsVWAN')), reference('onprem').outputs.OnPremGatewayID.value, 'none')]",
                  "GatewayPublicIP": "[if(or(variables('deployVPNConnectionsVNET'), variables('deployVPNConnectionsVWAN')), reference('onprem').outputs.OnPremGatewayPublicIP.value, 'none')]",
                  "AddressPrefixes": "[if(or(variables('deployVPNConnectionsVNET'), variables('deployVPNConnectionsVWAN')), array(reference('onprem').outputs.OnPremAddressSpace.value), createArray())]",
                  "BgpAsn": "[parameters('onpremBgpAsn')]",
                  "BgpPeeringAddress": "[if(or(variables('deployVPNConnectionsVNET'), variables('deployVPNConnectionsVWAN')), reference('onprem').outputs.OnPremGwBgpPeeringAddress.value, 'none')]",
                  "Location": "[parameters('location')]",
                  "shortLocationCode": "[parameters('shortLocationCode')]",
                  "enableBgp": "[parameters('onpremBgp')]"
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "avnmmanager",
        "avnmrg",
        "dcrvminsights",
        "vwan",
        "vwanhubrg"
      ]
    },
    "GlobalVnetPeerings": {
      "condition": "[variables('deployGlobalVnetPeerings')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('deployGlobalVnetPeerings-{0}-{1}', variables('regionShortCodes')[parameters('locations')[0].region], variables('regionShortCodes')[parameters('locations')[1].region])]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetIDA": "[if(variables('deployGlobalVnetPeerings'), createObject('value', reference(format('deployRegion[{0}]', 0)).outputs.HubVnetID.value), createObject('value', 'noMultiRegion'))]",
          "vnetIDB": "[if(variables('deployGlobalVnetPeerings'), createObject('value', reference(format('deployRegion[{0}]', 1)).outputs.HubVnetID.value), createObject('value', 'noMultiRegion'))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9609043373619495226"
            }
          },
          "parameters": {
            "vnetIDA": {
              "type": "string"
            },
            "useRemoteGatewaysVnetA": {
              "type": "bool",
              "defaultValue": false
            },
            "allowGatewayTransitVnetA": {
              "type": "bool",
              "defaultValue": false
            },
            "vnetIDB": {
              "type": "string"
            },
            "useRemoteGatewaysVnetB": {
              "type": "bool",
              "defaultValue": false
            },
            "allowGatewayTransitVnetB": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "variables": {
            "subscriptionA": "[split(parameters('vnetIDA'), '/')[2]]",
            "subscriptionB": "[split(parameters('vnetIDB'), '/')[2]]",
            "rgNameA": "[split(parameters('vnetIDA'), '/')[4]]",
            "rgNameB": "[split(parameters('vnetIDB'), '/')[4]]",
            "vnetNameA": "[split(parameters('vnetIDA'), '/')[8]]",
            "vnetNameB": "[split(parameters('vnetIDB'), '/')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('peeringTo{0}', variables('vnetNameB'))]",
              "subscriptionId": "[variables('subscriptionA')]",
              "resourceGroup": "[variables('rgNameA')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "peeringName": {
                    "value": "[format('{0}/peeringTo{1}', variables('vnetNameA'), variables('vnetNameB'))]"
                  },
                  "remoteVnetID": {
                    "value": "[parameters('vnetIDB')]"
                  },
                  "useRemoteGateways": {
                    "value": "[parameters('useRemoteGatewaysVnetA')]"
                  },
                  "allowGatewayTransit": {
                    "value": "[parameters('allowGatewayTransitVnetA')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "16929137594029772900"
                    }
                  },
                  "parameters": {
                    "remoteVnetID": {
                      "type": "string"
                    },
                    "peeringName": {
                      "type": "string"
                    },
                    "allowForwardedTraffic": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowGatewayTransit": {
                      "type": "bool"
                    },
                    "allowVirtualNetworkAccess": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "useRemoteGateways": {
                      "type": "bool"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2024-07-01",
                      "name": "[parameters('peeringName')]",
                      "properties": {
                        "remoteVirtualNetwork": {
                          "id": "[parameters('remoteVnetID')]"
                        },
                        "allowForwardedTraffic": "[parameters('allowForwardedTraffic')]",
                        "allowGatewayTransit": "[parameters('allowGatewayTransit')]",
                        "allowVirtualNetworkAccess": "[parameters('allowVirtualNetworkAccess')]",
                        "useRemoteGateways": "[parameters('useRemoteGateways')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('subscriptionB'), variables('rgNameB')), 'Microsoft.Resources/deployments', format('peeringTo{0}', variables('vnetNameA')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('peeringTo{0}', variables('vnetNameA'))]",
              "subscriptionId": "[variables('subscriptionB')]",
              "resourceGroup": "[variables('rgNameB')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "peeringName": {
                    "value": "[format('{0}/peeringTo{1}', variables('vnetNameB'), variables('vnetNameA'))]"
                  },
                  "remoteVnetID": {
                    "value": "[parameters('vnetIDA')]"
                  },
                  "useRemoteGateways": {
                    "value": "[parameters('useRemoteGatewaysVnetB')]"
                  },
                  "allowGatewayTransit": {
                    "value": "[parameters('allowGatewayTransitVnetB')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "16929137594029772900"
                    }
                  },
                  "parameters": {
                    "remoteVnetID": {
                      "type": "string"
                    },
                    "peeringName": {
                      "type": "string"
                    },
                    "allowForwardedTraffic": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowGatewayTransit": {
                      "type": "bool"
                    },
                    "allowVirtualNetworkAccess": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "useRemoteGateways": {
                      "type": "bool"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2024-07-01",
                      "name": "[parameters('peeringName')]",
                      "properties": {
                        "remoteVirtualNetwork": {
                          "id": "[parameters('remoteVnetID')]"
                        },
                        "allowForwardedTraffic": "[parameters('allowForwardedTraffic')]",
                        "allowGatewayTransit": "[parameters('allowGatewayTransit')]",
                        "allowVirtualNetworkAccess": "[parameters('allowVirtualNetworkAccess')]",
                        "useRemoteGateways": "[parameters('useRemoteGateways')]"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[format('deployRegion[{0}]', 1)]",
        "[format('deployRegion[{0}]', 0)]"
      ]
    },
    "route": {
      "copy": {
        "name": "route",
        "count": "[length(parameters('locations'))]"
      },
      "condition": "[variables('deployRoutes')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('DeployRegionRoute-{0}', variables('regionShortCodes')[parameters('locations')[copyIndex()].region])]",
      "subscriptionId": "[parameters('locations')[copyIndex()].hubSubscriptionID]",
      "resourceGroup": "[format('{0}-{1}', parameters('hubRgName'), variables('regionShortCodes')[parameters('locations')[copyIndex()].region])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "routeName": "[if(variables('deployRoutes'), createObject('value', format('{0}/toRegion{1}', reference(format('deployRegion[{0}]', copyIndex())).outputs.HubRtFirewallName.value, variables('regionShortCodes')[parameters('locations')[if(and(equals(length(parameters('locations')), 2), equals(copyIndex(), 0)), 1, 0)].region])), createObject('value', 'noRoute'))]",
          "routeNextHopType": {
            "value": "VirtualAppliance"
          },
          "routeNextHopIpAddress": "[if(variables('deployRoutes'), createObject('value', reference(format('deployRegion[{0}]', if(and(equals(length(parameters('locations')), 2), equals(copyIndex(), 0)), 1, 0))).outputs.VNET_AzFwPrivateIp.value), createObject('value', 'noRoute'))]",
          "routeAddressPrefix": "[if(variables('deployRoutes'), createObject('value', parameters('locations')[if(and(equals(length(parameters('locations')), 2), equals(copyIndex(), 0)), 1, 0)].addressSpace), createObject('value', 'noRoute'))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "12643868851101357934"
            }
          },
          "parameters": {
            "routeName": {
              "type": "string"
            },
            "routeNextHopType": {
              "type": "string",
              "defaultValue": "VirtualAppliance",
              "allowedValues": [
                "VirtualAppliance",
                "Internet",
                "VnetLocal",
                "VirtualNetworkGateway",
                "None"
              ]
            },
            "routeAddressPrefix": {
              "type": "string"
            },
            "routeNextHopIpAddress": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/routeTables/routes",
              "apiVersion": "2024-07-01",
              "name": "[parameters('routeName')]",
              "properties": {
                "nextHopType": "[parameters('routeNextHopType')]",
                "addressPrefix": "[parameters('routeAddressPrefix')]",
                "nextHopIpAddress": "[parameters('routeNextHopIpAddress')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[format('deployRegion[{0}]', copyIndex())]",
        "[format('deployRegion[{0}]', if(and(equals(length(parameters('locations')), 2), equals(copyIndex(), 0)), 1, 0))]"
      ]
    },
    "CrossRegionVPNConnections": {
      "copy": {
        "name": "CrossRegionVPNConnections",
        "count": "[length(parameters('locations'))]"
      },
      "condition": "[variables('deployCrossRegionVPNConnections')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('CrossRegionVPNConnections{0}-{1}-{2}', add(copyIndex(), 1), variables('regionShortCodes')[parameters('locations')[0].region], variables('regionShortCodes')[parameters('locations')[1].region])]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "HubVPN": "[if(variables('deployCrossRegionVPNConnections'), createObject('value', reference(format('deployRegion[{0}]', if(and(equals(length(parameters('locations')), 2), equals(copyIndex(), 0)), 1, 0))).outputs.VpnSettings.value.Hub), createObject('value', reference(format('deployRegion[{0}]', 0)).outputs.VpnSettings.value.Hub))]",
          "OnPrem": "[if(variables('deployCrossRegionVPNConnections'), createObject('value', reference(format('deployRegion[{0}]', if(and(equals(length(parameters('locations')), 2), equals(copyIndex(), 0)), 0, 1))).outputs.VpnSettings.value.OnPrem), createObject('value', reference(format('deployRegion[{0}]', 0)).outputs.VpnSettings.value.OnPrem))]",
          "sharedKey": {
            "value": "[parameters('sharedKey')]"
          },
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          },
          "routingIntent": {
            "value": "[or(parameters('internetTrafficRoutingPolicy'), parameters('privateTrafficRoutingPolicy'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "17294987703958703909"
            }
          },
          "definitions": {
            "_1._VPNGatewaySettingsVNET": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "allowedValues": [
                    "VNET"
                  ]
                },
                "GatewayID": {
                  "type": "string"
                },
                "GatewayPublicIP": {
                  "type": "string"
                },
                "AddressPrefixes": {
                  "type": "array"
                },
                "BgpAsn": {
                  "type": "int"
                },
                "BgpPeeringAddress": {
                  "type": "string"
                },
                "Location": {
                  "type": "string"
                },
                "shortLocationCode": {
                  "type": "string"
                },
                "enableBgp": {
                  "type": "bool"
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "_1._VPNGatewaySettingsVWAN": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "allowedValues": [
                    "VWAN"
                  ]
                },
                "vWanID": {
                  "type": "string"
                },
                "vWanHubName": {
                  "type": "string"
                },
                "vWanGatewayName": {
                  "type": "string"
                },
                "vwanVpnGwInfo": {
                  "type": "array"
                },
                "AddressPrefixes": {
                  "type": "array"
                },
                "BgpAsn": {
                  "type": "int"
                },
                "Location": {
                  "type": "string"
                },
                "shortLocationCode": {
                  "type": "string"
                },
                "enableBgp": {
                  "type": "bool"
                },
                "propagateToNoneRouteTable": {
                  "type": "bool"
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            },
            "_VPNSettings": {
              "type": "object",
              "properties": {
                "Hub": {
                  "type": "object",
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "VNET": {
                        "$ref": "#/definitions/_1._VPNGatewaySettingsVNET"
                      },
                      "VWAN": {
                        "$ref": "#/definitions/_1._VPNGatewaySettingsVWAN"
                      }
                    }
                  }
                },
                "OnPrem": {
                  "type": "object",
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "VNET": {
                        "$ref": "#/definitions/_1._VPNGatewaySettingsVNET"
                      },
                      "VWAN": {
                        "$ref": "#/definitions/_1._VPNGatewaySettingsVWAN"
                      }
                    }
                  }
                }
              },
              "metadata": {
                "__bicep_imported_from!": {
                  "sourceTemplate": "types.bicep"
                }
              }
            }
          },
          "parameters": {
            "HubVPN": {
              "$ref": "#/definitions/_VPNSettings/properties/Hub"
            },
            "OnPrem": {
              "$ref": "#/definitions/_VPNSettings/properties/OnPrem"
            },
            "sharedKey": {
              "type": "securestring"
            },
            "tagsByResource": {
              "type": "object"
            },
            "routingIntent": {
              "type": "bool"
            }
          },
          "variables": {
            "isvWan": "[equals(parameters('HubVPN').type, 'VWAN')]",
            "isvNet": "[equals(parameters('HubVPN').type, 'VNET')]"
          },
          "resources": {
            "s2s": {
              "condition": "[variables('isvNet')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('VPN-s2s-CrossRegion-{0}-{1}', parameters('HubVPN').shortLocationCode, parameters('OnPrem').shortLocationCode)]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "HubLocation": {
                    "value": "[parameters('HubVPN').Location]"
                  },
                  "HubRgName": {
                    "value": "[split(parameters('HubVPN').GatewayID, '/')[4]]"
                  },
                  "HubGatewayID": {
                    "value": "[parameters('HubVPN').GatewayID]"
                  },
                  "HubGatewayPublicIP": {
                    "value": "[parameters('HubVPN').GatewayPublicIP]"
                  },
                  "HubAddressPrefixes": {
                    "value": "[parameters('HubVPN').AddressPrefixes]"
                  },
                  "HubLocalGatewayName": {
                    "value": "[format('LocalGateway-Hub-{0}', parameters('HubVPN').shortLocationCode)]"
                  },
                  "HubBgpAsn": {
                    "value": "[parameters('HubVPN').BgpAsn]"
                  },
                  "HubBgpPeeringAddress": {
                    "value": "[parameters('HubVPN').BgpPeeringAddress]"
                  },
                  "OnPremLocation": {
                    "value": "[parameters('OnPrem').Location]"
                  },
                  "OnPremRgName": {
                    "value": "[split(parameters('OnPrem').GatewayID, '/')[4]]"
                  },
                  "OnPremGatewayID": {
                    "value": "[parameters('OnPrem').GatewayID]"
                  },
                  "OnPremGatewayPublicIP": {
                    "value": "[parameters('OnPrem').GatewayPublicIP]"
                  },
                  "OnPremAddressPrefixes": {
                    "value": "[parameters('OnPrem').AddressPrefixes]"
                  },
                  "OnPremLocalGatewayName": {
                    "value": "[format('LocalGateway-OnPrem-{0}', parameters('OnPrem').shortLocationCode)]"
                  },
                  "OnPremBgpAsn": {
                    "value": "[parameters('OnPrem').BgpAsn]"
                  },
                  "OnPremBgpPeeringAddress": {
                    "value": "[parameters('OnPrem').BgpPeeringAddress]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "enableBgp": {
                    "value": "[and(parameters('HubVPN').enableBgp, parameters('HubVPN').enableBgp)]"
                  },
                  "sharedKey": {
                    "value": "[parameters('sharedKey')]"
                  },
                  "hubSubscriptionID": {
                    "value": "[split(parameters('HubVPN').GatewayID, '/')[2]]"
                  },
                  "onPremSubscriptionID": {
                    "value": "[split(parameters('OnPrem').GatewayID, '/')[2]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11191372226905820960"
                    }
                  },
                  "parameters": {
                    "OnPremLocation": {
                      "type": "string"
                    },
                    "HubLocation": {
                      "type": "string"
                    },
                    "sharedKey": {
                      "type": "securestring"
                    },
                    "enableBgp": {
                      "type": "bool"
                    },
                    "tagsByResource": {
                      "type": "object"
                    },
                    "OnPremGatewayID": {
                      "type": "string"
                    },
                    "OnPremRgName": {
                      "type": "string"
                    },
                    "OnPremBgpAsn": {
                      "type": "int"
                    },
                    "OnPremBgpPeeringAddress": {
                      "type": "string"
                    },
                    "HubGatewayPublicIP": {
                      "type": "string"
                    },
                    "HubLocalGatewayName": {
                      "type": "string"
                    },
                    "HubAddressPrefixes": {
                      "type": "array"
                    },
                    "HubGatewayID": {
                      "type": "string"
                    },
                    "HubRgName": {
                      "type": "string"
                    },
                    "HubBgpAsn": {
                      "type": "int"
                    },
                    "HubBgpPeeringAddress": {
                      "type": "string"
                    },
                    "OnPremGatewayPublicIP": {
                      "type": "string"
                    },
                    "OnPremLocalGatewayName": {
                      "type": "string"
                    },
                    "OnPremAddressPrefixes": {
                      "type": "array"
                    },
                    "hubSubscriptionID": {
                      "type": "string"
                    },
                    "onPremSubscriptionID": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('HubLocalGatewayName')]",
                      "subscriptionId": "[parameters('onPremSubscriptionID')]",
                      "resourceGroup": "[parameters('OnPremRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "LocalGatewayAddressPrefixes": {
                            "value": "[parameters('HubAddressPrefixes')]"
                          },
                          "LocalGatewayName": {
                            "value": "[parameters('HubLocalGatewayName')]"
                          },
                          "LocalGatewayPublicIP": {
                            "value": "[parameters('HubGatewayPublicIP')]"
                          },
                          "location": {
                            "value": "[parameters('OnPremLocation')]"
                          },
                          "connectionName": {
                            "value": "[format('VPNtoHub-{0}', parameters('HubLocation'))]"
                          },
                          "sharedKey": {
                            "value": "[parameters('sharedKey')]"
                          },
                          "VpnGatewayID": {
                            "value": "[parameters('OnPremGatewayID')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "enableBgp": {
                            "value": "[parameters('enableBgp')]"
                          },
                          "BgpAsn": {
                            "value": "[parameters('HubBgpAsn')]"
                          },
                          "BgpPeeringAddress": {
                            "value": "[parameters('HubBgpPeeringAddress')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "3222989944455527977"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "LocalGatewayName": {
                              "type": "string"
                            },
                            "LocalGatewayPublicIP": {
                              "type": "string"
                            },
                            "LocalGatewayAddressPrefixes": {
                              "type": "array"
                            },
                            "VpnGatewayID": {
                              "type": "string"
                            },
                            "connectionName": {
                              "type": "string"
                            },
                            "sharedKey": {
                              "type": "securestring"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "enableBgp": {
                              "type": "bool"
                            },
                            "BgpAsn": {
                              "type": "int"
                            },
                            "BgpPeeringAddress": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/localNetworkGateways",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('LocalGatewayName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "gatewayIpAddress": "[parameters('LocalGatewayPublicIP')]",
                                "bgpSettings": "[if(parameters('enableBgp'), createObject('asn', parameters('BgpAsn'), 'bgpPeeringAddress', parameters('BgpPeeringAddress')), null())]",
                                "localNetworkAddressSpace": "[if(parameters('enableBgp'), createObject(), createObject('addressPrefixes', parameters('LocalGatewayAddressPrefixes')))]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/localNetworkGateways'), createObject())]"
                            },
                            {
                              "type": "Microsoft.Network/connections",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('connectionName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "connectionType": "IPsec",
                                "connectionMode": "Default",
                                "connectionProtocol": "IKEv2",
                                "useLocalAzureIpAddress": false,
                                "usePolicyBasedTrafficSelectors": false,
                                "enableBgp": "[parameters('enableBgp')]",
                                "sharedKey": "[parameters('sharedKey')]",
                                "virtualNetworkGateway1": {
                                  "id": "[parameters('VpnGatewayID')]",
                                  "properties": {}
                                },
                                "localNetworkGateway2": {
                                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]",
                                  "properties": {}
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/connections'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('OnPremLocalGatewayName')]",
                      "subscriptionId": "[parameters('hubSubscriptionID')]",
                      "resourceGroup": "[parameters('HubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "LocalGatewayAddressPrefixes": {
                            "value": "[parameters('OnPremAddressPrefixes')]"
                          },
                          "LocalGatewayName": {
                            "value": "[parameters('OnPremLocalGatewayName')]"
                          },
                          "LocalGatewayPublicIP": {
                            "value": "[parameters('OnPremGatewayPublicIP')]"
                          },
                          "location": {
                            "value": "[parameters('HubLocation')]"
                          },
                          "connectionName": {
                            "value": "[format('VPNtoOnPrem-{0}', parameters('OnPremLocation'))]"
                          },
                          "sharedKey": {
                            "value": "[parameters('sharedKey')]"
                          },
                          "VpnGatewayID": {
                            "value": "[parameters('HubGatewayID')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "enableBgp": {
                            "value": "[parameters('enableBgp')]"
                          },
                          "BgpAsn": {
                            "value": "[parameters('OnPremBgpAsn')]"
                          },
                          "BgpPeeringAddress": {
                            "value": "[parameters('OnPremBgpPeeringAddress')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "3222989944455527977"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "LocalGatewayName": {
                              "type": "string"
                            },
                            "LocalGatewayPublicIP": {
                              "type": "string"
                            },
                            "LocalGatewayAddressPrefixes": {
                              "type": "array"
                            },
                            "VpnGatewayID": {
                              "type": "string"
                            },
                            "connectionName": {
                              "type": "string"
                            },
                            "sharedKey": {
                              "type": "securestring"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "enableBgp": {
                              "type": "bool"
                            },
                            "BgpAsn": {
                              "type": "int"
                            },
                            "BgpPeeringAddress": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/localNetworkGateways",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('LocalGatewayName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "gatewayIpAddress": "[parameters('LocalGatewayPublicIP')]",
                                "bgpSettings": "[if(parameters('enableBgp'), createObject('asn', parameters('BgpAsn'), 'bgpPeeringAddress', parameters('BgpPeeringAddress')), null())]",
                                "localNetworkAddressSpace": "[if(parameters('enableBgp'), createObject(), createObject('addressPrefixes', parameters('LocalGatewayAddressPrefixes')))]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/localNetworkGateways'), createObject())]"
                            },
                            {
                              "type": "Microsoft.Network/connections",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('connectionName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "connectionType": "IPsec",
                                "connectionMode": "Default",
                                "connectionProtocol": "IKEv2",
                                "useLocalAzureIpAddress": false,
                                "usePolicyBasedTrafficSelectors": false,
                                "enableBgp": "[parameters('enableBgp')]",
                                "sharedKey": "[parameters('sharedKey')]",
                                "virtualNetworkGateway1": {
                                  "id": "[parameters('VpnGatewayID')]",
                                  "properties": {}
                                },
                                "localNetworkGateway2": {
                                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]",
                                  "properties": {}
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/connections'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            },
            "vwans2s": {
              "condition": "[variables('isvWan')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('VPN-s2s-CrossRegion-{0}-{1}', parameters('HubVPN').shortLocationCode, parameters('OnPrem').shortLocationCode)]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "HubLocation": {
                    "value": "[parameters('HubVPN').Location]"
                  },
                  "HubShortLocationCode": {
                    "value": "[parameters('HubVPN').shortLocationCode]"
                  },
                  "HubRgName": {
                    "value": "[split(parameters('HubVPN').vWanID, '/')[4]]"
                  },
                  "vwanVpnGwInfo": {
                    "value": "[parameters('HubVPN').vwanVpnGwInfo]"
                  },
                  "vwanGatewayName": {
                    "value": "[parameters('HubVPN').vWanGatewayName]"
                  },
                  "vwanID": {
                    "value": "[parameters('HubVPN').vWanID]"
                  },
                  "vwanHubName": {
                    "value": "[parameters('HubVPN').vWanHubName]"
                  },
                  "HubAddressPrefixes": {
                    "value": "[parameters('HubVPN').AddressPrefixes]"
                  },
                  "HubLocalGatewayName": {
                    "value": "[format('LocalGateway-Hub-{0}', parameters('HubVPN').shortLocationCode)]"
                  },
                  "OnPremLocation": {
                    "value": "[parameters('OnPrem').Location]"
                  },
                  "OnPremShortLocationCode": {
                    "value": "[parameters('OnPrem').shortLocationCode]"
                  },
                  "OnPremRgName": {
                    "value": "[split(parameters('OnPrem').GatewayID, '/')[4]]"
                  },
                  "OnPremGatewayID": {
                    "value": "[parameters('OnPrem').GatewayID]"
                  },
                  "OnPremGatewayPublicIP": {
                    "value": "[parameters('OnPrem').GatewayPublicIP]"
                  },
                  "OnPremAddressPrefixes": {
                    "value": "[parameters('OnPrem').AddressPrefixes]"
                  },
                  "OnPremBgpPeeringAddress": {
                    "value": "[parameters('OnPrem').BgpPeeringAddress]"
                  },
                  "OnPremBgpAsn": {
                    "value": "[parameters('OnPrem').BgpAsn]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "enableBgp": {
                    "value": "[and(parameters('HubVPN').enableBgp, parameters('HubVPN').enableBgp)]"
                  },
                  "sharedKey": {
                    "value": "[parameters('sharedKey')]"
                  },
                  "hubSubscriptionID": {
                    "value": "[split(parameters('HubVPN').vWanID, '/')[2]]"
                  },
                  "onPremSubscriptionID": {
                    "value": "[split(parameters('OnPrem').GatewayID, '/')[2]]"
                  },
                  "deployFirewallInHub": {
                    "value": "[parameters('HubVPN').propagateToNoneRouteTable]"
                  },
                  "isCrossRegion": {
                    "value": true
                  },
                  "routingIntent": {
                    "value": "[parameters('routingIntent')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "1530954957267726841"
                    }
                  },
                  "parameters": {
                    "OnPremLocation": {
                      "type": "string"
                    },
                    "OnPremShortLocationCode": {
                      "type": "string"
                    },
                    "HubLocation": {
                      "type": "string"
                    },
                    "HubShortLocationCode": {
                      "type": "string"
                    },
                    "sharedKey": {
                      "type": "securestring"
                    },
                    "enableBgp": {
                      "type": "bool"
                    },
                    "tagsByResource": {
                      "type": "object"
                    },
                    "OnPremRgName": {
                      "type": "string"
                    },
                    "OnPremGatewayID": {
                      "type": "string"
                    },
                    "HubLocalGatewayName": {
                      "type": "string"
                    },
                    "HubAddressPrefixes": {
                      "type": "array"
                    },
                    "vwanVpnGwInfo": {
                      "type": "array"
                    },
                    "HubRgName": {
                      "type": "string"
                    },
                    "OnPremBgpAsn": {
                      "type": "int"
                    },
                    "OnPremBgpPeeringAddress": {
                      "type": "string"
                    },
                    "OnPremGatewayPublicIP": {
                      "type": "string"
                    },
                    "OnPremAddressPrefixes": {
                      "type": "array"
                    },
                    "vwanGatewayName": {
                      "type": "string"
                    },
                    "vwanHubName": {
                      "type": "string"
                    },
                    "vwanID": {
                      "type": "string"
                    },
                    "deployFirewallInHub": {
                      "type": "bool"
                    },
                    "hubSubscriptionID": {
                      "type": "string"
                    },
                    "onPremSubscriptionID": {
                      "type": "string"
                    },
                    "routingIntent": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "isCrossRegion": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "variables": {
                    "vWanCrossRegionPostfix": "[if(parameters('isCrossRegion'), '-CrossRegion', '')]"
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "vpnOnPrem",
                        "count": "[length(parameters('vwanVpnGwInfo'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}{1}', parameters('HubLocalGatewayName'), add(copyIndex(), 1))]",
                      "subscriptionId": "[parameters('onPremSubscriptionID')]",
                      "resourceGroup": "[parameters('OnPremRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "LocalGatewayAddressPrefixes": {
                            "value": "[parameters('HubAddressPrefixes')]"
                          },
                          "LocalGatewayName": {
                            "value": "[format('{0}{1}', parameters('HubLocalGatewayName'), add(copyIndex(), 1))]"
                          },
                          "LocalGatewayPublicIP": {
                            "value": "[parameters('vwanVpnGwInfo')[copyIndex()].tunnelIpAddresses[0]]"
                          },
                          "location": {
                            "value": "[parameters('OnPremLocation')]"
                          },
                          "connectionName": {
                            "value": "[format('VPNtoVWAN{0}-{1}', add(copyIndex(), 1), parameters('HubShortLocationCode'))]"
                          },
                          "sharedKey": {
                            "value": "[parameters('sharedKey')]"
                          },
                          "VpnGatewayID": {
                            "value": "[parameters('OnPremGatewayID')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "enableBgp": {
                            "value": "[parameters('enableBgp')]"
                          },
                          "BgpAsn": {
                            "value": 65515
                          },
                          "BgpPeeringAddress": {
                            "value": "[parameters('vwanVpnGwInfo')[copyIndex()].defaultBgpIpAddresses[0]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "3222989944455527977"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "LocalGatewayName": {
                              "type": "string"
                            },
                            "LocalGatewayPublicIP": {
                              "type": "string"
                            },
                            "LocalGatewayAddressPrefixes": {
                              "type": "array"
                            },
                            "VpnGatewayID": {
                              "type": "string"
                            },
                            "connectionName": {
                              "type": "string"
                            },
                            "sharedKey": {
                              "type": "securestring"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "enableBgp": {
                              "type": "bool"
                            },
                            "BgpAsn": {
                              "type": "int"
                            },
                            "BgpPeeringAddress": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/localNetworkGateways",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('LocalGatewayName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "gatewayIpAddress": "[parameters('LocalGatewayPublicIP')]",
                                "bgpSettings": "[if(parameters('enableBgp'), createObject('asn', parameters('BgpAsn'), 'bgpPeeringAddress', parameters('BgpPeeringAddress')), null())]",
                                "localNetworkAddressSpace": "[if(parameters('enableBgp'), createObject(), createObject('addressPrefixes', parameters('LocalGatewayAddressPrefixes')))]"
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/localNetworkGateways'), createObject())]"
                            },
                            {
                              "type": "Microsoft.Network/connections",
                              "apiVersion": "2024-07-01",
                              "name": "[parameters('connectionName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "connectionType": "IPsec",
                                "connectionMode": "Default",
                                "connectionProtocol": "IKEv2",
                                "useLocalAzureIpAddress": false,
                                "usePolicyBasedTrafficSelectors": false,
                                "enableBgp": "[parameters('enableBgp')]",
                                "sharedKey": "[parameters('sharedKey')]",
                                "virtualNetworkGateway1": {
                                  "id": "[parameters('VpnGatewayID')]",
                                  "properties": {}
                                },
                                "localNetworkGateway2": {
                                  "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]",
                                  "properties": {}
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/connections'), createObject())]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('vwanVPNsites-{0}', parameters('OnPremLocation'))]",
                      "subscriptionId": "[parameters('hubSubscriptionID')]",
                      "resourceGroup": "[parameters('HubRgName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "enableBgp": {
                            "value": "[parameters('enableBgp')]"
                          },
                          "addressPrefixes": {
                            "value": "[parameters('OnPremAddressPrefixes')]"
                          },
                          "linkBgpAsn": {
                            "value": "[parameters('OnPremBgpAsn')]"
                          },
                          "linkBgpPeeringAddress": {
                            "value": "[parameters('OnPremBgpPeeringAddress')]"
                          },
                          "linkPublicIP": {
                            "value": "[parameters('OnPremGatewayPublicIP')]"
                          },
                          "location": {
                            "value": "[parameters('HubLocation')]"
                          },
                          "vpnSiteName": {
                            "value": "[format('VPNtoOnPrem-{0}{1}', parameters('OnPremShortLocationCode'), variables('vWanCrossRegionPostfix'))]"
                          },
                          "vwanGatewayName": {
                            "value": "[parameters('vwanGatewayName')]"
                          },
                          "vwanHubName": {
                            "value": "[parameters('vwanHubName')]"
                          },
                          "vwanID": {
                            "value": "[parameters('vwanID')]"
                          },
                          "sharedKey": {
                            "value": "[parameters('sharedKey')]"
                          },
                          "tagsByResource": {
                            "value": "[parameters('tagsByResource')]"
                          },
                          "propagateToNoneRouteTable": {
                            "value": "[parameters('deployFirewallInHub')]"
                          },
                          "routingIntent": {
                            "value": "[parameters('routingIntent')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "12912877370285026645"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "enableBgp": {
                              "type": "bool"
                            },
                            "linkBgpAsn": {
                              "type": "int"
                            },
                            "linkBgpPeeringAddress": {
                              "type": "string"
                            },
                            "linkPublicIP": {
                              "type": "string"
                            },
                            "vpnSiteName": {
                              "type": "string"
                            },
                            "vwanID": {
                              "type": "string"
                            },
                            "vwanHubName": {
                              "type": "string"
                            },
                            "vwanGatewayName": {
                              "type": "string"
                            },
                            "sharedKey": {
                              "type": "securestring"
                            },
                            "tagsByResource": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "propagateToNoneRouteTable": {
                              "type": "bool"
                            },
                            "addressPrefixes": {
                              "type": "array"
                            },
                            "routingIntent": {
                              "type": "bool"
                            }
                          },
                          "resources": [
                            {
                              "condition": "[not(parameters('enableBgp'))]",
                              "type": "Microsoft.Network/vpnSites",
                              "apiVersion": "2024-05-01",
                              "name": "[parameters('vpnSiteName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "deviceProperties": {
                                  "deviceModel": "LabBuilder",
                                  "deviceVendor": "LabBuilder",
                                  "linkSpeedInMbps": 1000
                                },
                                "addressSpace": {
                                  "addressPrefixes": "[parameters('addressPrefixes')]"
                                },
                                "vpnSiteLinks": [
                                  {
                                    "name": "[format('{0}-Link', parameters('vpnSiteName'))]",
                                    "properties": {
                                      "linkProperties": {
                                        "linkProviderName": "Azure",
                                        "linkSpeedInMbps": 1000
                                      },
                                      "ipAddress": "[parameters('linkPublicIP')]"
                                    }
                                  }
                                ],
                                "virtualWan": {
                                  "id": "[parameters('vwanID')]"
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/vpnSites'), createObject())]"
                            },
                            {
                              "condition": "[parameters('enableBgp')]",
                              "type": "Microsoft.Network/vpnSites",
                              "apiVersion": "2024-05-01",
                              "name": "[parameters('vpnSiteName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "deviceProperties": {
                                  "deviceModel": "LabBuilder",
                                  "deviceVendor": "LabBuilder",
                                  "linkSpeedInMbps": 1000
                                },
                                "addressSpace": {
                                  "addressPrefixes": []
                                },
                                "vpnSiteLinks": [
                                  {
                                    "name": "[format('{0}-Link', parameters('vpnSiteName'))]",
                                    "properties": {
                                      "linkProperties": {
                                        "linkProviderName": "Azure",
                                        "linkSpeedInMbps": 1000
                                      },
                                      "ipAddress": "[parameters('linkPublicIP')]",
                                      "bgpProperties": {
                                        "asn": "[parameters('linkBgpAsn')]",
                                        "bgpPeeringAddress": "[parameters('linkBgpPeeringAddress')]"
                                      }
                                    }
                                  }
                                ],
                                "virtualWan": {
                                  "id": "[parameters('vwanID')]"
                                }
                              },
                              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/vpnSites'), createObject())]"
                            },
                            {
                              "type": "Microsoft.Network/vpnGateways/vpnConnections",
                              "apiVersion": "2024-05-01",
                              "name": "[format('{0}/Connection-{1}', parameters('vwanGatewayName'), parameters('vpnSiteName'))]",
                              "properties": {
                                "remoteVpnSite": {
                                  "id": "[if(parameters('enableBgp'), resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName')), resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName')))]"
                                },
                                "routingConfiguration": "[if(parameters('routingIntent'), createObject(), createObject('associatedRouteTable', createObject('id', resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vwanHubName'), 'defaultRouteTable')), 'propagatedRouteTables', createObject('ids', createArray(createObject('id', resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vwanHubName'), if(parameters('propagateToNoneRouteTable'), 'noneRouteTable', 'defaultRouteTable')))), 'labels', createArray(if(parameters('propagateToNoneRouteTable'), '', 'default'))), 'vnetRoutes', createObject('staticRoutes', createArray())))]",
                                "vpnLinkConnections": [
                                  {
                                    "name": "[format('{0}-Link', parameters('vpnSiteName'))]",
                                    "properties": {
                                      "vpnSiteLink": {
                                        "id": "[if(parameters('enableBgp'), reference(resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName')), '2024-05-01').vpnSiteLinks[0].id, reference(resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName')), '2024-05-01').vpnSiteLinks[0].id)]"
                                      },
                                      "enableBgp": "[parameters('enableBgp')]",
                                      "vpnConnectionProtocolType": "IKEv2",
                                      "sharedKey": "[parameters('sharedKey')]",
                                      "ipsecPolicies": [],
                                      "enableRateLimiting": false,
                                      "useLocalAzureIpAddress": false,
                                      "usePolicyBasedTrafficSelectors": false,
                                      "vpnLinkConnectionMode": "Default"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName'))]",
                                "[resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName'))]"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[format('deployRegion[{0}]', 0)]",
        "[format('deployRegion[{0}]', if(and(equals(length(parameters('locations')), 2), equals(copyIndex(), 0)), 1, 0))]",
        "[format('deployRegion[{0}]', 0)]",
        "[format('deployRegion[{0}]', if(and(equals(length(parameters('locations')), 2), equals(copyIndex(), 0)), 0, 1))]"
      ]
    }
  },
  "outputs": {
    "vWanHubIDs": {
      "type": "array",
      "copy": {
        "count": "[length(parameters('locations'))]",
        "input": "[if(variables('deployVWAN'), reference(format('deployRegion[{0}]', copyIndex())).outputs.vWanHubID.value, 'noVWAN')]"
      }
    },
    "subscriptionIDs": {
      "type": "array",
      "value": "[union(if(parameters('deployHUB'), map(parameters('locations'), lambda('loc', lambdaVariables('loc').hubSubscriptionID)), createArray()), if(parameters('deploySpokes'), map(parameters('locations'), lambda('loc', lambdaVariables('loc').spokeSubscriptionID)), createArray()), if(parameters('deployOnPrem'), map(parameters('locations'), lambda('loc', lambdaVariables('loc').onPremSubscriptionID)), createArray()))]"
    }
  }
}