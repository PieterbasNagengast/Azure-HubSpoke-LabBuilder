{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.29.47.4906",
      "templateHash": "4340450326454855651"
    }
  },
  "parameters": {
    "hubSubscriptionID": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "SubscriptionID for HUB deployemnt"
      }
    },
    "spokeSubscriptionID": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "SubscriptionID for Spoke deployemnt"
      }
    },
    "onPremSubscriptionID": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]",
      "metadata": {
        "description": "SubscriptionID for OnPrem deployemnt"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for Virtual Machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin Password for Virtual Machines"
      }
    },
    "vmSizeSpoke": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "Spoke Virtual Machine SKU. Default = Standard_B2s"
      }
    },
    "vmSizeOnPrem": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "OnPrem Virtual Machine SKU. Default = Standard_B2s"
      }
    },
    "osTypeSpoke": {
      "type": "string",
      "defaultValue": "Windows",
      "allowedValues": [
        "Linux",
        "Windows"
      ],
      "metadata": {
        "description": "Spoke Virtual Machine(s) OS type. Windows or Linux. Default = Windows"
      }
    },
    "osTypeOnPrem": {
      "type": "string",
      "defaultValue": "Windows",
      "allowedValues": [
        "Linux",
        "Windows"
      ],
      "metadata": {
        "description": "OnPrem Virtual Machine OS type. Windows or Linux. Default = Windows"
      }
    },
    "AddressSpace": {
      "type": "string",
      "defaultValue": "172.16.0.0/16",
      "metadata": {
        "description": "IP Address space used for VNETs in deployment. Only enter a /16 subnet. Default = 172.16.0.0/16"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Azure Region. Defualt = Deployment location"
      }
    },
    "tagsByResource": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags by resource types"
      }
    },
    "diagnosticWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "LogAnalytics Workspace resourceID"
      }
    },
    "deploySpokes": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Spoke VNETs"
      }
    },
    "spokeRgNamePrefix": {
      "type": "string",
      "defaultValue": "rg-spoke",
      "metadata": {
        "description": "Spoke resource group prefix name"
      }
    },
    "amountOfSpokes": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Amount of Spoke VNETs you want to deploy. Default = 2"
      }
    },
    "deployVMsInSpokes": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy VM in every Spoke VNET"
      }
    },
    "deployVnetPeeringMesh": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Directly connect VNET Spokes (Fully Meshed Topology)"
      }
    },
    "deployHUB": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Hub"
      }
    },
    "hubType": {
      "type": "string",
      "defaultValue": "VNET",
      "allowedValues": [
        "VNET",
        "VWAN"
      ],
      "metadata": {
        "description": "Deploy Hub VNET or Azuere vWAN"
      }
    },
    "hubRgName": {
      "type": "string",
      "defaultValue": "rg-hub",
      "metadata": {
        "description": "Hub resource group pre-fix name"
      }
    },
    "deployBastionInHub": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Bastion Host in Hub VNET"
      }
    },
    "bastionInHubSKU": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Hub Bastion SKU"
      }
    },
    "deployGatewayInHub": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Virtual Network Gateway in Hub VNET"
      }
    },
    "deployFirewallInHub": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Azure Firewall in Hub VNET. includes deployment of custom route tables in Spokes and Hub VNETs"
      }
    },
    "AzureFirewallTier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Azure Firewall Tier: Standard or Premium"
      }
    },
    "deployFirewallrules": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Firewall policy Rule Collection group which allows spoke-to-spoke and internet traffic"
      }
    },
    "firewallDNSproxy": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Azure Firewall DNS Proxy"
      }
    },
    "deployUDRs": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Dploy route tables (UDR's) to VM subnet(s) in Hub and Spokes"
      }
    },
    "hubBgp": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable BGP on Hub Gateway"
      }
    },
    "hubBgpAsn": {
      "type": "int",
      "defaultValue": 65515,
      "metadata": {
        "description": "Hub BGP ASN"
      }
    },
    "deployVnetPeeringAVNM": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Let Azure Virtual Network Manager manage Peerings in Hub&Spoke"
      }
    },
    "internetTrafficRoutingPolicy": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Azure vWAN routing Intent Policy for Internet Traffic"
      }
    },
    "privateTrafficRoutingPolicy": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Azure vWAN routing Intent Policy for Private Traffic"
      }
    },
    "deployOnPrem": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Virtual Network Gateway in OnPrem"
      }
    },
    "onpremRgName": {
      "type": "string",
      "defaultValue": "rg-onprem",
      "metadata": {
        "description": "OnPrem Resource Group Name"
      }
    },
    "deployBastionInOnPrem": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Bastion Host in OnPrem VNET"
      }
    },
    "bastionInOnPremSKU": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "OnPrem Bastion SKU"
      }
    },
    "deployVMinOnPrem": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy VM in OnPrem VNET"
      }
    },
    "deployGatewayinOnPrem": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Virtual Network Gateway in OnPrem VNET"
      }
    },
    "deploySiteToSite": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Site-to-Site VPN connection between OnPrem and Hub Gateways"
      }
    },
    "sharedKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Site-to-Site ShareKey"
      }
    },
    "onpremBgp": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable BGP on OnPrem Gateway"
      }
    },
    "onpremBgpAsn": {
      "type": "int",
      "defaultValue": 65020,
      "metadata": {
        "description": "OnPrem BGP ASN"
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "AllAddressSpaces",
        "count": "[length(range(0, add(parameters('amountOfSpokes'), 1)))]",
        "input": "[cidrSubnet(parameters('AddressSpace'), 24, range(0, add(parameters('amountOfSpokes'), 1))[copyIndex('AllAddressSpaces')])]"
      }
    ],
    "isVnetHub": "[equals(parameters('hubType'), 'VNET')]",
    "isVwanHub": "[equals(parameters('hubType'), 'VWAN')]"
  },
  "resources": [
    {
      "condition": "[and(parameters('deployHUB'), variables('isVnetHub'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))]",
      "subscriptionId": "[parameters('hubSubscriptionID')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deployBastionInHub": {
            "value": "[and(parameters('deployBastionInHub'), variables('isVnetHub'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "AddressSpace": {
            "value": "[parameters('AddressSpace')]"
          },
          "hubAddressSpace": {
            "value": "[variables('AllAddressSpaces')[0]]"
          },
          "deployFirewallInHub": {
            "value": "[and(parameters('deployFirewallInHub'), variables('isVnetHub'))]"
          },
          "AzureFirewallTier": {
            "value": "[parameters('AzureFirewallTier')]"
          },
          "hubRgName": {
            "value": "[parameters('hubRgName')]"
          },
          "deployFirewallrules": {
            "value": "[and(parameters('deployFirewallrules'), variables('isVnetHub'))]"
          },
          "deployGatewayInHub": {
            "value": "[and(parameters('deployGatewayInHub'), variables('isVnetHub'))]"
          },
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          },
          "AllSpokeAddressSpaces": {
            "value": "[skip(variables('AllAddressSpaces'), 1)]"
          },
          "vpnGwBgpAsn": "[if(parameters('hubBgp'), createObject('value', parameters('hubBgpAsn')), createObject('value', 65515))]",
          "vpnGwEnebaleBgp": {
            "value": "[parameters('hubBgp')]"
          },
          "deployUDRs": {
            "value": "[parameters('deployUDRs')]"
          },
          "bastionSku": {
            "value": "[parameters('bastionInHubSKU')]"
          },
          "diagnosticWorkspaceId": {
            "value": "[parameters('diagnosticWorkspaceId')]"
          },
          "firewallDNSproxy": {
            "value": "[and(and(parameters('firewallDNSproxy'), parameters('deployFirewallInHub')), variables('isVnetHub'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "8628231579858590847"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "AddressSpace": {
              "type": "string"
            },
            "hubAddressSpace": {
              "type": "string"
            },
            "deployBastionInHub": {
              "type": "bool"
            },
            "bastionSku": {
              "type": "string"
            },
            "deployFirewallInHub": {
              "type": "bool"
            },
            "AzureFirewallTier": {
              "type": "string"
            },
            "hubRgName": {
              "type": "string"
            },
            "deployFirewallrules": {
              "type": "bool"
            },
            "deployUDRs": {
              "type": "bool"
            },
            "deployGatewayInHub": {
              "type": "bool"
            },
            "tagsByResource": {
              "type": "object"
            },
            "AllSpokeAddressSpaces": {
              "type": "array"
            },
            "firewallDNSproxy": {
              "type": "bool"
            },
            "vpnGwEnebaleBgp": {
              "type": "bool"
            },
            "vpnGwBgpAsn": {
              "type": "int"
            },
            "diagnosticWorkspaceId": {
              "type": "string"
            }
          },
          "variables": {
            "firewallSubnetPrefix": "[cidrSubnet(parameters('hubAddressSpace'), 26, 0)]",
            "bastionSubnetPrefix": "[cidrSubnet(parameters('hubAddressSpace'), 26, 1)]",
            "gatewaySubnetPrefix": "[cidrSubnet(parameters('hubAddressSpace'), 26, 2)]",
            "firewallIP": "[cidrHost(variables('firewallSubnetPrefix'), 3)]",
            "bastionName": "Bastion-Hub",
            "rtNameVPNgwSubnet": "RT-Hub-GatewaySubnet",
            "hubVnetName": "VNET-Hub",
            "firewallName": "Firewall-Hub",
            "gatewayName": "Gateway-Hub"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2023-07-01",
              "name": "[parameters('hubRgName')]",
              "location": "[parameters('location')]",
              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/subscriptions/resourceGroups'), createObject())]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "hubvnet",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetAddressSpcae": {
                    "value": "[parameters('hubAddressSpace')]"
                  },
                  "rtGwID": "[if(and(parameters('deployFirewallInHub'), parameters('deployGatewayInHub')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable-VPNGW'), '2022-09-01').outputs.rtID.value), createObject('value', 'none'))]",
                  "vnetname": {
                    "value": "[variables('hubVnetName')]"
                  },
                  "bastionSubnetPrefix": {
                    "value": "[variables('bastionSubnetPrefix')]"
                  },
                  "firewallSubnetPrefix": {
                    "value": "[variables('firewallSubnetPrefix')]"
                  },
                  "GatewaySubnetPrefix": {
                    "value": "[variables('gatewaySubnetPrefix')]"
                  },
                  "deployDefaultSubnet": {
                    "value": false
                  },
                  "deployBastionSubnet": {
                    "value": "[parameters('deployBastionInHub')]"
                  },
                  "deployFirewallSubnet": {
                    "value": "[parameters('deployFirewallInHub')]"
                  },
                  "deployGatewaySubnet": {
                    "value": "[parameters('deployGatewayInHub')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "azFwIp": {
                    "value": "[variables('firewallIP')]"
                  },
                  "firewallDNSproxy": {
                    "value": "[parameters('firewallDNSproxy')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "7931326192284124820"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vnetname": {
                      "type": "string"
                    },
                    "vnetAddressSpcae": {
                      "type": "string"
                    },
                    "defaultSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "bastionSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "firewallSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "GatewaySubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "nsgID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "rtDefID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "rtGwID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "deployDefaultSubnet": {
                      "type": "bool"
                    },
                    "deployBastionSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployFirewallSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployGatewaySubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "firewallDNSproxy": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "azFwIp": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "variables": {
                    "defaultSubnet": "[if(parameters('deployDefaultSubnet'), createArray(createObject('name', 'default', 'properties', createObject('addressPrefix', parameters('defaultSubnetPrefix'), 'networkSecurityGroup', if(equals(parameters('nsgID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}', parameters('nsgID')))), 'routeTable', if(equals(parameters('rtDefID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtDefID'))))))), createArray())]",
                    "bastionSubnet": "[if(parameters('deployBastionSubnet'), createArray(createObject('name', 'AzureBastionSubnet', 'properties', createObject('addressPrefix', parameters('bastionSubnetPrefix')))), createArray())]",
                    "firewallSubnet": "[if(parameters('deployFirewallSubnet'), createArray(createObject('name', 'AzureFirewallSubnet', 'properties', createObject('addressPrefix', parameters('firewallSubnetPrefix')))), createArray())]",
                    "gatewaySubnet": "[if(parameters('deployGatewaySubnet'), createArray(createObject('name', 'GatewaySubnet', 'properties', createObject('addressPrefix', parameters('GatewaySubnetPrefix'), 'routeTable', if(equals(parameters('rtGwID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtGwID'))))))), createArray())]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('vnetname')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "dhcpOptions": {
                          "dnsServers": "[if(parameters('firewallDNSproxy'), array(parameters('azFwIp')), createArray())]"
                        },
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('vnetAddressSpcae')]"
                          ]
                        },
                        "subnets": "[concat(variables('defaultSubnet'), variables('bastionSubnet'), variables('firewallSubnet'), variables('gatewaySubnet'))]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "vnetName": {
                      "type": "string",
                      "value": "[parameters('vnetname')]"
                    },
                    "vnetID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))]"
                    },
                    "vnetAddressSpace": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname')), '2023-06-01').addressSpace.addressPrefixes]"
                    },
                    "defaultSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployDefaultSubnet'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetname'), 'default'), 'Not deployed')]"
                    },
                    "bastionSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployBastionSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureBastionSubnet'), 'Not deployed')]"
                    },
                    "firewallSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployFirewallSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureFirewallSubnet'), 'Not deployed')]"
                    },
                    "gatewaySubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewaySubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'GatewaySubnet'), 'Not deployed')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable-VPNGW')]"
              ]
            },
            {
              "condition": "[not(empty(parameters('diagnosticWorkspaceId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "dcr-vminsights",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "diagnosticWorkspaceId": {
                    "value": "[parameters('diagnosticWorkspaceId')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "10065443907108781804"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "diagnosticWorkspaceId": {
                      "type": "string"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2023-03-11",
                      "name": "MSVMI-LabBuilder",
                      "location": "[parameters('location')]",
                      "properties": {
                        "description": "Data collection rule for VM Insights.",
                        "dataSources": {
                          "performanceCounters": [
                            {
                              "name": "VMInsightsPerfCounters",
                              "streams": [
                                "Microsoft-InsightsMetrics"
                              ],
                              "samplingFrequencyInSeconds": 60,
                              "counterSpecifiers": [
                                "\\VmInsights\\DetailedMetrics"
                              ]
                            }
                          ],
                          "extensions": [
                            {
                              "streams": [
                                "Microsoft-ServiceMap"
                              ],
                              "extensionName": "DependencyAgent",
                              "extensionSettings": {},
                              "name": "DependencyAgentDataSource"
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "name": "VMInsightsPerf-Logs-Dest",
                              "workspaceResourceId": "[parameters('diagnosticWorkspaceId')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-InsightsMetrics"
                            ],
                            "destinations": [
                              "VMInsightsPerf-Logs-Dest"
                            ]
                          },
                          {
                            "streams": [
                              "Microsoft-ServiceMap"
                            ],
                            "destinations": [
                              "VMInsightsPerf-Logs-Dest"
                            ]
                          }
                        ]
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Insights/dataCollectionRules'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "dcrID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', 'MSVMI-LabBuilder')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]"
              ]
            },
            {
              "condition": "[parameters('deployBastionInHub')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "bastion",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetID": "[if(parameters('deployBastionInHub'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.bastionSubnetID.value), createObject('value', ''))]",
                  "bastionName": {
                    "value": "[variables('bastionName')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "bastionSku": {
                    "value": "[parameters('bastionSku')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "8381117283990948462"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "bastionName": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "bastionSku": {
                      "type": "string",
                      "allowedValues": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ]
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/bastionHosts",
                      "apiVersion": "2024-01-01",
                      "name": "[parameters('bastionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "IpConf",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('subnetID')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                              }
                            }
                          }
                        ]
                      },
                      "sku": {
                        "name": "[parameters('bastionSku')]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/bastionHosts'), createObject())]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}-pip', parameters('bastionName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')]"
              ]
            },
            {
              "condition": "[parameters('deployFirewallInHub')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "hubFirewall",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "deployInVWan": {
                    "value": false
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "firewallName": {
                    "value": "[variables('firewallName')]"
                  },
                  "azfwsubnetid": "[if(parameters('deployFirewallInHub'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.firewallSubnetID.value), createObject('value', ''))]",
                  "azfwTier": {
                    "value": "[parameters('AzureFirewallTier')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "firewallDNSproxy": {
                    "value": "[parameters('firewallDNSproxy')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "5502494937384331313"
                    }
                  },
                  "parameters": {
                    "firewallName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "azfwTier": {
                      "type": "string",
                      "allowedValues": [
                        "Standard",
                        "Premium"
                      ]
                    },
                    "azfwsubnetid": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "vWanID": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "vWanAzFwPublicIPcount": {
                      "type": "int",
                      "defaultValue": 1
                    },
                    "deployInVWan": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "firewallDNSproxy": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "variables": {
                    "azfwSKUname": "[if(parameters('deployInVWan'), 'AZFW_Hub', 'AZFW_VNet')]",
                    "pipName": "[format('{0}-pip', parameters('firewallName'))]",
                    "firewallPolicyName": "[format('{0}-policy', parameters('firewallName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/azureFirewalls",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('firewallName')]",
                      "location": "[parameters('location')]",
                      "zones": [],
                      "properties": {
                        "sku": {
                          "name": "[variables('azfwSKUname')]",
                          "tier": "[parameters('azfwTier')]"
                        },
                        "firewallPolicy": {
                          "id": "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
                        },
                        "ipConfigurations": "[if(parameters('deployInVWan'), null(), createArray(createObject('properties', createObject('publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))), 'subnet', createObject('id', parameters('azfwsubnetid'))), 'name', 'ipconfig1')))]",
                        "virtualHub": "[if(parameters('deployInVWan'), createObject('id', parameters('vWanID')), null())]",
                        "hubIPAddresses": "[if(parameters('deployInVWan'), createObject('publicIPs', createObject('count', parameters('vWanAzFwPublicIPcount'))), null())]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/azureFirewalls'), createObject())]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",
                        "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/firewallPolicies",
                      "apiVersion": "2023-06-01",
                      "name": "[variables('firewallPolicyName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "tier": "[parameters('azfwTier')]"
                        },
                        "threatIntelMode": "Alert",
                        "dnsSettings": {
                          "enableProxy": "[parameters('firewallDNSproxy')]"
                        }
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/firewallPolicies'), createObject())]"
                    },
                    {
                      "condition": "[not(parameters('deployInVWan'))]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[variables('pipName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "azFwIP": {
                      "type": "string",
                      "value": "[if(parameters('deployInVWan'), reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2023-06-01').hubIPAddresses.privateIPAddress, reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2023-06-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "azFwIPvWan": {
                      "type": "array",
                      "value": "[if(parameters('deployInVWan'), reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2023-06-01').hubIPAddresses.publicIPs.addresses, createArray())]"
                    },
                    "azFwID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName'))]"
                    },
                    "azFwPolicyName": {
                      "type": "string",
                      "value": "[variables('firewallPolicyName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')]"
              ]
            },
            {
              "condition": "[and(parameters('deployFirewallrules'), parameters('deployFirewallInHub'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "firewallRules",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "azFwPolicyName": "[if(and(parameters('deployFirewallInHub'), parameters('deployFirewallrules')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall'), '2022-09-01').outputs.azFwPolicyName.value), createObject('value', ''))]",
                  "AddressSpace": {
                    "value": "[parameters('AddressSpace')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "7826575714244991362"
                    }
                  },
                  "parameters": {
                    "azFwPolicyName": {
                      "type": "string"
                    },
                    "ruleCollectiongroupName": {
                      "type": "string",
                      "defaultValue": "HubSpokeLabBuilderCollectionGroup"
                    },
                    "AddressSpace": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}/{1}', parameters('azFwPolicyName'), parameters('ruleCollectiongroupName'))]",
                      "properties": {
                        "priority": 400,
                        "ruleCollections": [
                          {
                            "name": "NetworkRules",
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "action": {
                              "type": "Allow"
                            },
                            "priority": 100,
                            "rules": [
                              {
                                "name": "AllowLocalTraffic",
                                "ruleType": "NetworkRule",
                                "sourceAddresses": [
                                  "[parameters('AddressSpace')]"
                                ],
                                "destinationAddresses": [
                                  "[parameters('AddressSpace')]"
                                ],
                                "ipProtocols": [
                                  "Any"
                                ],
                                "destinationPorts": [
                                  "*"
                                ]
                              }
                            ]
                          },
                          {
                            "name": "ApplicationRules",
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "action": {
                              "type": "Allow"
                            },
                            "priority": 200,
                            "rules": [
                              {
                                "name": "AllowHttpHttps",
                                "ruleType": "ApplicationRule",
                                "sourceAddresses": [
                                  "[parameters('AddressSpace')]"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [],
                                "terminateTLS": false,
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetUrls": [],
                                "targetFqdns": [
                                  "*"
                                ],
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall')]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]"
              ]
            },
            {
              "condition": "[parameters('deployGatewayInHub')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('gatewayName')]",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vpnGatewayName": {
                    "value": "[variables('gatewayName')]"
                  },
                  "vpnGatewaySubnetID": "[if(parameters('deployGatewayInHub'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.gatewaySubnetID.value), createObject('value', ''))]",
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "vpnGatewayBgpAsn": "[if(parameters('vpnGwEnebaleBgp'), createObject('value', parameters('vpnGwBgpAsn')), createObject('value', 65515))]",
                  "vpnGatewayEnableBgp": {
                    "value": "[parameters('vpnGwEnebaleBgp')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "13351419219210240579"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vpnGatewayName": {
                      "type": "string"
                    },
                    "vpnGatewaySubnetID": {
                      "type": "string"
                    },
                    "vpnGatewaySKU": {
                      "type": "string",
                      "defaultValue": "VpnGw1"
                    },
                    "vpnGatewayType": {
                      "type": "string",
                      "defaultValue": "Vpn"
                    },
                    "vpnGatewayVPNtype": {
                      "type": "string",
                      "defaultValue": "RouteBased"
                    },
                    "vpnGatewayGen": {
                      "type": "string",
                      "defaultValue": "Generation1"
                    },
                    "vpnGatewayEnableBgp": {
                      "type": "bool"
                    },
                    "vpnGatewayBgpAsn": {
                      "type": "int"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "pipName": "[format('{0}-pip', parameters('vpnGatewayName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworkGateways",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('vpnGatewayName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "gatewayType": "[parameters('vpnGatewayType')]",
                        "vpnType": "[parameters('vpnGatewayVPNtype')]",
                        "enableBgp": "[parameters('vpnGatewayEnableBgp')]",
                        "bgpSettings": {
                          "asn": "[parameters('vpnGatewayBgpAsn')]"
                        },
                        "sku": {
                          "name": "[parameters('vpnGatewaySKU')]",
                          "tier": "[parameters('vpnGatewaySKU')]"
                        },
                        "vpnGatewayGeneration": "[parameters('vpnGatewayGen')]",
                        "activeActive": false,
                        "ipConfigurations": [
                          {
                            "name": "ipConfig",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('vpnGatewaySubnetID')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                              }
                            }
                          }
                        ]
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworkGateways'), createObject())]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[variables('pipName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "vpnGwPublicIP": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('pipName')), '2023-06-01').ipAddress]"
                    },
                    "vpnGwID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName'))]"
                    },
                    "vpnGwBgpPeeringAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName')), '2023-06-01').bgpSettings.bgpPeeringAddress]"
                    },
                    "vpnGwName": {
                      "type": "string",
                      "value": "[parameters('vpnGatewayName')]"
                    },
                    "vpnGwAsn": {
                      "type": "int",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName')), '2023-06-01').bgpSettings.asn]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')]"
              ]
            },
            {
              "condition": "[and(and(parameters('deployFirewallInHub'), parameters('deployGatewayInHub')), parameters('deployUDRs'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "routeTable-VPNGW",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rtName": {
                    "value": "[variables('rtNameVPNgwSubnet')]"
                  },
                  "disableRouteProp": {
                    "value": false
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "12425030584790273944"
                    }
                  },
                  "parameters": {
                    "rtName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "disableRouteProp": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/routeTables",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('rtName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "disableBgpRoutePropagation": "[parameters('disableRouteProp')]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/routeTables'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "rtID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/routeTables', parameters('rtName'))]"
                    },
                    "rtName": {
                      "type": "string",
                      "value": "[parameters('rtName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]"
              ]
            },
            {
              "copy": {
                "name": "routeVPNgw",
                "count": "[length(parameters('AllSpokeAddressSpaces'))]"
              },
              "condition": "[and(and(parameters('deployFirewallInHub'), parameters('deployGatewayInHub')), parameters('deployUDRs'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('Route-vpngw{0}', copyIndex())]",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "routeAddressPrefix": {
                    "value": "[parameters('AllSpokeAddressSpaces')[copyIndex()]]"
                  },
                  "routeName": "[if(and(and(parameters('deployFirewallInHub'), parameters('deployGatewayInHub')), parameters('deployUDRs')), createObject('value', format('{0}/LocalRoute{1}', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable-VPNGW'), '2022-09-01').outputs.rtName.value, copyIndex())), createObject('value', 'dummy3'))]",
                  "routeNextHopIpAddress": "[if(and(parameters('deployFirewallInHub'), parameters('deployUDRs')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall'), '2022-09-01').outputs.azFwIP.value), createObject('value', '1.2.3.4'))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "13153494437005602333"
                    }
                  },
                  "parameters": {
                    "routeName": {
                      "type": "string"
                    },
                    "routeNextHopType": {
                      "type": "string",
                      "defaultValue": "VirtualAppliance"
                    },
                    "routeAddressPrefix": {
                      "type": "string"
                    },
                    "routeNextHopIpAddress": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/routeTables/routes",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('routeName')]",
                      "properties": {
                        "nextHopType": "[parameters('routeNextHopType')]",
                        "addressPrefix": "[parameters('routeAddressPrefix')]",
                        "nextHopIpAddress": "[parameters('routeNextHopIpAddress')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall')]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable-VPNGW')]"
              ]
            }
          ],
          "outputs": {
            "hubVnetID": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.vnetID.value]"
            },
            "azFwIp": {
              "type": "string",
              "value": "[if(parameters('deployFirewallInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall'), '2022-09-01').outputs.azFwIP.value, '1.2.3.4')]"
            },
            "HubResourceGroupName": {
              "type": "string",
              "value": "[parameters('hubRgName')]"
            },
            "hubVnetName": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.vnetName.value]"
            },
            "hubVnetAddressSpace": {
              "type": "array",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet'), '2022-09-01').outputs.vnetAddressSpace.value]"
            },
            "hubGatewayPublicIP": {
              "type": "string",
              "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwPublicIP.value, 'none')]"
            },
            "hubGatewayID": {
              "type": "string",
              "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwID.value, 'none')]"
            },
            "HubGwBgpPeeringAddress": {
              "type": "string",
              "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwBgpPeeringAddress.value, 'none')]"
            },
            "dcrvminsightsID": {
              "type": "string",
              "value": "[if(not(empty(parameters('diagnosticWorkspaceId'))), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'dcr-vminsights'), '2022-09-01').outputs.dcrID.value, '')]"
            }
          }
        }
      }
    },
    {
      "condition": "[and(parameters('deployHUB'), variables('isVwanHub'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))]",
      "subscriptionId": "[parameters('hubSubscriptionID')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "deployFirewallInHub": {
            "value": "[and(parameters('deployFirewallInHub'), variables('isVwanHub'))]"
          },
          "AddressSpace": {
            "value": "[variables('AllAddressSpaces')[0]]"
          },
          "AzureFirewallTier": {
            "value": "[parameters('AzureFirewallTier')]"
          },
          "firewallDNSproxy": {
            "value": "[and(parameters('firewallDNSproxy'), variables('isVwanHub'))]"
          },
          "deployFirewallrules": {
            "value": "[and(parameters('deployFirewallrules'), variables('isVwanHub'))]"
          },
          "hubRgName": {
            "value": "[parameters('hubRgName')]"
          },
          "deployGatewayInHub": {
            "value": "[and(parameters('deployGatewayInHub'), variables('isVwanHub'))]"
          },
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          },
          "diagnosticWorkspaceId": {
            "value": "[parameters('diagnosticWorkspaceId')]"
          },
          "internetTrafficRoutingPolicy": {
            "value": "[parameters('internetTrafficRoutingPolicy')]"
          },
          "privateTrafficRoutingPolicy": {
            "value": "[parameters('privateTrafficRoutingPolicy')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "12608598104488158174"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "AddressSpace": {
              "type": "string"
            },
            "deployFirewallInHub": {
              "type": "bool"
            },
            "AzureFirewallTier": {
              "type": "string"
            },
            "hubRgName": {
              "type": "string"
            },
            "deployFirewallrules": {
              "type": "bool"
            },
            "deployGatewayInHub": {
              "type": "bool"
            },
            "tagsByResource": {
              "type": "object",
              "defaultValue": {}
            },
            "firewallDNSproxy": {
              "type": "bool"
            },
            "diagnosticWorkspaceId": {
              "type": "string"
            },
            "internetTrafficRoutingPolicy": {
              "type": "bool"
            },
            "privateTrafficRoutingPolicy": {
              "type": "bool"
            }
          },
          "variables": {
            "vWanName": "vWAN",
            "firewallName": "Firewall-Hub",
            "gatewayName": "Gateway-Hub"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2023-07-01",
              "name": "[parameters('hubRgName')]",
              "location": "[parameters('location')]",
              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/subscriptions/resourceGroups'), createObject())]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('vWanName')]",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AddressPrefix": {
                    "value": "[parameters('AddressSpace')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vWanName": {
                    "value": "[variables('vWanName')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "8449905872365493913"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vWanName": {
                      "type": "string"
                    },
                    "vWanType": {
                      "type": "string",
                      "defaultValue": "Standard",
                      "allowedValues": [
                        "Standard",
                        "Basic"
                      ]
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "AddressPrefix": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualWans",
                      "apiVersion": "2022-11-01",
                      "name": "[parameters('vWanName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "type": "[parameters('vWanType')]",
                        "disableVpnEncryption": false,
                        "allowBranchToBranchTraffic": true
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualWans'), createObject())]"
                    },
                    {
                      "type": "Microsoft.Network/virtualHubs",
                      "apiVersion": "2022-11-01",
                      "name": "[format('HUB-{0}', parameters('location'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "allowBranchToBranchTraffic": true,
                        "hubRoutingPreference": "ExpressRoute",
                        "virtualRouterAsn": 65515,
                        "virtualRouterAutoScaleConfiguration": {
                          "minCapacity": 2
                        },
                        "addressPrefix": "[parameters('AddressPrefix')]",
                        "virtualWan": {
                          "id": "[resourceId('Microsoft.Network/virtualWans', parameters('vWanName'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualWans', parameters('vWanName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "vWanID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualWans', parameters('vWanName'))]"
                    },
                    "vWanHubID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualHubs', format('HUB-{0}', parameters('location')))]"
                    },
                    "vWanHubAddressSpace": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualHubs', format('HUB-{0}', parameters('location'))), '2022-11-01').addressPrefix]"
                    },
                    "vWanHubName": {
                      "type": "string",
                      "value": "[format('HUB-{0}', parameters('location'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]"
              ]
            },
            {
              "condition": "[parameters('deployFirewallInHub')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('firewallName')]",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "deployInVWan": {
                    "value": true
                  },
                  "azfwTier": {
                    "value": "[parameters('AzureFirewallTier')]"
                  },
                  "firewallName": {
                    "value": "[variables('firewallName')]"
                  },
                  "vWanID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vWanName')), '2022-09-01').outputs.vWanHubID.value]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "firewallDNSproxy": {
                    "value": "[parameters('firewallDNSproxy')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "5502494937384331313"
                    }
                  },
                  "parameters": {
                    "firewallName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "azfwTier": {
                      "type": "string",
                      "allowedValues": [
                        "Standard",
                        "Premium"
                      ]
                    },
                    "azfwsubnetid": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "vWanID": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "vWanAzFwPublicIPcount": {
                      "type": "int",
                      "defaultValue": 1
                    },
                    "deployInVWan": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "firewallDNSproxy": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "variables": {
                    "azfwSKUname": "[if(parameters('deployInVWan'), 'AZFW_Hub', 'AZFW_VNet')]",
                    "pipName": "[format('{0}-pip', parameters('firewallName'))]",
                    "firewallPolicyName": "[format('{0}-policy', parameters('firewallName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/azureFirewalls",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('firewallName')]",
                      "location": "[parameters('location')]",
                      "zones": [],
                      "properties": {
                        "sku": {
                          "name": "[variables('azfwSKUname')]",
                          "tier": "[parameters('azfwTier')]"
                        },
                        "firewallPolicy": {
                          "id": "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
                        },
                        "ipConfigurations": "[if(parameters('deployInVWan'), null(), createArray(createObject('properties', createObject('publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))), 'subnet', createObject('id', parameters('azfwsubnetid'))), 'name', 'ipconfig1')))]",
                        "virtualHub": "[if(parameters('deployInVWan'), createObject('id', parameters('vWanID')), null())]",
                        "hubIPAddresses": "[if(parameters('deployInVWan'), createObject('publicIPs', createObject('count', parameters('vWanAzFwPublicIPcount'))), null())]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/azureFirewalls'), createObject())]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",
                        "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/firewallPolicies",
                      "apiVersion": "2023-06-01",
                      "name": "[variables('firewallPolicyName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "tier": "[parameters('azfwTier')]"
                        },
                        "threatIntelMode": "Alert",
                        "dnsSettings": {
                          "enableProxy": "[parameters('firewallDNSproxy')]"
                        }
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/firewallPolicies'), createObject())]"
                    },
                    {
                      "condition": "[not(parameters('deployInVWan'))]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[variables('pipName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "azFwIP": {
                      "type": "string",
                      "value": "[if(parameters('deployInVWan'), reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2023-06-01').hubIPAddresses.privateIPAddress, reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2023-06-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "azFwIPvWan": {
                      "type": "array",
                      "value": "[if(parameters('deployInVWan'), reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName')), '2023-06-01').hubIPAddresses.publicIPs.addresses, createArray())]"
                    },
                    "azFwID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName'))]"
                    },
                    "azFwPolicyName": {
                      "type": "string",
                      "value": "[variables('firewallPolicyName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vWanName'))]"
              ]
            },
            {
              "condition": "[and(parameters('deployFirewallrules'), parameters('deployFirewallInHub'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "firewallRules",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "azFwPolicyName": "[if(and(parameters('deployFirewallInHub'), parameters('deployFirewallrules')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('firewallName')), '2022-09-01').outputs.azFwPolicyName.value), createObject('value', 'none'))]",
                  "AddressSpace": {
                    "value": "[parameters('AddressSpace')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "7826575714244991362"
                    }
                  },
                  "parameters": {
                    "azFwPolicyName": {
                      "type": "string"
                    },
                    "ruleCollectiongroupName": {
                      "type": "string",
                      "defaultValue": "HubSpokeLabBuilderCollectionGroup"
                    },
                    "AddressSpace": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}/{1}', parameters('azFwPolicyName'), parameters('ruleCollectiongroupName'))]",
                      "properties": {
                        "priority": 400,
                        "ruleCollections": [
                          {
                            "name": "NetworkRules",
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "action": {
                              "type": "Allow"
                            },
                            "priority": 100,
                            "rules": [
                              {
                                "name": "AllowLocalTraffic",
                                "ruleType": "NetworkRule",
                                "sourceAddresses": [
                                  "[parameters('AddressSpace')]"
                                ],
                                "destinationAddresses": [
                                  "[parameters('AddressSpace')]"
                                ],
                                "ipProtocols": [
                                  "Any"
                                ],
                                "destinationPorts": [
                                  "*"
                                ]
                              }
                            ]
                          },
                          {
                            "name": "ApplicationRules",
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "action": {
                              "type": "Allow"
                            },
                            "priority": 200,
                            "rules": [
                              {
                                "name": "AllowHttpHttps",
                                "ruleType": "ApplicationRule",
                                "sourceAddresses": [
                                  "[parameters('AddressSpace')]"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [],
                                "terminateTLS": false,
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetUrls": [],
                                "targetFqdns": [
                                  "*"
                                ],
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('firewallName'))]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "routeTable",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vwanHubName": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vWanName')), '2022-09-01').outputs.vWanHubName.value]"
                  },
                  "AzFirewallID": "[if(parameters('deployFirewallInHub'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('firewallName')), '2022-09-01').outputs.azFwID.value), createObject('value', 'none'))]",
                  "deployFirewallInHub": {
                    "value": "[parameters('deployFirewallInHub')]"
                  },
                  "internetTrafficRoutingPolicy": {
                    "value": "[parameters('internetTrafficRoutingPolicy')]"
                  },
                  "privateTrafficRoutingPolicy": {
                    "value": "[parameters('privateTrafficRoutingPolicy')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "10002241596378255623"
                    }
                  },
                  "parameters": {
                    "vwanHubName": {
                      "type": "string"
                    },
                    "AzFirewallID": {
                      "type": "string"
                    },
                    "deployFirewallInHub": {
                      "type": "bool"
                    },
                    "internetTrafficRoutingPolicy": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "privateTrafficRoutingPolicy": {
                      "type": "bool",
                      "defaultValue": true
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('deployFirewallInHub'))]",
                      "type": "Microsoft.Network/virtualHubs/hubRouteTables",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}/defaultRouteTable', parameters('vwanHubName'))]",
                      "properties": {
                        "routes": [],
                        "labels": [
                          "default"
                        ]
                      }
                    },
                    {
                      "condition": "[and(and(parameters('deployFirewallInHub'), not(parameters('internetTrafficRoutingPolicy'))), not(parameters('privateTrafficRoutingPolicy')))]",
                      "type": "Microsoft.Network/virtualHubs/hubRouteTables",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}/defaultRouteTable', parameters('vwanHubName'))]",
                      "properties": {
                        "routes": [
                          {
                            "name": "all_traffic",
                            "destinationType": "CIDR",
                            "destinations": [
                              "10.0.0.0/8",
                              "172.16.0.0/12",
                              "192.168.0.0/16",
                              "0.0.0.0/0"
                            ],
                            "nextHopType": "ResourceId",
                            "nextHop": "[parameters('AzFirewallID')]"
                          }
                        ],
                        "labels": [
                          "default"
                        ]
                      }
                    },
                    {
                      "condition": "[and(parameters('deployFirewallInHub'), or(parameters('internetTrafficRoutingPolicy'), parameters('privateTrafficRoutingPolicy')))]",
                      "type": "Microsoft.Network/virtualHubs/routingIntent",
                      "apiVersion": "2023-04-01",
                      "name": "[format('{0}/{1}-RoutingIntent', parameters('vwanHubName'), parameters('vwanHubName'))]",
                      "properties": {
                        "routingPolicies": "[if(and(equals(parameters('internetTrafficRoutingPolicy'), true()), equals(parameters('privateTrafficRoutingPolicy'), true())), createArray(createObject('name', 'PublicTraffic', 'destinations', createArray('Internet'), 'nextHop', parameters('AzFirewallID')), createObject('name', 'PrivateTraffic', 'destinations', createArray('PrivateTraffic'), 'nextHop', parameters('AzFirewallID'))), if(and(equals(parameters('internetTrafficRoutingPolicy'), true()), equals(parameters('privateTrafficRoutingPolicy'), false())), createArray(createObject('name', 'PublicTraffic', 'destinations', createArray('Internet'), 'nextHop', parameters('AzFirewallID'))), createArray(createObject('name', 'PrivateTraffic', 'destinations', createArray('PrivateTraffic'), 'nextHop', parameters('AzFirewallID')))))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('firewallName'))]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vWanName'))]"
              ]
            },
            {
              "condition": "[parameters('deployGatewayInHub')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('gatewayName')]",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vpnGwName": {
                    "value": "[variables('gatewayName')]"
                  },
                  "vWanHubID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vWanName')), '2022-09-01').outputs.vWanHubID.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "1771621361747971677"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vWanHubID": {
                      "type": "string"
                    },
                    "vpnGwName": {
                      "type": "string"
                    },
                    "vpnGwScaleUnits": {
                      "type": "int",
                      "defaultValue": 1,
                      "minValue": 1,
                      "maxValue": 25
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/vpnGateways",
                      "apiVersion": "2022-11-01",
                      "name": "[parameters('vpnGwName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "bgpSettings": {
                          "asn": 65515
                        },
                        "vpnGatewayScaleUnit": "[parameters('vpnGwScaleUnits')]",
                        "virtualHub": {
                          "id": "[parameters('vWanHubID')]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "vpnGwID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/vpnGateways', parameters('vpnGwName'))]"
                    },
                    "vpnGwPip": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Network/vpnGateways', parameters('vpnGwName')), '2022-11-01').ipConfigurations]"
                    },
                    "vpnGwBgpIp": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Network/vpnGateways', parameters('vpnGwName')), '2022-11-01').bgpSettings.bgpPeeringAddresses]"
                    },
                    "vpnGwBgpAsn": {
                      "type": "int",
                      "value": "[reference(resourceId('Microsoft.Network/vpnGateways', parameters('vpnGwName')), '2022-11-01').bgpSettings.asn]"
                    },
                    "vpnGwName": {
                      "type": "string",
                      "value": "[parameters('vpnGwName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vWanName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('diagnosticWorkspaceId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "dcr-vminsights",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "diagnosticWorkspaceId": {
                    "value": "[parameters('diagnosticWorkspaceId')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "10065443907108781804"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "diagnosticWorkspaceId": {
                      "type": "string"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/dataCollectionRules",
                      "apiVersion": "2023-03-11",
                      "name": "MSVMI-LabBuilder",
                      "location": "[parameters('location')]",
                      "properties": {
                        "description": "Data collection rule for VM Insights.",
                        "dataSources": {
                          "performanceCounters": [
                            {
                              "name": "VMInsightsPerfCounters",
                              "streams": [
                                "Microsoft-InsightsMetrics"
                              ],
                              "samplingFrequencyInSeconds": 60,
                              "counterSpecifiers": [
                                "\\VmInsights\\DetailedMetrics"
                              ]
                            }
                          ],
                          "extensions": [
                            {
                              "streams": [
                                "Microsoft-ServiceMap"
                              ],
                              "extensionName": "DependencyAgent",
                              "extensionSettings": {},
                              "name": "DependencyAgentDataSource"
                            }
                          ]
                        },
                        "destinations": {
                          "logAnalytics": [
                            {
                              "name": "VMInsightsPerf-Logs-Dest",
                              "workspaceResourceId": "[parameters('diagnosticWorkspaceId')]"
                            }
                          ]
                        },
                        "dataFlows": [
                          {
                            "streams": [
                              "Microsoft-InsightsMetrics"
                            ],
                            "destinations": [
                              "VMInsightsPerf-Logs-Dest"
                            ]
                          },
                          {
                            "streams": [
                              "Microsoft-ServiceMap"
                            ],
                            "destinations": [
                              "VMInsightsPerf-Logs-Dest"
                            ]
                          }
                        ]
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Insights/dataCollectionRules'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "dcrID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Insights/dataCollectionRules', 'MSVMI-LabBuilder')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]"
              ]
            }
          ],
          "outputs": {
            "vwanHubName": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vWanName')), '2022-09-01').outputs.vWanHubName.value]"
            },
            "vWanHubID": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vWanName')), '2022-09-01').outputs.vWanHubID.value]"
            },
            "vWanID": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vWanName')), '2022-09-01').outputs.vWanID.value]"
            },
            "vWanHubAddressSpace": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('vWanName')), '2022-09-01').outputs.vWanHubAddressSpace.value]"
            },
            "HubResourceGroupName": {
              "type": "string",
              "value": "[parameters('hubRgName')]"
            },
            "vWanVpnGwID": {
              "type": "string",
              "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwID.value, 'none')]"
            },
            "vWanVpnGwPip": {
              "type": "array",
              "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwPip.value, createArray())]"
            },
            "vWanFwPublicIP": {
              "type": "array",
              "value": "[if(parameters('deployFirewallInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('firewallName')), '2022-09-01').outputs.azFwIPvWan.value, createArray())]"
            },
            "vWanFwIP": {
              "type": "string",
              "value": "[if(parameters('deployFirewallInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('firewallName')), '2022-09-01').outputs.azFwIP.value, 'none')]"
            },
            "vpnGwBgpIp": {
              "type": "array",
              "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwBgpIp.value, createArray())]"
            },
            "vpnGwBgpAsn": {
              "type": "int",
              "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwBgpAsn.value, 0)]"
            },
            "vpnGwName": {
              "type": "string",
              "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwName.value, 'none')]"
            },
            "dcrvminsightsID": {
              "type": "string",
              "value": "[if(not(empty(parameters('diagnosticWorkspaceId'))), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'dcr-vminsights'), '2022-09-01').outputs.dcrID.value, 'none')]"
            }
          }
        }
      }
    },
    {
      "copy": {
        "name": "spokeVnets",
        "count": "[length(range(1, parameters('amountOfSpokes')))]"
      },
      "condition": "[parameters('deploySpokes')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[copyIndex()], parameters('location'))]",
      "subscriptionId": "[parameters('spokeSubscriptionID')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "counter": {
            "value": "[range(1, parameters('amountOfSpokes'))[copyIndex()]]"
          },
          "AddressSpace": {
            "value": "[variables('AllAddressSpaces')[range(1, parameters('amountOfSpokes'))[copyIndex()]]]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "deployVMsInSpokes": {
            "value": "[parameters('deployVMsInSpokes')]"
          },
          "deployFirewallInHub": {
            "value": "[and(parameters('deployFirewallInHub'), variables('isVnetHub'))]"
          },
          "AzureFirewallpip": "[if(and(parameters('deployHUB'), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.azFwIp.value), if(and(parameters('deployHUB'), variables('isVwanHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vWanFwIP.value), createObject('value', 'none')))]",
          "HubDeployed": {
            "value": "[and(parameters('deployHUB'), variables('isVnetHub'))]"
          },
          "spokeRgNamePrefix": {
            "value": "[parameters('spokeRgNamePrefix')]"
          },
          "vmSize": {
            "value": "[parameters('vmSizeSpoke')]"
          },
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          },
          "osType": {
            "value": "[parameters('osTypeSpoke')]"
          },
          "deployUDRs": {
            "value": "[parameters('deployUDRs')]"
          },
          "diagnosticWorkspaceId": {
            "value": "[parameters('diagnosticWorkspaceId')]"
          },
          "firewallDNSproxy": {
            "value": "[and(parameters('firewallDNSproxy'), parameters('deployFirewallInHub'))]"
          },
          "dcrID": "[if(and(parameters('deployHUB'), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.dcrvminsightsID.value), if(and(parameters('deployHUB'), variables('isVwanHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.dcrvminsightsID.value), createObject('value', '')))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "100982012962699437"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "AddressSpace": {
              "type": "string"
            },
            "counter": {
              "type": "int"
            },
            "adminUsername": {
              "type": "string"
            },
            "adminPassword": {
              "type": "securestring"
            },
            "deployVMsInSpokes": {
              "type": "bool"
            },
            "deployFirewallInHub": {
              "type": "bool"
            },
            "deployUDRs": {
              "type": "bool"
            },
            "AzureFirewallpip": {
              "type": "string"
            },
            "HubDeployed": {
              "type": "bool"
            },
            "spokeRgNamePrefix": {
              "type": "string"
            },
            "vmSize": {
              "type": "string"
            },
            "tagsByResource": {
              "type": "object"
            },
            "osType": {
              "type": "string"
            },
            "firewallDNSproxy": {
              "type": "bool"
            },
            "diagnosticWorkspaceId": {
              "type": "string"
            },
            "dcrID": {
              "type": "string"
            }
          },
          "variables": {
            "vnetName": "[format('VNET-Spoke{0}', parameters('counter'))]",
            "vmName": "[format('VM-Spoke{0}', parameters('counter'))]",
            "rtName": "[format('RT-Spoke{0}', parameters('counter'))]",
            "nsgName": "[format('NSG-Spoke{0}', parameters('counter'))]",
            "defaultSubnetPrefix": "[cidrSubnet(parameters('AddressSpace'), 26, 0)]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "location": "[parameters('location')]",
              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/subscriptions/resourceGroups'), createObject())]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('vnetName')]",
              "resourceGroup": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetAddressSpcae": {
                    "value": "[parameters('AddressSpace')]"
                  },
                  "nsgID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('nsgName')), '2022-09-01').outputs.nsgID.value]"
                  },
                  "rtDefID": "[if(and(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), parameters('deployUDRs')), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('rtName')), '2022-09-01').outputs.rtID.value), createObject('value', 'none'))]",
                  "vnetname": {
                    "value": "[variables('vnetName')]"
                  },
                  "deployDefaultSubnet": {
                    "value": true
                  },
                  "defaultSubnetPrefix": {
                    "value": "[variables('defaultSubnetPrefix')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "firewallDNSproxy": {
                    "value": "[parameters('firewallDNSproxy')]"
                  },
                  "azFwIp": {
                    "value": "[parameters('AzureFirewallpip')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "7931326192284124820"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vnetname": {
                      "type": "string"
                    },
                    "vnetAddressSpcae": {
                      "type": "string"
                    },
                    "defaultSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "bastionSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "firewallSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "GatewaySubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "nsgID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "rtDefID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "rtGwID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "deployDefaultSubnet": {
                      "type": "bool"
                    },
                    "deployBastionSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployFirewallSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployGatewaySubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "firewallDNSproxy": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "azFwIp": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "variables": {
                    "defaultSubnet": "[if(parameters('deployDefaultSubnet'), createArray(createObject('name', 'default', 'properties', createObject('addressPrefix', parameters('defaultSubnetPrefix'), 'networkSecurityGroup', if(equals(parameters('nsgID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}', parameters('nsgID')))), 'routeTable', if(equals(parameters('rtDefID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtDefID'))))))), createArray())]",
                    "bastionSubnet": "[if(parameters('deployBastionSubnet'), createArray(createObject('name', 'AzureBastionSubnet', 'properties', createObject('addressPrefix', parameters('bastionSubnetPrefix')))), createArray())]",
                    "firewallSubnet": "[if(parameters('deployFirewallSubnet'), createArray(createObject('name', 'AzureFirewallSubnet', 'properties', createObject('addressPrefix', parameters('firewallSubnetPrefix')))), createArray())]",
                    "gatewaySubnet": "[if(parameters('deployGatewaySubnet'), createArray(createObject('name', 'GatewaySubnet', 'properties', createObject('addressPrefix', parameters('GatewaySubnetPrefix'), 'routeTable', if(equals(parameters('rtGwID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtGwID'))))))), createArray())]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('vnetname')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "dhcpOptions": {
                          "dnsServers": "[if(parameters('firewallDNSproxy'), array(parameters('azFwIp')), createArray())]"
                        },
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('vnetAddressSpcae')]"
                          ]
                        },
                        "subnets": "[concat(variables('defaultSubnet'), variables('bastionSubnet'), variables('firewallSubnet'), variables('gatewaySubnet'))]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "vnetName": {
                      "type": "string",
                      "value": "[parameters('vnetname')]"
                    },
                    "vnetID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))]"
                    },
                    "vnetAddressSpace": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname')), '2023-06-01').addressSpace.addressPrefixes]"
                    },
                    "defaultSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployDefaultSubnet'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetname'), 'default'), 'Not deployed')]"
                    },
                    "bastionSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployBastionSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureBastionSubnet'), 'Not deployed')]"
                    },
                    "firewallSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployFirewallSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureFirewallSubnet'), 'Not deployed')]"
                    },
                    "gatewaySubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewaySubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'GatewaySubnet'), 'Not deployed')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('nsgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('rtName'))]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter')))]"
              ]
            },
            {
              "condition": "[parameters('deployVMsInSpokes')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('vmName')]",
              "resourceGroup": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "adminPassword": {
                    "value": "[parameters('adminPassword')]"
                  },
                  "adminUsername": {
                    "value": "[parameters('adminUsername')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('vnetName')), '2022-09-01').outputs.defaultSubnetID.value]"
                  },
                  "vmName": {
                    "value": "[variables('vmName')]"
                  },
                  "vmSize": {
                    "value": "[parameters('vmSize')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "osType": {
                    "value": "[parameters('osType')]"
                  },
                  "diagnosticWorkspaceId": {
                    "value": "[parameters('diagnosticWorkspaceId')]"
                  },
                  "dcrID": {
                    "value": "[parameters('dcrID')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "12131024143933360047"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vmName": {
                      "type": "string"
                    },
                    "adminUsername": {
                      "type": "string"
                    },
                    "adminPassword": {
                      "type": "securestring"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "vmSize": {
                      "type": "string"
                    },
                    "storageType": {
                      "type": "string",
                      "defaultValue": "StandardSSD_LRS"
                    },
                    "osType": {
                      "type": "string",
                      "defaultValue": "Windows"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "dcrID": {
                      "type": "string"
                    },
                    "diagnosticWorkspaceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "EnableICMPv4": "netsh advfirewall firewall add rule name=\"ICMP Allow incoming V4 echo request\" protocol=\"icmpv4:8,any\" dir=in action=allow",
                    "AmaExtensionName": "[if(equals(parameters('osType'), 'Windows'), 'AzureMonitorWindowsAgent', 'AzureMonitorLinuxAgent')]",
                    "AmaExtensionType": "[if(equals(parameters('osType'), 'Windows'), 'AzureMonitorWindowsAgent', 'AzureMonitorLinuxAgent')]",
                    "AmaExtensionVersion": "1.0",
                    "DaExtensionName": "DependencyAgentWindows",
                    "DaExtensionType": "DependencyAgentWindows",
                    "DaExtensionVersion": "9.5",
                    "Windows": {
                      "publisher": "MicrosoftWindowsServer",
                      "offer": "WindowsServer",
                      "sku": "2022-datacenter-g2",
                      "version": "latest"
                    },
                    "Linux": {
                      "publisher": "Canonical",
                      "offer": "0001-com-ubuntu-server-jammy",
                      "sku": "22_04-lts-gen2",
                      "version": "latest"
                    },
                    "imagereference": "[if(equals(parameters('osType'), 'Windows'), variables('Windows'), if(equals(parameters('osType'), 'Linux'), variables('Linux'), createObject()))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2023-09-01",
                      "name": "[parameters('vmName')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "osProfile": {
                          "computerName": "[parameters('vmName')]",
                          "adminUsername": "[parameters('adminUsername')]",
                          "adminPassword": "[parameters('adminPassword')]"
                        },
                        "storageProfile": {
                          "imageReference": "[variables('imagereference')]",
                          "osDisk": {
                            "createOption": "FromImage",
                            "name": "[format('{0}-osDisk', parameters('vmName'))]",
                            "managedDisk": {
                              "storageAccountType": "[parameters('storageType')]"
                            },
                            "osType": "[parameters('osType')]",
                            "deleteOption": "Delete"
                          }
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]",
                              "properties": {
                                "deleteOption": "Delete"
                              }
                            }
                          ]
                        },
                        "hardwareProfile": {
                          "vmSize": "[parameters('vmSize')]"
                        },
                        "diagnosticsProfile": {
                          "bootDiagnostics": {
                            "enabled": true
                          }
                        }
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), createObject())]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('diagnosticWorkspaceId')))]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2023-09-01",
                      "name": "[format('{0}/{1}', parameters('vmName'), variables('AmaExtensionName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publisher": "Microsoft.Azure.Monitor",
                        "type": "[variables('AmaExtensionType')]",
                        "typeHandlerVersion": "[variables('AmaExtensionVersion')]",
                        "autoUpgradeMinorVersion": true
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    },
                    {
                      "condition": "[and(not(empty(parameters('diagnosticWorkspaceId'))), equals(parameters('osType'), 'Windows'))]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2023-09-01",
                      "name": "[format('{0}/{1}', parameters('vmName'), variables('DaExtensionName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                        "type": "[variables('DaExtensionType')]",
                        "typeHandlerVersion": "[variables('DaExtensionVersion')]",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "enableAMA": true
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('diagnosticWorkspaceId')))]",
                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                      "apiVersion": "2023-03-11",
                      "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
                      "name": "VMInsights-Dcr-Association",
                      "properties": {
                        "dataCollectionRuleId": "[parameters('dcrID')]",
                        "description": "Association of data collection rule for VM Insights."
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}-nic', parameters('vmName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "primary": true,
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('subnetID')]"
                              }
                            }
                          }
                        ]
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), createObject())]"
                    },
                    {
                      "condition": "[equals(parameters('osType'), 'Windows')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-runCommand', parameters('vmName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "runCommand": {
                            "value": "[variables('EnableICMPv4')]"
                          },
                          "vmName": {
                            "value": "[parameters('vmName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.29.47.4906",
                              "templateHash": "11656903658558868059"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "runName": {
                              "type": "string",
                              "defaultValue": "RunCommand"
                            },
                            "runCommand": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/runCommands",
                              "apiVersion": "2023-09-01",
                              "name": "[format('{0}/{1}', parameters('vmName'), parameters('runName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "source": {
                                  "script": "[parameters('runCommand')]"
                                },
                                "timeoutInSeconds": 60
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "vmResourceID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('vnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('nsgName')]",
              "resourceGroup": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "nsgName": {
                    "value": "[variables('nsgName')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "15498173127582355570"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "nsgName": {
                      "type": "string"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('nsgName')]",
                      "location": "[parameters('location')]",
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "nsgID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter')))]"
              ]
            },
            {
              "condition": "[and(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), parameters('deployUDRs'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('rtName')]",
              "resourceGroup": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rtName": {
                    "value": "[variables('rtName')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "12425030584790273944"
                    }
                  },
                  "parameters": {
                    "rtName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "disableRouteProp": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/routeTables",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('rtName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "disableBgpRoutePropagation": "[parameters('disableRouteProp')]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/routeTables'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "rtID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/routeTables', parameters('rtName'))]"
                    },
                    "rtName": {
                      "type": "string",
                      "value": "[parameters('rtName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter')))]"
              ]
            },
            {
              "condition": "[and(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), parameters('deployUDRs'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "RouteToInternet",
              "resourceGroup": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "routeAddressPrefix": {
                    "value": "0.0.0.0/0"
                  },
                  "routeName": "[if(and(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), parameters('deployUDRs')), createObject('value', format('{0}/toInternet', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('rtName')), '2022-09-01').outputs.rtName.value)), createObject('value', 'dummy1'))]",
                  "routeNextHopIpAddress": "[if(and(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), parameters('deployUDRs')), createObject('value', parameters('AzureFirewallpip')), createObject('value', '1.2.3.4'))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "13153494437005602333"
                    }
                  },
                  "parameters": {
                    "routeName": {
                      "type": "string"
                    },
                    "routeNextHopType": {
                      "type": "string",
                      "defaultValue": "VirtualAppliance"
                    },
                    "routeAddressPrefix": {
                      "type": "string"
                    },
                    "routeNextHopIpAddress": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/routeTables/routes",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('routeName')]",
                      "properties": {
                        "nextHopType": "[parameters('routeNextHopType')]",
                        "addressPrefix": "[parameters('routeAddressPrefix')]",
                        "nextHopIpAddress": "[parameters('routeNextHopIpAddress')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('rtName'))]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter')))]"
              ]
            }
          ],
          "outputs": {
            "spokeVnetID": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('vnetName')), '2022-09-01').outputs.vnetID.value]"
            },
            "spokeVnetAddressSpace": {
              "type": "string",
              "value": "[parameters('AddressSpace')]"
            },
            "spokeResourceGroupName": {
              "type": "string",
              "value": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]"
            },
            "spokeVnetName": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('vnetName')), '2022-09-01').outputs.vnetName.value]"
            },
            "spokeVmResourceID": {
              "type": "string",
              "value": "[if(parameters('deployVMsInSpokes'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('vmName')), '2022-09-01').outputs.vmResourceID.value, 'none')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location')))]",
        "[subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location')))]"
      ]
    },
    {
      "copy": {
        "name": "vnetPeerings",
        "count": "[length(range(0, parameters('amountOfSpokes')))]"
      },
      "condition": "[and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), not(parameters('deployVnetPeeringAVNM')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-VnetPeering{1}-{2}', parameters('hubRgName'), add(range(0, parameters('amountOfSpokes'))[copyIndex()], 1), parameters('location'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "HubResourceGroupName": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.HubResourceGroupName.value), createObject('value', 'No VNET peering'))]",
          "SpokeResourceGroupName": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('spokeSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location'))), '2022-09-01').outputs.spokeResourceGroupName.value), createObject('value', 'No peering'))]",
          "HubVnetName": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.hubVnetName.value), createObject('value', 'No VNET peering'))]",
          "SpokeVnetID": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('spokeSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location'))), '2022-09-01').outputs.spokeVnetID.value), createObject('value', 'No VNET peering'))]",
          "HubVnetID": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.hubVnetID.value), createObject('value', 'No VNET peering'))]",
          "SpokeVnetName": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('spokeSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location'))), '2022-09-01').outputs.spokeVnetName.value), createObject('value', 'No VNET peering'))]",
          "counter": {
            "value": "[range(0, parameters('amountOfSpokes'))[copyIndex()]]"
          },
          "GatewayDeployed": {
            "value": "[parameters('deployGatewayInHub')]"
          },
          "hubSubscriptionID": {
            "value": "[parameters('hubSubscriptionID')]"
          },
          "spokeSubscriptionID": {
            "value": "[parameters('spokeSubscriptionID')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "7299244009832791706"
            }
          },
          "parameters": {
            "HubResourceGroupName": {
              "type": "string"
            },
            "SpokeResourceGroupName": {
              "type": "string"
            },
            "HubVnetName": {
              "type": "string"
            },
            "SpokeVnetName": {
              "type": "string"
            },
            "HubVnetID": {
              "type": "string"
            },
            "SpokeVnetID": {
              "type": "string"
            },
            "counter": {
              "type": "int"
            },
            "GatewayDeployed": {
              "type": "bool"
            },
            "hubSubscriptionID": {
              "type": "string"
            },
            "spokeSubscriptionID": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('peeringToSpoke{0}', add(parameters('counter'), 1))]",
              "subscriptionId": "[parameters('hubSubscriptionID')]",
              "resourceGroup": "[parameters('HubResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "peeringName": {
                    "value": "[format('{0}/peeringToSpoke{1}', parameters('HubVnetName'), add(parameters('counter'), 1))]"
                  },
                  "remoteVnetID": {
                    "value": "[parameters('SpokeVnetID')]"
                  },
                  "useRemoteGateways": {
                    "value": false
                  },
                  "allowGatewayTransit": {
                    "value": "[parameters('GatewayDeployed')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "13510008857937721933"
                    }
                  },
                  "parameters": {
                    "remoteVnetID": {
                      "type": "string"
                    },
                    "peeringName": {
                      "type": "string"
                    },
                    "allowForwardedTraffic": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowGatewayTransit": {
                      "type": "bool"
                    },
                    "allowVirtualNetworkAccess": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "useRemoteGateways": {
                      "type": "bool"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('peeringName')]",
                      "properties": {
                        "remoteVirtualNetwork": {
                          "id": "[parameters('remoteVnetID')]"
                        },
                        "allowForwardedTraffic": "[parameters('allowForwardedTraffic')]",
                        "allowGatewayTransit": "[parameters('allowGatewayTransit')]",
                        "allowVirtualNetworkAccess": "[parameters('allowVirtualNetworkAccess')]",
                        "useRemoteGateways": "[parameters('useRemoteGateways')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('peeringToHub{0}', add(parameters('counter'), 1))]",
              "subscriptionId": "[parameters('spokeSubscriptionID')]",
              "resourceGroup": "[parameters('SpokeResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "peeringName": {
                    "value": "[format('{0}/peeringToHub{1}', parameters('SpokeVnetName'), add(parameters('counter'), 1))]"
                  },
                  "remoteVnetID": {
                    "value": "[parameters('HubVnetID')]"
                  },
                  "useRemoteGateways": {
                    "value": "[parameters('GatewayDeployed')]"
                  },
                  "allowGatewayTransit": {
                    "value": false
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "13510008857937721933"
                    }
                  },
                  "parameters": {
                    "remoteVnetID": {
                      "type": "string"
                    },
                    "peeringName": {
                      "type": "string"
                    },
                    "allowForwardedTraffic": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowGatewayTransit": {
                      "type": "bool"
                    },
                    "allowVirtualNetworkAccess": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "useRemoteGateways": {
                      "type": "bool"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('peeringName')]",
                      "properties": {
                        "remoteVirtualNetwork": {
                          "id": "[parameters('remoteVnetID')]"
                        },
                        "allowForwardedTraffic": "[parameters('allowForwardedTraffic')]",
                        "allowGatewayTransit": "[parameters('allowGatewayTransit')]",
                        "allowVirtualNetworkAccess": "[parameters('allowVirtualNetworkAccess')]",
                        "useRemoteGateways": "[parameters('useRemoteGateways')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('hubSubscriptionID'), parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', format('peeringToSpoke{0}', add(parameters('counter'), 1)))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location')))]",
        "[subscriptionResourceId(parameters('spokeSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))]",
        "[subscriptionResourceId(parameters('spokeSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))]",
        "[subscriptionResourceId(parameters('spokeSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))]"
      ]
    },
    {
      "condition": "[and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-{1}-AVNM', parameters('hubRgName'), parameters('location'))]",
      "subscriptionId": "[parameters('hubSubscriptionID')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "avnmSubscriptionScopes": "[if(and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM')), createObject('value', concat(union(array(format('/subscriptions/{0}', parameters('hubSubscriptionID'))), array(format('/subscriptions/{0}', parameters('spokeSubscriptionID')))))), createObject('value', createArray()))]",
          "HubResourceGroupName": "[if(and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.HubResourceGroupName.value), createObject('value', 'No Hub'))]",
          "spokeVNETids": {
            "copy": [
              {
                "name": "value",
                "count": "[length(range(0, parameters('amountOfSpokes')))]",
                "input": "[if(and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM')), reference(subscriptionResourceId(parameters('spokeSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex('value')]], parameters('location'))), '2022-09-01').outputs.spokeVnetID.value, createArray())]"
              }
            ]
          },
          "hubVNETid": "[if(and(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVnetHub')), parameters('deployVnetPeeringAVNM')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.hubVnetID.value), createObject('value', 'No Hub'))]",
          "useHubGateway": {
            "value": "[parameters('deployGatewayInHub')]"
          },
          "deployVnetPeeringMesh": {
            "value": "[parameters('deployVnetPeeringMesh')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "11617404838694106400"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "HubResourceGroupName": {
              "type": "string"
            },
            "avnmSubscriptionScopes": {
              "type": "array"
            },
            "avnmName": {
              "type": "string",
              "defaultValue": "LabBuilder-AVNM"
            },
            "spokeVNETids": {
              "type": "array"
            },
            "hubVNETid": {
              "type": "string"
            },
            "useHubGateway": {
              "type": "bool"
            },
            "deployVnetPeeringMesh": {
              "type": "bool"
            },
            "tagsByResource": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "AVNM",
              "resourceGroup": "[parameters('HubResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "avnmName": {
                    "value": "[parameters('avnmName')]"
                  },
                  "avnmSubscriptionScopes": {
                    "value": "[parameters('avnmSubscriptionScopes')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "12184505134393036225"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "avnmName": {
                      "type": "string"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "avnmScopeAccesses": {
                      "type": "array",
                      "defaultValue": [
                        "Connectivity"
                      ],
                      "allowedValues": [
                        "Connectivity",
                        "SecurityAdmin"
                      ]
                    },
                    "avnmSubscriptionScopes": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkManagers",
                      "apiVersion": "2022-11-01",
                      "name": "[parameters('avnmName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "networkManagerScopeAccesses": "[parameters('avnmScopeAccesses')]",
                        "networkManagerScopes": {
                          "subscriptions": "[parameters('avnmSubscriptionScopes')]"
                        }
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/networkManagers'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkManagers', parameters('avnmName'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('avnmName')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "AVNM-NetworkGroup",
              "resourceGroup": "[parameters('HubResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "avnmGroupName": {
                    "value": "[format('{0}-NetworkGroup01', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM'), '2022-09-01').outputs.name.value)]"
                  },
                  "avnmName": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM'), '2022-09-01').outputs.name.value]"
                  },
                  "spokeVNETids": {
                    "value": "[parameters('spokeVNETids')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "14339844246599902954"
                    }
                  },
                  "parameters": {
                    "avnmName": {
                      "type": "string"
                    },
                    "avnmGroupName": {
                      "type": "string"
                    },
                    "spokeVNETids": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkManagers/networkGroups",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName'))]",
                      "properties": {
                        "description": "LabBuilder AVNM - Network Group"
                      }
                    },
                    {
                      "copy": {
                        "name": "avnmNetworkGroupMemeber",
                        "count": "[length(parameters('spokeVNETids'))]"
                      },
                      "type": "Microsoft.Network/networkManagers/networkGroups/staticMembers",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[1], format('avnmNetworkGroupMemeber{0}', copyIndex()))]",
                      "properties": {
                        "resourceId": "[parameters('spokeVNETids')[copyIndex()]]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkManagers/networkGroups', split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[1])]"
                      ]
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkManagers/networkGroups', split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avnmGroupName')), '/')[1])]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "AVNM-ConnectivityConfig",
              "resourceGroup": "[parameters('HubResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "avnmName": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM'), '2022-09-01').outputs.name.value]"
                  },
                  "avnmNetworkGroupID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM-NetworkGroup'), '2022-09-01').outputs.id.value]"
                  },
                  "avvmConnectivityConfigName": {
                    "value": "[format('{0}-ConnectivityConfig', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM'), '2022-09-01').outputs.name.value)]"
                  },
                  "hubVNETid": {
                    "value": "[parameters('hubVNETid')]"
                  },
                  "useHubGateway": {
                    "value": "[parameters('useHubGateway')]"
                  },
                  "groupConnectivity": "[if(parameters('deployVnetPeeringMesh'), createObject('value', 'DirectlyConnected'), createObject('value', 'None'))]"
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "3152711135315434654"
                    }
                  },
                  "parameters": {
                    "avnmName": {
                      "type": "string"
                    },
                    "avvmConnectivityConfigName": {
                      "type": "string"
                    },
                    "connectivityTopology": {
                      "type": "string",
                      "defaultValue": "HubAndSpoke",
                      "allowedValues": [
                        "HubAndSpoke",
                        "Mesh"
                      ]
                    },
                    "deleteExistingPeering": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "isGlobal": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "hubVNETid": {
                      "type": "string"
                    },
                    "avnmNetworkGroupID": {
                      "type": "string"
                    },
                    "groupConnectivity": {
                      "type": "string",
                      "defaultValue": "None",
                      "allowedValues": [
                        "None",
                        "DirectlyConnected"
                      ]
                    },
                    "useHubGateway": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkManagers/connectivityConfigurations",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}/{1}', parameters('avnmName'), parameters('avvmConnectivityConfigName'))]",
                      "properties": {
                        "connectivityTopology": "[parameters('connectivityTopology')]",
                        "description": "LabBuilder AVNM - Connectivity Configuration",
                        "deleteExistingPeering": "[string(parameters('deleteExistingPeering'))]",
                        "isGlobal": "[string(parameters('isGlobal'))]",
                        "hubs": [
                          {
                            "resourceId": "[parameters('hubVNETid')]",
                            "resourceType": "Microsoft.Network/virtualNetworks"
                          }
                        ],
                        "appliesToGroups": [
                          {
                            "networkGroupId": "[parameters('avnmNetworkGroupID')]",
                            "groupConnectivity": "[parameters('groupConnectivity')]",
                            "useHubGateway": "[string(parameters('useHubGateway'))]",
                            "isGlobal": "[string(parameters('isGlobal'))]"
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkManagers/connectivityConfigurations', split(format('{0}/{1}', parameters('avnmName'), parameters('avvmConnectivityConfigName')), '/')[0], split(format('{0}/{1}', parameters('avnmName'), parameters('avvmConnectivityConfigName')), '/')[1])]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[format('{0}/{1}', parameters('avnmName'), parameters('avvmConnectivityConfigName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM')]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM-NetworkGroup')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "UserAssignedIdentityForAVNM",
              "resourceGroup": "[parameters('HubResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "uaiName": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM'), '2022-09-01').outputs.name.value]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "2569380030241570944"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "uaiName": {
                      "type": "string"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2023-07-31-preview",
                      "name": "[format('{0}-{1}', parameters('uaiName'), parameters('location'))]",
                      "location": "[parameters('location')]",
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.ManagedIdentity/userAssignedIdentities'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-{1}', parameters('uaiName'), parameters('location')))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[format('{0}-{1}', parameters('uaiName'), parameters('location'))]"
                    },
                    "principalID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-{1}', parameters('uaiName'), parameters('location'))), '2023-07-31-preview').principalId]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "RoleAssignmentForAVNMDeploymentScript",
              "resourceGroup": "[parameters('HubResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'UserAssignedIdentityForAVNM'), '2022-09-01').outputs.principalID.value]"
                  },
                  "avnmName": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM'), '2022-09-01').outputs.name.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "6979591594727922991"
                    }
                  },
                  "parameters": {
                    "principalID": {
                      "type": "string"
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "ServicePrincipal",
                      "allowedValues": [
                        "ServicePrincipal",
                        "Group",
                        "User",
                        "ForeignGroup"
                      ]
                    },
                    "roleID": {
                      "type": "string",
                      "defaultValue": "4d97b98b-1d4f-4787-a291-c67834d212e7"
                    },
                    "avnmName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Network/networkManagers/{0}', parameters('avnmName'))]",
                      "name": "[guid(resourceGroup().id, parameters('principalID'))]",
                      "properties": {
                        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleID'))]",
                        "principalId": "[parameters('principalID')]",
                        "principalType": "[parameters('principalType')]"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[extensionResourceId(resourceId('Microsoft.Network/networkManagers', parameters('avnmName')), 'Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, parameters('principalID')))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM')]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'UserAssignedIdentityForAVNM')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "AVNM-ConfigurationDeployment",
              "resourceGroup": "[parameters('HubResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "avnmName": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM'), '2022-09-01').outputs.name.value]"
                  },
                  "configType": {
                    "value": "Connectivity"
                  },
                  "configurationId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM-ConnectivityConfig'), '2022-09-01').outputs.id.value]"
                  },
                  "deploymentScriptName": {
                    "value": "[format('{0}-DeploymentScript', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM'), '2022-09-01').outputs.name.value)]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "userAssignedIdentityId": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'UserAssignedIdentityForAVNM'), '2022-09-01').outputs.id.value]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "3200759614727061478"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "userAssignedIdentityId": {
                      "type": "string"
                    },
                    "avnmName": {
                      "type": "string"
                    },
                    "configurationId": {
                      "type": "string"
                    },
                    "deploymentScriptName": {
                      "type": "string"
                    },
                    "configType": {
                      "type": "string",
                      "allowedValues": [
                        "Connectivity"
                      ]
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2023-08-01",
                      "name": "[parameters('deploymentScriptName')]",
                      "location": "[parameters('location')]",
                      "kind": "AzurePowerShell",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('userAssignedIdentityId'))]": {}
                        }
                      },
                      "properties": {
                        "azPowerShellVersion": "8.3",
                        "retentionInterval": "PT1H",
                        "timeout": "PT1H",
                        "arguments": "[format('-networkManagerName \"{0}\" -targetLocations {1} -configIds {2} -subscriptionId {3} -configType {4} -resourceGroupName {5}', parameters('avnmName'), parameters('location'), parameters('configurationId'), subscription().subscriptionId, parameters('configType'), resourceGroup().name)]",
                        "scriptContent": "    param (\n      # AVNM subscription id\n      [parameter(mandatory=$true)][string]$subscriptionId,\n\n      # AVNM resource name\n      [parameter(mandatory=$true)][string]$networkManagerName,\n\n      # string with comma-separated list of config ids to deploy. ids must be of the same config type\n      [parameter(mandatory=$true)][string[]]$configIds,\n\n      # string with comma-separated list of deployment target regions\n      [parameter(mandatory=$true)][string[]]$targetLocations,\n\n      # configuration type to deploy. must be either connecticity or securityadmin\n      [parameter(mandatory=$true)][ValidateSet('Connectivity','SecurityAdmin')][string]$configType,\n\n      # AVNM resource group name\n      [parameter(mandatory=$true)][string]$resourceGroupName\n    )\n  \n    $null = Login-AzAccount -Identity -Subscription $subscriptionId\n  \n    [System.Collections.Generic.List[string]]$configIdList = @()  \n    $configIdList.addRange($configIds) \n    [System.Collections.Generic.List[string]]$targetLocationList = @() # target locations for deployment\n    $targetLocationList.addRange($targetLocations)     \n    \n    $deployment = @{\n        Name = $networkManagerName\n        ResourceGroupName = $resourceGroupName\n        ConfigurationId = $configIdList\n        TargetLocation = $targetLocationList\n        CommitType = $configType\n    }\n  \n    try {\n      Deploy-AzNetworkManagerCommit @deployment -ErrorAction Stop\n    }\n    catch {\n      Write-Error \"Deployment failed with error: $_\"\n      throw \"Deployment failed with error: $_\"\n    }\n    "
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/deploymentScripts'), createObject())]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM')]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'AVNM-ConnectivityConfig')]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('HubResourceGroupName')), 'Microsoft.Resources/deployments', 'UserAssignedIdentityForAVNM')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location')))]",
        "spokeVnets"
      ]
    },
    {
      "copy": {
        "name": "vnetConnections",
        "count": "[length(range(0, parameters('amountOfSpokes')))]"
      },
      "condition": "[and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVwanHub'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-VnetConnection{1}-{2}', parameters('hubRgName'), add(range(0, parameters('amountOfSpokes'))[copyIndex()], 1), parameters('location'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "HubResourceGroupName": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVwanHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.HubResourceGroupName.value), createObject('value', 'No VNET peering'))]",
          "SpokeVnetID": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVwanHub')), createObject('value', reference(subscriptionResourceId(parameters('spokeSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location'))), '2022-09-01').outputs.spokeVnetID.value), createObject('value', 'No VNET peering'))]",
          "vwanHubName": "[if(and(and(parameters('deployHUB'), parameters('deploySpokes')), variables('isVwanHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vwanHubName.value), createObject('value', 'No VNET peering'))]",
          "deployFirewallInHub": {
            "value": "[and(parameters('deployFirewallInHub'), variables('isVwanHub'))]"
          },
          "counter": {
            "value": "[range(0, parameters('amountOfSpokes'))[copyIndex()]]"
          },
          "hubSubscriptionID": {
            "value": "[parameters('hubSubscriptionID')]"
          },
          "enableRoutingIntent": {
            "value": "[or(parameters('internetTrafficRoutingPolicy'), parameters('privateTrafficRoutingPolicy'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "2465398116698347770"
            }
          },
          "parameters": {
            "vwanHubName": {
              "type": "string"
            },
            "SpokeVnetID": {
              "type": "string"
            },
            "HubResourceGroupName": {
              "type": "string"
            },
            "counter": {
              "type": "int"
            },
            "deployFirewallInHub": {
              "type": "bool"
            },
            "hubSubscriptionID": {
              "type": "string"
            },
            "enableRoutingIntent": {
              "type": "bool",
              "defaultValue": true
            }
          },
          "variables": {
            "spokeName": "[split(parameters('SpokeVnetID'), '/')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('VnetConnection{0}', add(parameters('counter'), 1))]",
              "subscriptionId": "[parameters('hubSubscriptionID')]",
              "resourceGroup": "[parameters('HubResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "SpokeVnetID": {
                    "value": "[parameters('SpokeVnetID')]"
                  },
                  "vwanHubName": {
                    "value": "[parameters('vwanHubName')]"
                  },
                  "spokeName": {
                    "value": "[variables('spokeName')]"
                  },
                  "enableInternetSecurity": {
                    "value": "[parameters('deployFirewallInHub')]"
                  },
                  "propagateToNoneRouteTable": {
                    "value": "[parameters('deployFirewallInHub')]"
                  },
                  "enableRoutingIntent": {
                    "value": "[parameters('enableRoutingIntent')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "13067638075805386909"
                    }
                  },
                  "parameters": {
                    "vwanHubName": {
                      "type": "string"
                    },
                    "spokeName": {
                      "type": "string"
                    },
                    "SpokeVnetID": {
                      "type": "string"
                    },
                    "enableInternetSecurity": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "propagateToNoneRouteTable": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableRoutingIntent": {
                      "type": "bool"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}/{1}-to-{2}', parameters('vwanHubName'), parameters('vwanHubName'), parameters('spokeName'))]",
                      "properties": {
                        "routingConfiguration": "[if(parameters('enableRoutingIntent'), createObject(), createObject('associatedRouteTable', createObject('id', resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vwanHubName'), 'defaultRouteTable')), 'propagatedRouteTables', createObject('labels', createArray(if(parameters('propagateToNoneRouteTable'), '', 'default')), 'ids', createArray(createObject('id', resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vwanHubName'), if(parameters('propagateToNoneRouteTable'), 'noneRouteTable', 'defaultRouteTable')))))))]",
                        "remoteVirtualNetwork": {
                          "id": "[parameters('SpokeVnetID')]"
                        },
                        "enableInternetSecurity": "[or(parameters('enableInternetSecurity'), parameters('enableRoutingIntent'))]",
                        "allowHubToRemoteVnetTransit": "[parameters('enableRoutingIntent')]",
                        "allowRemoteVnetToUseHubVnetGateways": "[parameters('enableRoutingIntent')]"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('spokeSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))]",
        "[subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location')))]"
      ]
    },
    {
      "condition": "[parameters('deployOnPrem')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-{1}', parameters('onpremRgName'), parameters('location'))]",
      "subscriptionId": "[parameters('onPremSubscriptionID')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "AddressSpace": {
            "value": "[cidrSubnet(parameters('AddressSpace'), 24, 255)]"
          },
          "deployBastionInOnPrem": {
            "value": "[parameters('deployBastionInOnPrem')]"
          },
          "deployGatewayInOnPrem": {
            "value": "[parameters('deployGatewayinOnPrem')]"
          },
          "deployVMsInOnPrem": {
            "value": "[parameters('deployVMinOnPrem')]"
          },
          "OnPremRgName": {
            "value": "[parameters('onpremRgName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSizeOnPrem')]"
          },
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          },
          "osType": {
            "value": "[parameters('osTypeOnPrem')]"
          },
          "vpnGwBgpAsn": "[if(parameters('onpremBgp'), createObject('value', parameters('onpremBgpAsn')), createObject('value', 65515))]",
          "vpnGwEnebaleBgp": {
            "value": "[parameters('onpremBgp')]"
          },
          "bastionSku": {
            "value": "[parameters('bastionInOnPremSKU')]"
          },
          "diagnosticWorkspaceId": {
            "value": "[parameters('diagnosticWorkspaceId')]"
          },
          "dcrID": "[if(and(parameters('deployOnPrem'), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.dcrvminsightsID.value), if(variables('isVwanHub'), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.dcrvminsightsID.value), createObject('value', '')))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "8450382727461538823"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "AddressSpace": {
              "type": "string"
            },
            "deployBastionInOnPrem": {
              "type": "bool"
            },
            "bastionSku": {
              "type": "string"
            },
            "adminUsername": {
              "type": "string"
            },
            "adminPassword": {
              "type": "securestring"
            },
            "deployVMsInOnPrem": {
              "type": "bool"
            },
            "deployGatewayInOnPrem": {
              "type": "bool"
            },
            "OnPremRgName": {
              "type": "string"
            },
            "vmSize": {
              "type": "string"
            },
            "tagsByResource": {
              "type": "object"
            },
            "osType": {
              "type": "string"
            },
            "vpnGwEnebaleBgp": {
              "type": "bool"
            },
            "vpnGwBgpAsn": {
              "type": "int"
            },
            "diagnosticWorkspaceId": {
              "type": "string"
            },
            "dcrID": {
              "type": "string"
            }
          },
          "variables": {
            "vnetName": "VNET-OnPrem",
            "vmName": "VM-OnPrem",
            "nsgName": "NSG-OnPrem",
            "bastionName": "Bastion-OnPrem",
            "gatewayName": "Gateway-OnPrem",
            "defaultSubnetPrefix": "[cidrSubnet(parameters('AddressSpace'), 26, 0)]",
            "bastionSubnetPrefix": "[cidrSubnet(parameters('AddressSpace'), 26, 1)]",
            "gatewaySubnetPrefix": "[cidrSubnet(parameters('AddressSpace'), 26, 2)]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2023-07-01",
              "name": "[parameters('OnPremRgName')]",
              "location": "[parameters('location')]",
              "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Resources/subscriptions/resourceGroups'), createObject())]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('vnetName')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetAddressSpcae": {
                    "value": "[parameters('AddressSpace')]"
                  },
                  "nsgID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('nsgName')), '2022-09-01').outputs.nsgID.value]"
                  },
                  "vnetname": {
                    "value": "[variables('vnetName')]"
                  },
                  "deployDefaultSubnet": {
                    "value": true
                  },
                  "defaultSubnetPrefix": {
                    "value": "[variables('defaultSubnetPrefix')]"
                  },
                  "bastionSubnetPrefix": {
                    "value": "[variables('bastionSubnetPrefix')]"
                  },
                  "GatewaySubnetPrefix": {
                    "value": "[variables('gatewaySubnetPrefix')]"
                  },
                  "deployBastionSubnet": {
                    "value": "[parameters('deployBastionInOnPrem')]"
                  },
                  "deployGatewaySubnet": {
                    "value": "[parameters('deployGatewayInOnPrem')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "7931326192284124820"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vnetname": {
                      "type": "string"
                    },
                    "vnetAddressSpcae": {
                      "type": "string"
                    },
                    "defaultSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "bastionSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "firewallSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "GatewaySubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "nsgID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "rtDefID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "rtGwID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "deployDefaultSubnet": {
                      "type": "bool"
                    },
                    "deployBastionSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployFirewallSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployGatewaySubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "firewallDNSproxy": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "azFwIp": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "variables": {
                    "defaultSubnet": "[if(parameters('deployDefaultSubnet'), createArray(createObject('name', 'default', 'properties', createObject('addressPrefix', parameters('defaultSubnetPrefix'), 'networkSecurityGroup', if(equals(parameters('nsgID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}', parameters('nsgID')))), 'routeTable', if(equals(parameters('rtDefID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtDefID'))))))), createArray())]",
                    "bastionSubnet": "[if(parameters('deployBastionSubnet'), createArray(createObject('name', 'AzureBastionSubnet', 'properties', createObject('addressPrefix', parameters('bastionSubnetPrefix')))), createArray())]",
                    "firewallSubnet": "[if(parameters('deployFirewallSubnet'), createArray(createObject('name', 'AzureFirewallSubnet', 'properties', createObject('addressPrefix', parameters('firewallSubnetPrefix')))), createArray())]",
                    "gatewaySubnet": "[if(parameters('deployGatewaySubnet'), createArray(createObject('name', 'GatewaySubnet', 'properties', createObject('addressPrefix', parameters('GatewaySubnetPrefix'), 'routeTable', if(equals(parameters('rtGwID'), 'none'), null(), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtGwID'))))))), createArray())]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('vnetname')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "dhcpOptions": {
                          "dnsServers": "[if(parameters('firewallDNSproxy'), array(parameters('azFwIp')), createArray())]"
                        },
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('vnetAddressSpcae')]"
                          ]
                        },
                        "subnets": "[concat(variables('defaultSubnet'), variables('bastionSubnet'), variables('firewallSubnet'), variables('gatewaySubnet'))]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworks'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "vnetName": {
                      "type": "string",
                      "value": "[parameters('vnetname')]"
                    },
                    "vnetID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))]"
                    },
                    "vnetAddressSpace": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname')), '2023-06-01').addressSpace.addressPrefixes]"
                    },
                    "defaultSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployDefaultSubnet'), resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetname'), 'default'), 'Not deployed')]"
                    },
                    "bastionSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployBastionSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureBastionSubnet'), 'Not deployed')]"
                    },
                    "firewallSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployFirewallSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureFirewallSubnet'), 'Not deployed')]"
                    },
                    "gatewaySubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewaySubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'GatewaySubnet'), 'Not deployed')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('nsgName'))]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('OnPremRgName'))]"
              ]
            },
            {
              "condition": "[parameters('deployVMsInOnPrem')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('vmName')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "adminPassword": {
                    "value": "[parameters('adminPassword')]"
                  },
                  "adminUsername": {
                    "value": "[parameters('adminUsername')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName')), '2022-09-01').outputs.defaultSubnetID.value]"
                  },
                  "vmName": {
                    "value": "[variables('vmName')]"
                  },
                  "vmSize": {
                    "value": "[parameters('vmSize')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "osType": {
                    "value": "[parameters('osType')]"
                  },
                  "diagnosticWorkspaceId": {
                    "value": "[parameters('diagnosticWorkspaceId')]"
                  },
                  "dcrID": {
                    "value": "[parameters('dcrID')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "12131024143933360047"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vmName": {
                      "type": "string"
                    },
                    "adminUsername": {
                      "type": "string"
                    },
                    "adminPassword": {
                      "type": "securestring"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "vmSize": {
                      "type": "string"
                    },
                    "storageType": {
                      "type": "string",
                      "defaultValue": "StandardSSD_LRS"
                    },
                    "osType": {
                      "type": "string",
                      "defaultValue": "Windows"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "dcrID": {
                      "type": "string"
                    },
                    "diagnosticWorkspaceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "EnableICMPv4": "netsh advfirewall firewall add rule name=\"ICMP Allow incoming V4 echo request\" protocol=\"icmpv4:8,any\" dir=in action=allow",
                    "AmaExtensionName": "[if(equals(parameters('osType'), 'Windows'), 'AzureMonitorWindowsAgent', 'AzureMonitorLinuxAgent')]",
                    "AmaExtensionType": "[if(equals(parameters('osType'), 'Windows'), 'AzureMonitorWindowsAgent', 'AzureMonitorLinuxAgent')]",
                    "AmaExtensionVersion": "1.0",
                    "DaExtensionName": "DependencyAgentWindows",
                    "DaExtensionType": "DependencyAgentWindows",
                    "DaExtensionVersion": "9.5",
                    "Windows": {
                      "publisher": "MicrosoftWindowsServer",
                      "offer": "WindowsServer",
                      "sku": "2022-datacenter-g2",
                      "version": "latest"
                    },
                    "Linux": {
                      "publisher": "Canonical",
                      "offer": "0001-com-ubuntu-server-jammy",
                      "sku": "22_04-lts-gen2",
                      "version": "latest"
                    },
                    "imagereference": "[if(equals(parameters('osType'), 'Windows'), variables('Windows'), if(equals(parameters('osType'), 'Linux'), variables('Linux'), createObject()))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2023-09-01",
                      "name": "[parameters('vmName')]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "osProfile": {
                          "computerName": "[parameters('vmName')]",
                          "adminUsername": "[parameters('adminUsername')]",
                          "adminPassword": "[parameters('adminPassword')]"
                        },
                        "storageProfile": {
                          "imageReference": "[variables('imagereference')]",
                          "osDisk": {
                            "createOption": "FromImage",
                            "name": "[format('{0}-osDisk', parameters('vmName'))]",
                            "managedDisk": {
                              "storageAccountType": "[parameters('storageType')]"
                            },
                            "osType": "[parameters('osType')]",
                            "deleteOption": "Delete"
                          }
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]",
                              "properties": {
                                "deleteOption": "Delete"
                              }
                            }
                          ]
                        },
                        "hardwareProfile": {
                          "vmSize": "[parameters('vmSize')]"
                        },
                        "diagnosticsProfile": {
                          "bootDiagnostics": {
                            "enabled": true
                          }
                        }
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), createObject())]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('diagnosticWorkspaceId')))]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2023-09-01",
                      "name": "[format('{0}/{1}', parameters('vmName'), variables('AmaExtensionName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publisher": "Microsoft.Azure.Monitor",
                        "type": "[variables('AmaExtensionType')]",
                        "typeHandlerVersion": "[variables('AmaExtensionVersion')]",
                        "autoUpgradeMinorVersion": true
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    },
                    {
                      "condition": "[and(not(empty(parameters('diagnosticWorkspaceId'))), equals(parameters('osType'), 'Windows'))]",
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2023-09-01",
                      "name": "[format('{0}/{1}', parameters('vmName'), variables('DaExtensionName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                        "type": "[variables('DaExtensionType')]",
                        "typeHandlerVersion": "[variables('DaExtensionVersion')]",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "enableAMA": true
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('diagnosticWorkspaceId')))]",
                      "type": "Microsoft.Insights/dataCollectionRuleAssociations",
                      "apiVersion": "2023-03-11",
                      "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
                      "name": "VMInsights-Dcr-Association",
                      "properties": {
                        "dataCollectionRuleId": "[parameters('dcrID')]",
                        "description": "Association of data collection rule for VM Insights."
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}-nic', parameters('vmName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "primary": true,
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('subnetID')]"
                              }
                            }
                          }
                        ]
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Compute/virtualMachines'), createObject())]"
                    },
                    {
                      "condition": "[equals(parameters('osType'), 'Windows')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}-runCommand', parameters('vmName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "runCommand": {
                            "value": "[variables('EnableICMPv4')]"
                          },
                          "vmName": {
                            "value": "[parameters('vmName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.29.47.4906",
                              "templateHash": "11656903658558868059"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "runName": {
                              "type": "string",
                              "defaultValue": "RunCommand"
                            },
                            "runCommand": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/runCommands",
                              "apiVersion": "2023-09-01",
                              "name": "[format('{0}/{1}', parameters('vmName'), parameters('runName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "source": {
                                  "script": "[parameters('runCommand')]"
                                },
                                "timeoutInSeconds": 60
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "vmResourceID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('OnPremRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('nsgName')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "nsgName": {
                    "value": "[variables('nsgName')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "15498173127582355570"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "nsgName": {
                      "type": "string"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('nsgName')]",
                      "location": "[parameters('location')]",
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/networkSecurityGroups'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "nsgID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('OnPremRgName'))]"
              ]
            },
            {
              "condition": "[parameters('deployBastionInOnPrem')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('bastionName')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetID": "[if(parameters('deployBastionInOnPrem'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName')), '2022-09-01').outputs.bastionSubnetID.value), createObject('value', ''))]",
                  "bastionName": {
                    "value": "[variables('bastionName')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "bastionSku": {
                    "value": "[parameters('bastionSku')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "8381117283990948462"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "bastionName": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "bastionSku": {
                      "type": "string",
                      "allowedValues": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ]
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/bastionHosts",
                      "apiVersion": "2024-01-01",
                      "name": "[parameters('bastionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "IpConf",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('subnetID')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                              }
                            }
                          }
                        ]
                      },
                      "sku": {
                        "name": "[parameters('bastionSku')]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/bastionHosts'), createObject())]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}-pip', parameters('bastionName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('OnPremRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))]"
              ]
            },
            {
              "condition": "[parameters('deployGatewayInOnPrem')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[variables('gatewayName')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vpnGatewayName": {
                    "value": "[variables('gatewayName')]"
                  },
                  "vpnGatewaySubnetID": "[if(parameters('deployGatewayInOnPrem'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName')), '2022-09-01').outputs.gatewaySubnetID.value), createObject('value', ''))]",
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "vpnGatewayBgpAsn": "[if(parameters('vpnGwEnebaleBgp'), createObject('value', parameters('vpnGwBgpAsn')), createObject('value', 65515))]",
                  "vpnGatewayEnableBgp": {
                    "value": "[parameters('vpnGwEnebaleBgp')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "13351419219210240579"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vpnGatewayName": {
                      "type": "string"
                    },
                    "vpnGatewaySubnetID": {
                      "type": "string"
                    },
                    "vpnGatewaySKU": {
                      "type": "string",
                      "defaultValue": "VpnGw1"
                    },
                    "vpnGatewayType": {
                      "type": "string",
                      "defaultValue": "Vpn"
                    },
                    "vpnGatewayVPNtype": {
                      "type": "string",
                      "defaultValue": "RouteBased"
                    },
                    "vpnGatewayGen": {
                      "type": "string",
                      "defaultValue": "Generation1"
                    },
                    "vpnGatewayEnableBgp": {
                      "type": "bool"
                    },
                    "vpnGatewayBgpAsn": {
                      "type": "int"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "pipName": "[format('{0}-pip', parameters('vpnGatewayName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworkGateways",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('vpnGatewayName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "gatewayType": "[parameters('vpnGatewayType')]",
                        "vpnType": "[parameters('vpnGatewayVPNtype')]",
                        "enableBgp": "[parameters('vpnGatewayEnableBgp')]",
                        "bgpSettings": {
                          "asn": "[parameters('vpnGatewayBgpAsn')]"
                        },
                        "sku": {
                          "name": "[parameters('vpnGatewaySKU')]",
                          "tier": "[parameters('vpnGatewaySKU')]"
                        },
                        "vpnGatewayGeneration": "[parameters('vpnGatewayGen')]",
                        "activeActive": false,
                        "ipConfigurations": [
                          {
                            "name": "ipConfig",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('vpnGatewaySubnetID')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                              }
                            }
                          }
                        ]
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/virtualNetworkGateways'), createObject())]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[variables('pipName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/publicIPAddresses'), createObject())]"
                    }
                  ],
                  "outputs": {
                    "vpnGwPublicIP": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('pipName')), '2023-06-01').ipAddress]"
                    },
                    "vpnGwID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName'))]"
                    },
                    "vpnGwBgpPeeringAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName')), '2023-06-01').bgpSettings.bgpPeeringAddress]"
                    },
                    "vpnGwName": {
                      "type": "string",
                      "value": "[parameters('vpnGatewayName')]"
                    },
                    "vpnGwAsn": {
                      "type": "int",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName')), '2023-06-01').bgpSettings.asn]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('OnPremRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))]"
              ]
            }
          ],
          "outputs": {
            "OnPremGatewayPublicIP": {
              "type": "string",
              "value": "[if(parameters('deployGatewayInOnPrem'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwPublicIP.value, 'none')]"
            },
            "OnPremGatewayID": {
              "type": "string",
              "value": "[if(parameters('deployGatewayInOnPrem'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwID.value, 'none')]"
            },
            "OnPremAddressSpace": {
              "type": "string",
              "value": "[parameters('AddressSpace')]"
            },
            "OnPremGwBgpPeeringAddress": {
              "type": "string",
              "value": "[if(parameters('deployGatewayInOnPrem'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwBgpPeeringAddress.value, 'none')]"
            },
            "OnPremGwBgpAsn": {
              "type": "int",
              "value": "[if(and(parameters('deployGatewayInOnPrem'), parameters('vpnGwEnebaleBgp')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('gatewayName')), '2022-09-01').outputs.vpnGwAsn.value, 0)]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location')))]",
        "[subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location')))]"
      ]
    },
    {
      "condition": "[and(and(and(parameters('deployGatewayInHub'), parameters('deployGatewayinOnPrem')), parameters('deploySiteToSite')), variables('isVnetHub'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-s2s-Hub-OnPrem-{1}', parameters('hubRgName'), parameters('location'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "HubRgName": "[if(and(parameters('deployHUB'), variables('isVnetHub')), createObject('value', parameters('hubRgName')), createObject('value', 'none'))]",
          "HubGatewayID": "[if(and(parameters('deployGatewayInHub'), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.hubGatewayID.value), createObject('value', 'none'))]",
          "HubGatewayPublicIP": "[if(and(parameters('deployGatewayInHub'), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.hubGatewayPublicIP.value), createObject('value', 'none'))]",
          "HubAddressPrefixes": "[if(and(parameters('deployHUB'), variables('isVnetHub')), createObject('value', variables('AllAddressSpaces')), createObject('value', createArray()))]",
          "HubLocalGatewayName": "[if(and(parameters('deploySiteToSite'), variables('isVnetHub')), createObject('value', 'LocalGateway-Hub'), createObject('value', 'none'))]",
          "OnPremRgName": "[if(and(parameters('deployOnPrem'), variables('isVnetHub')), createObject('value', parameters('onpremRgName')), createObject('value', 'none'))]",
          "OnPremGatewayID": "[if(and(parameters('deployGatewayinOnPrem'), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremGatewayID.value), createObject('value', 'none'))]",
          "OnPremGatewayPublicIP": "[if(and(parameters('deployGatewayinOnPrem'), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremGatewayPublicIP.value), createObject('value', 'none'))]",
          "OnPremAddressPrefixes": "[if(and(parameters('deployOnPrem'), variables('isVnetHub')), createObject('value', array(reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremAddressSpace.value)), createObject('value', createArray()))]",
          "OnPremLocalGatewayName": "[if(and(parameters('deploySiteToSite'), variables('isVnetHub')), createObject('value', 'LocalGateway-OnPrem'), createObject('value', 'none'))]",
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          },
          "enableBgp": {
            "value": "[and(parameters('hubBgp'), parameters('onpremBgp'))]"
          },
          "HubBgpAsn": {
            "value": "[parameters('hubBgpAsn')]"
          },
          "HubBgpPeeringAddress": "[if(and(and(parameters('deployGatewayInHub'), parameters('hubBgp')), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.HubGwBgpPeeringAddress.value), createObject('value', 'none'))]",
          "OnPremBgpAsn": {
            "value": "[parameters('onpremBgpAsn')]"
          },
          "OnPremBgpPeeringAddress": "[if(and(and(parameters('deployGatewayinOnPrem'), parameters('onpremBgp')), variables('isVnetHub')), createObject('value', reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremGwBgpPeeringAddress.value), createObject('value', 'none'))]",
          "sharedKey": "[if(parameters('deploySiteToSite'), createObject('value', parameters('sharedKey')), createObject('value', 'none'))]",
          "hubSubscriptionID": {
            "value": "[parameters('hubSubscriptionID')]"
          },
          "onPremSubscriptionID": {
            "value": "[parameters('onPremSubscriptionID')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "10603877157023682935"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "sharedKey": {
              "type": "securestring"
            },
            "enableBgp": {
              "type": "bool"
            },
            "tagsByResource": {
              "type": "object"
            },
            "OnPremGatewayID": {
              "type": "string"
            },
            "OnPremRgName": {
              "type": "string"
            },
            "OnPremBgpAsn": {
              "type": "int"
            },
            "OnPremBgpPeeringAddress": {
              "type": "string"
            },
            "HubGatewayPublicIP": {
              "type": "string"
            },
            "HubLocalGatewayName": {
              "type": "string"
            },
            "HubAddressPrefixes": {
              "type": "array"
            },
            "HubGatewayID": {
              "type": "string"
            },
            "HubRgName": {
              "type": "string"
            },
            "HubBgpAsn": {
              "type": "int"
            },
            "HubBgpPeeringAddress": {
              "type": "string"
            },
            "OnPremGatewayPublicIP": {
              "type": "string"
            },
            "OnPremLocalGatewayName": {
              "type": "string"
            },
            "OnPremAddressPrefixes": {
              "type": "array"
            },
            "hubSubscriptionID": {
              "type": "string"
            },
            "onPremSubscriptionID": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('HubLocalGatewayName')]",
              "subscriptionId": "[parameters('onPremSubscriptionID')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "LocalGatewayAddressPrefixes": {
                    "value": "[parameters('HubAddressPrefixes')]"
                  },
                  "LocalGatewayName": {
                    "value": "[parameters('HubLocalGatewayName')]"
                  },
                  "LocalGatewayPublicIP": {
                    "value": "[parameters('HubGatewayPublicIP')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "connectionName": {
                    "value": "VPNtoHub"
                  },
                  "sharedKey": {
                    "value": "[parameters('sharedKey')]"
                  },
                  "VpnGatewayID": {
                    "value": "[parameters('OnPremGatewayID')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "enableBgp": {
                    "value": "[parameters('enableBgp')]"
                  },
                  "BgpAsn": {
                    "value": "[parameters('HubBgpAsn')]"
                  },
                  "BgpPeeringAddress": {
                    "value": "[parameters('HubBgpPeeringAddress')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "359380636479192162"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "LocalGatewayName": {
                      "type": "string"
                    },
                    "LocalGatewayPublicIP": {
                      "type": "string"
                    },
                    "LocalGatewayAddressPrefixes": {
                      "type": "array"
                    },
                    "VpnGatewayID": {
                      "type": "string"
                    },
                    "connectionName": {
                      "type": "string"
                    },
                    "sharedKey": {
                      "type": "securestring"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "enableBgp": {
                      "type": "bool"
                    },
                    "BgpAsn": {
                      "type": "int"
                    },
                    "BgpPeeringAddress": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/localNetworkGateways",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('LocalGatewayName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "gatewayIpAddress": "[parameters('LocalGatewayPublicIP')]",
                        "bgpSettings": "[if(parameters('enableBgp'), createObject('asn', parameters('BgpAsn'), 'bgpPeeringAddress', parameters('BgpPeeringAddress')), null())]",
                        "localNetworkAddressSpace": "[if(parameters('enableBgp'), createObject(), createObject('addressPrefixes', parameters('LocalGatewayAddressPrefixes')))]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/localNetworkGateways'), createObject())]"
                    },
                    {
                      "type": "Microsoft.Network/connections",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('connectionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "connectionType": "IPsec",
                        "connectionMode": "Default",
                        "connectionProtocol": "IKEv2",
                        "useLocalAzureIpAddress": false,
                        "usePolicyBasedTrafficSelectors": false,
                        "enableBgp": "[parameters('enableBgp')]",
                        "sharedKey": "[parameters('sharedKey')]",
                        "virtualNetworkGateway1": {
                          "id": "[parameters('VpnGatewayID')]",
                          "properties": {}
                        },
                        "localNetworkGateway2": {
                          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]",
                          "properties": {}
                        }
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/connections'), createObject())]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('OnPremLocalGatewayName')]",
              "subscriptionId": "[parameters('hubSubscriptionID')]",
              "resourceGroup": "[parameters('HubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "LocalGatewayAddressPrefixes": {
                    "value": "[parameters('OnPremAddressPrefixes')]"
                  },
                  "LocalGatewayName": {
                    "value": "[parameters('OnPremLocalGatewayName')]"
                  },
                  "LocalGatewayPublicIP": {
                    "value": "[parameters('OnPremGatewayPublicIP')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "connectionName": {
                    "value": "VPNtoOnPrem"
                  },
                  "sharedKey": {
                    "value": "[parameters('sharedKey')]"
                  },
                  "VpnGatewayID": {
                    "value": "[parameters('HubGatewayID')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "enableBgp": {
                    "value": "[parameters('enableBgp')]"
                  },
                  "BgpAsn": {
                    "value": "[parameters('OnPremBgpAsn')]"
                  },
                  "BgpPeeringAddress": {
                    "value": "[parameters('OnPremBgpPeeringAddress')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "359380636479192162"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "LocalGatewayName": {
                      "type": "string"
                    },
                    "LocalGatewayPublicIP": {
                      "type": "string"
                    },
                    "LocalGatewayAddressPrefixes": {
                      "type": "array"
                    },
                    "VpnGatewayID": {
                      "type": "string"
                    },
                    "connectionName": {
                      "type": "string"
                    },
                    "sharedKey": {
                      "type": "securestring"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "enableBgp": {
                      "type": "bool"
                    },
                    "BgpAsn": {
                      "type": "int"
                    },
                    "BgpPeeringAddress": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/localNetworkGateways",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('LocalGatewayName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "gatewayIpAddress": "[parameters('LocalGatewayPublicIP')]",
                        "bgpSettings": "[if(parameters('enableBgp'), createObject('asn', parameters('BgpAsn'), 'bgpPeeringAddress', parameters('BgpPeeringAddress')), null())]",
                        "localNetworkAddressSpace": "[if(parameters('enableBgp'), createObject(), createObject('addressPrefixes', parameters('LocalGatewayAddressPrefixes')))]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/localNetworkGateways'), createObject())]"
                    },
                    {
                      "type": "Microsoft.Network/connections",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('connectionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "connectionType": "IPsec",
                        "connectionMode": "Default",
                        "connectionProtocol": "IKEv2",
                        "useLocalAzureIpAddress": false,
                        "usePolicyBasedTrafficSelectors": false,
                        "enableBgp": "[parameters('enableBgp')]",
                        "sharedKey": "[parameters('sharedKey')]",
                        "virtualNetworkGateway1": {
                          "id": "[parameters('VpnGatewayID')]",
                          "properties": {}
                        },
                        "localNetworkGateway2": {
                          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]",
                          "properties": {}
                        }
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/connections'), createObject())]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location')))]",
        "[subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location')))]"
      ]
    },
    {
      "condition": "[and(and(and(parameters('deployGatewayInHub'), parameters('deployGatewayinOnPrem')), parameters('deploySiteToSite')), variables('isVwanHub'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-s2s-Hub-vWan-OnPrem-{1}', parameters('hubRgName'), parameters('location'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vwanGatewayName": "[if(and(and(parameters('deployHUB'), parameters('deployGatewayInHub')), variables('isVwanHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vpnGwName.value), createObject('value', 'none'))]",
          "vwanLinkBgpAsn": "[if(and(and(parameters('deployOnPrem'), parameters('deployGatewayinOnPrem')), parameters('onpremBgp')), createObject('value', reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremGwBgpAsn.value), createObject('value', 65515))]",
          "vwanLinkPublicIP": "[if(and(parameters('deployOnPrem'), parameters('deployGatewayinOnPrem')), createObject('value', reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremGatewayPublicIP.value), createObject('value', 'none'))]",
          "vwanVpnGwInfo": "[if(and(and(parameters('deployHUB'), parameters('deployGatewayInHub')), variables('isVwanHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vpnGwBgpIp.value), createObject('value', createArray()))]",
          "vwanLinkBgpPeeringAddress": "[if(and(and(and(parameters('deployOnPrem'), parameters('deployGatewayinOnPrem')), parameters('onpremBgp')), variables('isVwanHub')), createObject('value', reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremGwBgpPeeringAddress.value), createObject('value', 'none'))]",
          "vwanVpnSiteName": {
            "value": "OnPrem"
          },
          "vwanID": "[if(and(parameters('deployHUB'), variables('isVwanHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vWanID.value), createObject('value', 'none'))]",
          "vwanHubName": "[if(and(parameters('deployHUB'), variables('isVwanHub')), createObject('value', reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vwanHubName.value), createObject('value', 'none'))]",
          "OnPremVpnGwID": "[if(and(parameters('deployOnPrem'), parameters('deployGatewayinOnPrem')), createObject('value', reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremGatewayID.value), createObject('value', 'none'))]",
          "OnPremRgName": "[if(parameters('deployOnPrem'), createObject('value', parameters('onpremRgName')), createObject('value', 'none'))]",
          "HubRgName": "[if(parameters('deployHUB'), createObject('value', parameters('hubRgName')), createObject('value', 'none'))]",
          "tagsByResource": {
            "value": "[parameters('tagsByResource')]"
          },
          "deployFirewallInHub": {
            "value": "[and(parameters('deployFirewallInHub'), variables('isVwanHub'))]"
          },
          "sharedKey": "[if(parameters('deploySiteToSite'), createObject('value', parameters('sharedKey')), createObject('value', 'none'))]",
          "hubSubscriptionID": {
            "value": "[parameters('hubSubscriptionID')]"
          },
          "onPremSubscriptionID": {
            "value": "[parameters('onPremSubscriptionID')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "14824230150801270690"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "sharedKey": {
              "type": "securestring"
            },
            "OnPremRgName": {
              "type": "string"
            },
            "HubRgName": {
              "type": "string"
            },
            "vwanLinkBgpAsn": {
              "type": "int"
            },
            "vwanLinkBgpPeeringAddress": {
              "type": "string"
            },
            "vwanLinkPublicIP": {
              "type": "string"
            },
            "vwanVpnSiteName": {
              "type": "string"
            },
            "vwanID": {
              "type": "string"
            },
            "vwanHubName": {
              "type": "string"
            },
            "vwanGatewayName": {
              "type": "string"
            },
            "vwanVpnGwInfo": {
              "type": "array"
            },
            "tagsByResource": {
              "type": "object",
              "defaultValue": {}
            },
            "deployFirewallInHub": {
              "type": "bool"
            },
            "OnPremVpnGwID": {
              "type": "string"
            },
            "hubSubscriptionID": {
              "type": "string"
            },
            "onPremSubscriptionID": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "vwanVPNsites",
              "subscriptionId": "[parameters('hubSubscriptionID')]",
              "resourceGroup": "[parameters('HubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "linkBgpAsn": {
                    "value": "[parameters('vwanLinkBgpAsn')]"
                  },
                  "linkBgpPeeringAddress": {
                    "value": "[parameters('vwanLinkBgpPeeringAddress')]"
                  },
                  "linkPublicIP": {
                    "value": "[parameters('vwanLinkPublicIP')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vpnSiteName": {
                    "value": "[parameters('vwanVpnSiteName')]"
                  },
                  "vwanGatewayName": {
                    "value": "[parameters('vwanGatewayName')]"
                  },
                  "vwanHubName": {
                    "value": "[parameters('vwanHubName')]"
                  },
                  "vwanID": {
                    "value": "[parameters('vwanID')]"
                  },
                  "sharedKey": {
                    "value": "[parameters('sharedKey')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  },
                  "propagateToNoneRouteTable": {
                    "value": "[parameters('deployFirewallInHub')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "9409337316491767187"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "linkBgpAsn": {
                      "type": "int"
                    },
                    "linkBgpPeeringAddress": {
                      "type": "string"
                    },
                    "linkPublicIP": {
                      "type": "string"
                    },
                    "vpnSiteName": {
                      "type": "string"
                    },
                    "vwanID": {
                      "type": "string"
                    },
                    "vwanHubName": {
                      "type": "string"
                    },
                    "vwanGatewayName": {
                      "type": "string"
                    },
                    "sharedKey": {
                      "type": "securestring"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "propagateToNoneRouteTable": {
                      "type": "bool"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/vpnSites",
                      "apiVersion": "2022-11-01",
                      "name": "[parameters('vpnSiteName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "deviceProperties": {
                          "deviceModel": "LabBuilder",
                          "deviceVendor": "LabBuilder",
                          "linkSpeedInMbps": 1000
                        },
                        "addressSpace": {},
                        "vpnSiteLinks": [
                          {
                            "name": "[format('{0}-Link', parameters('vpnSiteName'))]",
                            "properties": {
                              "linkProperties": {
                                "linkProviderName": "Azure",
                                "linkSpeedInMbps": 1000
                              },
                              "ipAddress": "[parameters('linkPublicIP')]",
                              "bgpProperties": {
                                "asn": "[parameters('linkBgpAsn')]",
                                "bgpPeeringAddress": "[parameters('linkBgpPeeringAddress')]"
                              }
                            }
                          }
                        ],
                        "virtualWan": {
                          "id": "[parameters('vwanID')]"
                        }
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/vpnSites'), createObject())]"
                    },
                    {
                      "type": "Microsoft.Network/vpnGateways/vpnConnections",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}/Connection-{1}', parameters('vwanGatewayName'), parameters('vpnSiteName'))]",
                      "properties": {
                        "remoteVpnSite": {
                          "id": "[resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName'))]"
                        },
                        "routingConfiguration": {
                          "associatedRouteTable": {
                            "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vwanHubName'), 'defaultRouteTable')]"
                          },
                          "propagatedRouteTables": {
                            "ids": [
                              {
                                "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vwanHubName'), if(parameters('propagateToNoneRouteTable'), 'noneRouteTable', 'defaultRouteTable'))]"
                              }
                            ],
                            "labels": [
                              "[if(parameters('propagateToNoneRouteTable'), '', 'default')]"
                            ]
                          },
                          "vnetRoutes": {
                            "staticRoutes": []
                          }
                        },
                        "vpnLinkConnections": [
                          {
                            "name": "[format('{0}-Link', parameters('vpnSiteName'))]",
                            "properties": {
                              "vpnSiteLink": {
                                "id": "[reference(resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName')), '2022-11-01').vpnSiteLinks[0].id]"
                              },
                              "enableBgp": true,
                              "vpnConnectionProtocolType": "IKEv2",
                              "sharedKey": "[parameters('sharedKey')]",
                              "ipsecPolicies": [],
                              "enableRateLimiting": false,
                              "useLocalAzureIpAddress": false,
                              "usePolicyBasedTrafficSelectors": false,
                              "vpnLinkConnectionMode": "Default"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName'))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "copy": {
                "name": "vpnOnPrem",
                "count": "[length(parameters('vwanVpnGwInfo'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('vpnconnection{0}', add(copyIndex(), 1))]",
              "subscriptionId": "[parameters('onPremSubscriptionID')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "connectionName": {
                    "value": "[format('toVWAN{0}', add(copyIndex(), 1))]"
                  },
                  "enableBgp": {
                    "value": true
                  },
                  "LocalGatewayAddressPrefixes": {
                    "value": []
                  },
                  "LocalGatewayName": {
                    "value": "[format('VWAN{0}', add(copyIndex(), 1))]"
                  },
                  "BgpPeeringAddress": {
                    "value": "[parameters('vwanVpnGwInfo')[copyIndex()].defaultBgpIpAddresses[0]]"
                  },
                  "BgpAsn": {
                    "value": 65515
                  },
                  "LocalGatewayPublicIP": {
                    "value": "[parameters('vwanVpnGwInfo')[copyIndex()].tunnelIpAddresses[0]]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "sharedKey": {
                    "value": "[parameters('sharedKey')]"
                  },
                  "VpnGatewayID": {
                    "value": "[parameters('OnPremVpnGwID')]"
                  },
                  "tagsByResource": {
                    "value": "[parameters('tagsByResource')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.29.47.4906",
                      "templateHash": "359380636479192162"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "LocalGatewayName": {
                      "type": "string"
                    },
                    "LocalGatewayPublicIP": {
                      "type": "string"
                    },
                    "LocalGatewayAddressPrefixes": {
                      "type": "array"
                    },
                    "VpnGatewayID": {
                      "type": "string"
                    },
                    "connectionName": {
                      "type": "string"
                    },
                    "sharedKey": {
                      "type": "securestring"
                    },
                    "tagsByResource": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "enableBgp": {
                      "type": "bool"
                    },
                    "BgpAsn": {
                      "type": "int"
                    },
                    "BgpPeeringAddress": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/localNetworkGateways",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('LocalGatewayName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "gatewayIpAddress": "[parameters('LocalGatewayPublicIP')]",
                        "bgpSettings": "[if(parameters('enableBgp'), createObject('asn', parameters('BgpAsn'), 'bgpPeeringAddress', parameters('BgpPeeringAddress')), null())]",
                        "localNetworkAddressSpace": "[if(parameters('enableBgp'), createObject(), createObject('addressPrefixes', parameters('LocalGatewayAddressPrefixes')))]"
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/localNetworkGateways'), createObject())]"
                    },
                    {
                      "type": "Microsoft.Network/connections",
                      "apiVersion": "2023-06-01",
                      "name": "[parameters('connectionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "connectionType": "IPsec",
                        "connectionMode": "Default",
                        "connectionProtocol": "IKEv2",
                        "useLocalAzureIpAddress": false,
                        "usePolicyBasedTrafficSelectors": false,
                        "enableBgp": "[parameters('enableBgp')]",
                        "sharedKey": "[parameters('sharedKey')]",
                        "virtualNetworkGateway1": {
                          "id": "[parameters('VpnGatewayID')]",
                          "properties": {}
                        },
                        "localNetworkGateway2": {
                          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]",
                          "properties": {}
                        }
                      },
                      "tags": "[coalesce(tryGet(parameters('tagsByResource'), 'Microsoft.Network/connections'), createObject())]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location')))]",
        "[subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location')))]"
      ]
    }
  ],
  "outputs": {
    "VNET_AzFwPrivateIp": {
      "type": "string",
      "value": "[if(and(and(parameters('deployFirewallInHub'), parameters('deployHUB')), variables('isVnetHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.azFwIp.value, 'none')]"
    },
    "VWAN_AzFwPublicIp": {
      "type": "array",
      "value": "[if(and(and(parameters('deployFirewallInHub'), parameters('deployHUB')), variables('isVwanHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vWanFwPublicIP.value, createArray())]"
    },
    "HubVnetID": {
      "type": "string",
      "value": "[if(and(parameters('deployHUB'), variables('isVnetHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.hubVnetID.value, 'none')]"
    },
    "HubVnetAddressSpace": {
      "type": "array",
      "value": "[if(and(parameters('deployHUB'), variables('isVnetHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.hubVnetAddressSpace.value, createArray())]"
    },
    "HubGatewayPublicIP": {
      "type": "string",
      "value": "[if(and(parameters('deployGatewayInHub'), variables('isVnetHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.hubGatewayPublicIP.value, 'none')]"
    },
    "HubGatewayID": {
      "type": "string",
      "value": "[if(and(parameters('deployGatewayInHub'), variables('isVnetHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.hubGatewayID.value, 'none')]"
    },
    "HubBgpPeeringAddress": {
      "type": "string",
      "value": "[if(and(parameters('deployGatewayInHub'), variables('isVnetHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VNET', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.HubGwBgpPeeringAddress.value, 'none')]"
    },
    "vWanHubID": {
      "type": "string",
      "value": "[if(and(parameters('deployHUB'), variables('isVwanHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vWanHubID.value, 'none')]"
    },
    "vWanID": {
      "type": "string",
      "value": "[if(and(parameters('deployHUB'), variables('isVwanHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vWanID.value, 'none')]"
    },
    "vWanVpnGwID": {
      "type": "string",
      "value": "[if(and(and(parameters('deployHUB'), parameters('deployGatewayInHub')), variables('isVwanHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vWanVpnGwID.value, 'none')]"
    },
    "vWanVpnGwPip": {
      "type": "array",
      "value": "[if(and(and(parameters('deployHUB'), parameters('deployGatewayInHub')), variables('isVwanHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vWanVpnGwPip.value, createArray())]"
    },
    "vWanVpnBgpIp": {
      "type": "array",
      "value": "[if(and(and(parameters('deployHUB'), parameters('deployGatewayInHub')), variables('isVwanHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vpnGwBgpIp.value, createArray())]"
    },
    "vWanVpnBgpAsn": {
      "type": "int",
      "value": "[if(and(and(parameters('deployHUB'), parameters('deployGatewayInHub')), variables('isVwanHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vpnGwBgpAsn.value, 0)]"
    },
    "vWanHubAddressSpace": {
      "type": "string",
      "value": "[if(and(parameters('deployHUB'), variables('isVwanHub')), reference(subscriptionResourceId(parameters('hubSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}-VWAN', parameters('hubRgName'), parameters('location'))), '2022-09-01').outputs.vWanHubAddressSpace.value, 'none')]"
    },
    "OnPremVnetAddressSpace": {
      "type": "string",
      "value": "[if(parameters('deployOnPrem'), reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremAddressSpace.value, 'none')]"
    },
    "OnPremGatewayPublicIP": {
      "type": "string",
      "value": "[if(parameters('deployGatewayinOnPrem'), reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremGatewayPublicIP.value, 'none')]"
    },
    "OnPremGatewayID": {
      "type": "string",
      "value": "[if(parameters('deployGatewayinOnPrem'), reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremGatewayID.value, 'none')]"
    },
    "OnPremBgpPeeringAddress": {
      "type": "string",
      "value": "[if(parameters('deployGatewayinOnPrem'), reference(subscriptionResourceId(parameters('onPremSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}-{1}', parameters('onpremRgName'), parameters('location'))), '2022-09-01').outputs.OnPremGwBgpPeeringAddress.value, 'none')]"
    },
    "SpokeVnets": {
      "type": "array",
      "copy": {
        "count": "[length(range(0, parameters('amountOfSpokes')))]",
        "input": "[if(parameters('deploySpokes'), createObject('SpokeVnetId', reference(subscriptionResourceId(parameters('spokeSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location'))), '2022-09-01').outputs.spokeVnetID.value, 'SpokeVnetAddressSpace', reference(subscriptionResourceId(parameters('spokeSubscriptionID'), 'Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location'))), '2022-09-01').outputs.spokeVnetAddressSpace.value), 'none')]"
      }
    }
  }
}