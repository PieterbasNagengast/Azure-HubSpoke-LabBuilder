{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "11514344351427645083"
    }
  },
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Admin username for VM"
      }
    },
    "adminPassword": {
      "type": "secureString",
      "defaultValue": "",
      "metadata": {
        "description": "Admin Password for VM"
      }
    },
    "AddressSpace": {
      "type": "string",
      "defaultValue": "172.16.0.0/16",
      "metadata": {
        "description": "IP Address space used for VNETs in deployment. Only enter a /16 subnet. Default = 172.16.0.0/16"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Azure Region. Defualt = Deployment location"
      }
    },
    "deploySpokes": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Spoke VNETs"
      }
    },
    "spokeRgNamePrefix": {
      "type": "string",
      "defaultValue": "rg-spoke",
      "metadata": {
        "description": "Spoke resource group prefix name"
      }
    },
    "amountOfSpokes": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Amount of Spoke VNETs you want to deploy. Default = 2"
      }
    },
    "deployVMsInSpokes": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy VM in every Spoke VNET"
      }
    },
    "deployBastionInSpoke": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Bastion Host in every Spoke VNET"
      }
    },
    "deployHUB": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Hub VNET"
      }
    },
    "hubRgName": {
      "type": "string",
      "defaultValue": "rg-hub",
      "metadata": {
        "description": "Hub resource group pre-fix name"
      }
    },
    "deployBastionInHub": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Bastion Host in Hub VNET"
      }
    },
    "deployVMinHub": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy VM in Hub VNET"
      }
    },
    "deployGatewayInHub": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Virtual Network Gateway in Hub VNET"
      }
    },
    "deployFirewallInHub": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Azure Firewall in Hub VNET. includes deployment of custom route tables in Spokes and Hub VNETs"
      }
    },
    "AzureFirewallTier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Azure Firewall Tier: Standard or Premium"
      }
    },
    "deployFirewallrules": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Firewall policy Rule Collection group which allows spoke-to-spoke and internet traffic"
      }
    },
    "deployOnPrem": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Virtual Network Gateway in OnPrem"
      }
    },
    "onpremRgName": {
      "type": "string",
      "defaultValue": "rg-onprem",
      "metadata": {
        "description": "OnPrem Resource Group Name"
      }
    },
    "deployBastionInOnPrem": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Bastion Host in OnPrem VNET"
      }
    },
    "deployVMinOnPrem": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy VM in OnPrem VNET"
      }
    },
    "deployGatewayinOnPrem": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Virtual Network Gateway in OnPrem VNET"
      }
    },
    "deploySiteToSite": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy Site-to-Site VPN connection between OnPrem and Hub Gateways"
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "AllAddressSpaces",
        "count": "[length(range(0, add(parameters('amountOfSpokes'), 1)))]",
        "input": "[replace(parameters('AddressSpace'), '0.0/16', format('{0}.0/24', range(0, add(parameters('amountOfSpokes'), 1))[copyIndex('AllAddressSpaces')]))]"
      }
    ]
  },
  "resources": [
    {
      "condition": "[parameters('deployHUB')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-{1}', parameters('hubRgName'), parameters('location'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "deployBastionInHub": {
            "value": "[parameters('deployBastionInHub')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "AddressSpace": {
            "value": "[parameters('AddressSpace')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "deployVMinHub": {
            "value": "[parameters('deployVMinHub')]"
          },
          "deployFirewallInHub": {
            "value": "[parameters('deployFirewallInHub')]"
          },
          "AzureFirewallTier": {
            "value": "[parameters('AzureFirewallTier')]"
          },
          "hubRgName": {
            "value": "[parameters('hubRgName')]"
          },
          "deployFirewallrules": {
            "value": "[parameters('deployFirewallrules')]"
          },
          "deployGatewayInHub": {
            "value": "[parameters('deployGatewayInHub')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "10764843335244513328"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "AddressSpace": {
              "type": "string"
            },
            "deployBastionInHub": {
              "type": "bool"
            },
            "adminUsername": {
              "type": "string"
            },
            "adminPassword": {
              "type": "secureString"
            },
            "deployVMinHub": {
              "type": "bool"
            },
            "deployFirewallInHub": {
              "type": "bool"
            },
            "AzureFirewallTier": {
              "type": "string"
            },
            "hubRgName": {
              "type": "string"
            },
            "deployFirewallrules": {
              "type": "bool"
            },
            "deployGatewayInHub": {
              "type": "bool"
            }
          },
          "variables": {
            "vnetAddressSpace": "[replace(parameters('AddressSpace'), '/16', '/24')]",
            "defaultSubnetPrefix": "[replace(variables('vnetAddressSpace'), '/24', '/26')]",
            "firewallSubnetPrefix": "[replace(variables('vnetAddressSpace'), '0/24', '64/26')]",
            "bastionSubnetPrefix": "[replace(variables('vnetAddressSpace'), '0/24', '128/27')]",
            "gatewaySubnetPrefix": "[replace(variables('vnetAddressSpace'), '0/24', '160/27')]",
            "vmName": "VM-Hub",
            "nsgName": "NSG-Hub",
            "bastionName": "Bastion-Hub",
            "rtName": "RT-Hub",
            "hubVnetName": "VNET-Hub",
            "firewallName": "Firewall-Hub",
            "gatewayName": "Gateway-Hub"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('hubRgName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "hubvnet",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetAddressSpcae": {
                    "value": "[variables('vnetAddressSpace')]"
                  },
                  "nsgID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'nsg')).outputs.nsgID.value]"
                  },
                  "rtID": {
                    "value": "[if(parameters('deployFirewallInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable')).outputs.rtID.value, 'none')]"
                  },
                  "vnetname": {
                    "value": "[variables('hubVnetName')]"
                  },
                  "defaultSubnetPrefix": {
                    "value": "[variables('defaultSubnetPrefix')]"
                  },
                  "bastionSubnetPrefix": {
                    "value": "[variables('bastionSubnetPrefix')]"
                  },
                  "firewallSubnetPrefix": {
                    "value": "[variables('firewallSubnetPrefix')]"
                  },
                  "GatewaySubnetPrefix": {
                    "value": "[variables('gatewaySubnetPrefix')]"
                  },
                  "deployBastionSubnet": {
                    "value": "[parameters('deployBastionInHub')]"
                  },
                  "deployFirewallSubnet": {
                    "value": "[parameters('deployFirewallInHub')]"
                  },
                  "deployGatewaySubnet": {
                    "value": "[parameters('deployGatewayInHub')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "7878948175761898618"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vnetname": {
                      "type": "string"
                    },
                    "vnetAddressSpcae": {
                      "type": "string"
                    },
                    "defaultSubnetPrefix": {
                      "type": "string"
                    },
                    "bastionSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "firewallSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "GatewaySubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "nsgID": {
                      "type": "string"
                    },
                    "rtID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "deployBastionSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployFirewallSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployGatewaySubnet": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "variables": {
                    "defaultSubnet": [
                      {
                        "name": "default",
                        "properties": {
                          "addressPrefix": "[parameters('defaultSubnetPrefix')]",
                          "networkSecurityGroup": {
                            "id": "[parameters('nsgID')]"
                          },
                          "routeTable": "[if(equals(parameters('rtID'), 'none'), json('null'), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtID'))))]"
                        }
                      }
                    ],
                    "bastionSubnet": "[if(not(parameters('deployBastionSubnet')), createArray(), createArray(createObject('name', 'AzureBastionSubnet', 'properties', createObject('addressPrefix', parameters('bastionSubnetPrefix')))))]",
                    "firewallSubnet": "[if(not(parameters('deployFirewallSubnet')), createArray(), createArray(createObject('name', 'AzureFirewallSubnet', 'properties', createObject('addressPrefix', parameters('firewallSubnetPrefix')))))]",
                    "gatewaySubnet": "[if(not(parameters('deployGatewaySubnet')), createArray(), createArray(createObject('name', 'GatewaySubnet', 'properties', createObject('addressPrefix', parameters('GatewaySubnetPrefix')))))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('vnetname')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('vnetAddressSpcae')]"
                          ]
                        },
                        "subnets": "[concat(variables('defaultSubnet'), variables('bastionSubnet'), variables('firewallSubnet'), variables('gatewaySubnet'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "vnetName": {
                      "type": "string",
                      "value": "[parameters('vnetname')]"
                    },
                    "vnetID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))]"
                    },
                    "defaultSubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))).subnets[0].id]"
                    },
                    "bastionSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployBastionSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureBastionSubnet'), 'Not deployed')]"
                    },
                    "firewallSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployFirewallSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureFirewallSubnet'), 'Not deployed')]"
                    },
                    "gatewaySubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewaySubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'GatewaySubnet'), 'Not deployed')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'nsg')]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable')]"
              ]
            },
            {
              "condition": "[parameters('deployVMinHub')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "virtualMachine",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "adminPassword": {
                    "value": "[parameters('adminPassword')]"
                  },
                  "adminUsername": {
                    "value": "[parameters('adminUsername')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')).outputs.defaultSubnetID.value]"
                  },
                  "vmName": {
                    "value": "[variables('vmName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "1655614801925322928"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vmName": {
                      "type": "string"
                    },
                    "adminUsername": {
                      "type": "string"
                    },
                    "adminPassword": {
                      "type": "secureString"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "vmSize": {
                      "type": "string",
                      "defaultValue": "Standard_B2s"
                    },
                    "storageType": {
                      "type": "string",
                      "defaultValue": "StandardSSD_LRS"
                    },
                    "OSVersion": {
                      "type": "string",
                      "defaultValue": "2022-datacenter",
                      "allowedValues": [
                        "2022-datacenter",
                        "2019-datacenter",
                        "2016-datacenter",
                        "2012-R2-datacenter"
                      ]
                    }
                  },
                  "variables": {
                    "EnableICMPv4": "netsh advfirewall firewall add rule name=\"ICMP Allow incoming V4 echo request\" protocol=\"icmpv4:8,any\" dir=in action=allow"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2021-11-01",
                      "name": "[parameters('vmName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "osProfile": {
                          "computerName": "[parameters('vmName')]",
                          "adminUsername": "[parameters('adminUsername')]",
                          "adminPassword": "[parameters('adminPassword')]"
                        },
                        "storageProfile": {
                          "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "[parameters('OSVersion')]",
                            "version": "latest"
                          },
                          "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                              "storageAccountType": "[parameters('storageType')]"
                            },
                            "osType": "Windows"
                          }
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                            }
                          ]
                        },
                        "hardwareProfile": {
                          "vmSize": "[parameters('vmSize')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}-nic', parameters('vmName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "primary": true,
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('subnetID')]"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-runCommand', parameters('vmName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "runCommand": {
                            "value": "[variables('EnableICMPv4')]"
                          },
                          "vmName": {
                            "value": "[parameters('vmName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "13065007741233957351"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "runName": {
                              "type": "string",
                              "defaultValue": "RunCommand"
                            },
                            "runCommand": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/runCommands",
                              "apiVersion": "2021-11-01",
                              "name": "[format('{0}/{1}', parameters('vmName'), parameters('runName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "source": {
                                  "script": "[parameters('runCommand')]"
                                },
                                "timeoutInSeconds": 60
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "nsg",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "nsgName": {
                    "value": "[variables('nsgName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "1975823882649410244"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "nsgName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('nsgName')]",
                      "location": "[parameters('location')]"
                    }
                  ],
                  "outputs": {
                    "nsgID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]"
              ]
            },
            {
              "condition": "[parameters('deployBastionInHub')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "bastion",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetID": {
                    "value": "[if(parameters('deployBastionInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')).outputs.bastionSubnetID.value, '')]"
                  },
                  "bastionName": {
                    "value": "[variables('bastionName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "16427421364227691218"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "bastionName": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "bastionSku": {
                      "type": "string",
                      "defaultValue": "Basic"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/bastionHosts",
                      "apiVersion": "2021-03-01",
                      "name": "[parameters('bastionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "IpConf",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('subnetID')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                              }
                            }
                          }
                        ]
                      },
                      "sku": {
                        "name": "[parameters('bastionSku')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}-pip', parameters('bastionName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')]"
              ]
            },
            {
              "condition": "[parameters('deployFirewallInHub')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "hubFirewall",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "firewallName": {
                    "value": "[variables('firewallName')]"
                  },
                  "azfwsubnetid": {
                    "value": "[if(parameters('deployFirewallInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')).outputs.firewallSubnetID.value, '')]"
                  },
                  "azfwTier": {
                    "value": "[parameters('AzureFirewallTier')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "17732112070604624765"
                    }
                  },
                  "parameters": {
                    "firewallName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "azfwSKUname": {
                      "type": "string",
                      "defaultValue": "AZFW_VNet"
                    },
                    "azfwTier": {
                      "type": "string"
                    },
                    "azfwsubnetid": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "pipName": "[format('{0}-pip', parameters('firewallName'))]",
                    "firewallPolicyName": "[format('{0}-policy', parameters('firewallName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/azureFirewalls",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('firewallName')]",
                      "location": "[parameters('location')]",
                      "zones": [],
                      "properties": {
                        "sku": {
                          "name": "[parameters('azfwSKUname')]",
                          "tier": "[parameters('azfwTier')]"
                        },
                        "firewallPolicy": {
                          "id": "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
                        },
                        "ipConfigurations": [
                          {
                            "properties": {
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                              },
                              "subnet": {
                                "id": "[parameters('azfwsubnetid')]"
                              }
                            },
                            "name": "ipconfig1"
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",
                        "[resourceId('Microsoft.Network/firewallPolicies', variables('firewallPolicyName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/firewallPolicies",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('firewallPolicyName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "sku": {
                          "tier": "[parameters('azfwTier')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('pipName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      }
                    }
                  ],
                  "outputs": {
                    "azFwIP": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallName'))).ipConfigurations[0].properties.privateIPAddress]"
                    },
                    "azFwPolicyName": {
                      "type": "string",
                      "value": "[variables('firewallPolicyName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')]"
              ]
            },
            {
              "condition": "[and(parameters('deployFirewallrules'), parameters('deployFirewallInHub'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "firewallRules",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "azFwPolicyName": {
                    "value": "[if(and(parameters('deployFirewallInHub'), parameters('deployFirewallrules')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall')).outputs.azFwPolicyName.value, '')]"
                  },
                  "AddressSpace": {
                    "value": "[parameters('AddressSpace')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "2163297474746570044"
                    }
                  },
                  "parameters": {
                    "azFwPolicyName": {
                      "type": "string"
                    },
                    "ruleCollectiongroupName": {
                      "type": "string",
                      "defaultValue": "HubSpokeLabBuilderCollectionGroup"
                    },
                    "AddressSpace": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}/{1}', parameters('azFwPolicyName'), parameters('ruleCollectiongroupName'))]",
                      "properties": {
                        "priority": 400,
                        "ruleCollections": [
                          {
                            "name": "NetworkRules",
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "action": {
                              "type": "Allow"
                            },
                            "priority": 100,
                            "rules": [
                              {
                                "name": "AllowLocalTraffic",
                                "ruleType": "NetworkRule",
                                "sourceAddresses": [
                                  "[parameters('AddressSpace')]"
                                ],
                                "destinationAddresses": [
                                  "[parameters('AddressSpace')]"
                                ],
                                "ipProtocols": [
                                  "Any"
                                ],
                                "destinationPorts": [
                                  "*"
                                ]
                              }
                            ]
                          },
                          {
                            "name": "ApplicationRules",
                            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                            "action": {
                              "type": "Allow"
                            },
                            "priority": 200,
                            "rules": [
                              {
                                "name": "AllowHttpHttps",
                                "ruleType": "ApplicationRule",
                                "sourceAddresses": [
                                  "[parameters('AddressSpace')]"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [],
                                "terminateTLS": false,
                                "fqdnTags": [],
                                "webCategories": [],
                                "targetUrls": [],
                                "targetFqdns": [
                                  "*"
                                ],
                                "protocols": [
                                  {
                                    "protocolType": "Http",
                                    "port": 80
                                  },
                                  {
                                    "protocolType": "Https",
                                    "port": 443
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall')]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]"
              ]
            },
            {
              "condition": "[parameters('deployFirewallInHub')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "routeTable",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rtName": {
                    "value": "[variables('rtName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4477688202675157614"
                    }
                  },
                  "parameters": {
                    "rtName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "disableRouteProp": {
                      "type": "bool",
                      "defaultValue": true
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/routeTables",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('rtName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "disableBgpRoutePropagation": "[parameters('disableRouteProp')]"
                      }
                    }
                  ],
                  "outputs": {
                    "rtID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/routeTables', parameters('rtName'))]"
                    },
                    "rtName": {
                      "type": "string",
                      "value": "[parameters('rtName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]"
              ]
            },
            {
              "condition": "[parameters('deployFirewallInHub')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "Route",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "routeAddressPrefix": {
                    "value": "0.0.0.0/0"
                  },
                  "routeName": {
                    "value": "[if(parameters('deployFirewallInHub'), format('{0}/toInternet', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable')).outputs.rtName.value), 'dummy')]"
                  },
                  "routeNextHopIpAddress": {
                    "value": "[if(parameters('deployFirewallInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall')).outputs.azFwIP.value, '1.2.3.4')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "8096143721828499520"
                    }
                  },
                  "parameters": {
                    "routeName": {
                      "type": "string"
                    },
                    "routeNextHopType": {
                      "type": "string",
                      "defaultValue": "VirtualAppliance"
                    },
                    "routeAddressPrefix": {
                      "type": "string"
                    },
                    "routeNextHopIpAddress": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/routeTables/routes",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('routeName')]",
                      "properties": {
                        "nextHopType": "[parameters('routeNextHopType')]",
                        "addressPrefix": "[parameters('routeAddressPrefix')]",
                        "nextHopIpAddress": "[parameters('routeNextHopIpAddress')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall')]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'routeTable')]"
              ]
            },
            {
              "condition": "[parameters('deployGatewayInHub')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "Gateway",
              "resourceGroup": "[parameters('hubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vpnGatewayName": {
                    "value": "[variables('gatewayName')]"
                  },
                  "vpnGatewaySubnetID": {
                    "value": "[if(parameters('deployGatewayInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')).outputs.gatewaySubnetID.value, '')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9280406827714273371"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vpnGatewayName": {
                      "type": "string"
                    },
                    "vpnGatewaySubnetID": {
                      "type": "string"
                    },
                    "vpnGatewaySKU": {
                      "type": "string",
                      "defaultValue": "VpnGw1"
                    },
                    "vpnGatewayType": {
                      "type": "string",
                      "defaultValue": "Vpn"
                    },
                    "vpnGatewayVPNtype": {
                      "type": "string",
                      "defaultValue": "RouteBased"
                    },
                    "vpnGatewayGen": {
                      "type": "string",
                      "defaultValue": "Generation1"
                    }
                  },
                  "variables": {
                    "pipName": "[format('{0}-pip', parameters('vpnGatewayName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworkGateways",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('vpnGatewayName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "gatewayType": "[parameters('vpnGatewayType')]",
                        "vpnType": "[parameters('vpnGatewayVPNtype')]",
                        "enableBgp": false,
                        "sku": {
                          "name": "[parameters('vpnGatewaySKU')]",
                          "tier": "[parameters('vpnGatewaySKU')]"
                        },
                        "vpnGatewayGeneration": "[parameters('vpnGatewayGen')]",
                        "activeActive": false,
                        "ipConfigurations": [
                          {
                            "name": "ipConfig",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('vpnGatewaySubnetID')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                              }
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('pipName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      }
                    }
                  ],
                  "outputs": {
                    "vpnGwPublicIP": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))).ipAddress]"
                    },
                    "vpnGwID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('hubRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')]"
              ]
            }
          ],
          "outputs": {
            "hubVnetID": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')).outputs.vnetID.value]"
            },
            "azFwIp": {
              "type": "string",
              "value": "[if(parameters('deployFirewallInHub'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubFirewall')).outputs.azFwIP.value, '1.2.3.4')]"
            },
            "HubResourceGroupName": {
              "type": "string",
              "value": "[parameters('hubRgName')]"
            },
            "hubVnetName": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'hubvnet')).outputs.vnetName.value]"
            },
            "hubVnetAddressSpace": {
              "type": "string",
              "value": "[variables('vnetAddressSpace')]"
            },
            "hubGatewayPublicIP": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'Gateway')).outputs.vpnGwPublicIP.value]"
            },
            "hubGatewayID": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('hubRgName')), 'Microsoft.Resources/deployments', 'Gateway')).outputs.vpnGwID.value]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('deploySpokes')]",
      "copy": {
        "name": "spokeVnets",
        "count": "[length(range(1, parameters('amountOfSpokes')))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[copyIndex()], parameters('location'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "counter": {
            "value": "[range(1, parameters('amountOfSpokes'))[copyIndex()]]"
          },
          "AddressSpace": {
            "value": "[parameters('AddressSpace')]"
          },
          "deployBastionInSpoke": {
            "value": "[parameters('deployBastionInSpoke')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "deployVMsInSpokes": {
            "value": "[parameters('deployVMsInSpokes')]"
          },
          "deployFirewallInHub": {
            "value": "[parameters('deployFirewallInHub')]"
          },
          "AzureFirewallpip": {
            "value": "[if(parameters('deployHUB'), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))).outputs.azFwIp.value, 'Not deployed')]"
          },
          "HubDeployed": {
            "value": "[parameters('deployHUB')]"
          },
          "spokeRgNamePrefix": {
            "value": "[parameters('spokeRgNamePrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "15335830101738826689"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "AddressSpace": {
              "type": "string"
            },
            "counter": {
              "type": "int"
            },
            "deployBastionInSpoke": {
              "type": "bool"
            },
            "adminUsername": {
              "type": "string"
            },
            "adminPassword": {
              "type": "secureString"
            },
            "deployVMsInSpokes": {
              "type": "bool"
            },
            "deployFirewallInHub": {
              "type": "bool"
            },
            "AzureFirewallpip": {
              "type": "string"
            },
            "HubDeployed": {
              "type": "bool"
            },
            "spokeRgNamePrefix": {
              "type": "string"
            }
          },
          "variables": {
            "vnetName": "[format('VNET-Spoke{0}', parameters('counter'))]",
            "vmName": "[format('VM-Spoke{0}', parameters('counter'))]",
            "rtName": "[format('RT-Spoke{0}', parameters('counter'))]",
            "nsgName": "[format('NSG-Spoke{0}', parameters('counter'))]",
            "bastionName": "[format('Bastion-Spoke{0}', parameters('counter'))]",
            "vnetAddressSpace": "[replace(parameters('AddressSpace'), '0.0/16', format('{0}.0/24', parameters('counter')))]",
            "defaultSubnetPrefix": "[replace(variables('vnetAddressSpace'), '/24', '/26')]",
            "bastionSubnetPrefix": "[replace(variables('vnetAddressSpace'), '0/24', '128/27')]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('vnetName')]",
              "resourceGroup": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetAddressSpcae": {
                    "value": "[variables('vnetAddressSpace')]"
                  },
                  "nsgID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('nsgName'))).outputs.nsgID.value]"
                  },
                  "rtID": {
                    "value": "[if(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('rtName'))).outputs.rtID.value, 'none')]"
                  },
                  "vnetname": {
                    "value": "[variables('vnetName')]"
                  },
                  "defaultSubnetPrefix": {
                    "value": "[variables('defaultSubnetPrefix')]"
                  },
                  "bastionSubnetPrefix": {
                    "value": "[if(parameters('deployBastionInSpoke'), variables('bastionSubnetPrefix'), '')]"
                  },
                  "deployBastionSubnet": {
                    "value": "[parameters('deployBastionInSpoke')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "7878948175761898618"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vnetname": {
                      "type": "string"
                    },
                    "vnetAddressSpcae": {
                      "type": "string"
                    },
                    "defaultSubnetPrefix": {
                      "type": "string"
                    },
                    "bastionSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "firewallSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "GatewaySubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "nsgID": {
                      "type": "string"
                    },
                    "rtID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "deployBastionSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployFirewallSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployGatewaySubnet": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "variables": {
                    "defaultSubnet": [
                      {
                        "name": "default",
                        "properties": {
                          "addressPrefix": "[parameters('defaultSubnetPrefix')]",
                          "networkSecurityGroup": {
                            "id": "[parameters('nsgID')]"
                          },
                          "routeTable": "[if(equals(parameters('rtID'), 'none'), json('null'), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtID'))))]"
                        }
                      }
                    ],
                    "bastionSubnet": "[if(not(parameters('deployBastionSubnet')), createArray(), createArray(createObject('name', 'AzureBastionSubnet', 'properties', createObject('addressPrefix', parameters('bastionSubnetPrefix')))))]",
                    "firewallSubnet": "[if(not(parameters('deployFirewallSubnet')), createArray(), createArray(createObject('name', 'AzureFirewallSubnet', 'properties', createObject('addressPrefix', parameters('firewallSubnetPrefix')))))]",
                    "gatewaySubnet": "[if(not(parameters('deployGatewaySubnet')), createArray(), createArray(createObject('name', 'GatewaySubnet', 'properties', createObject('addressPrefix', parameters('GatewaySubnetPrefix')))))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('vnetname')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('vnetAddressSpcae')]"
                          ]
                        },
                        "subnets": "[concat(variables('defaultSubnet'), variables('bastionSubnet'), variables('firewallSubnet'), variables('gatewaySubnet'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "vnetName": {
                      "type": "string",
                      "value": "[parameters('vnetname')]"
                    },
                    "vnetID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))]"
                    },
                    "defaultSubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))).subnets[0].id]"
                    },
                    "bastionSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployBastionSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureBastionSubnet'), 'Not deployed')]"
                    },
                    "firewallSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployFirewallSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureFirewallSubnet'), 'Not deployed')]"
                    },
                    "gatewaySubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewaySubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'GatewaySubnet'), 'Not deployed')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('nsgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('rtName'))]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter')))]"
              ]
            },
            {
              "condition": "[parameters('deployVMsInSpokes')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('vmName')]",
              "resourceGroup": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "adminPassword": {
                    "value": "[parameters('adminPassword')]"
                  },
                  "adminUsername": {
                    "value": "[parameters('adminUsername')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('vnetName'))).outputs.defaultSubnetID.value]"
                  },
                  "vmName": {
                    "value": "[variables('vmName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "1655614801925322928"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vmName": {
                      "type": "string"
                    },
                    "adminUsername": {
                      "type": "string"
                    },
                    "adminPassword": {
                      "type": "secureString"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "vmSize": {
                      "type": "string",
                      "defaultValue": "Standard_B2s"
                    },
                    "storageType": {
                      "type": "string",
                      "defaultValue": "StandardSSD_LRS"
                    },
                    "OSVersion": {
                      "type": "string",
                      "defaultValue": "2022-datacenter",
                      "allowedValues": [
                        "2022-datacenter",
                        "2019-datacenter",
                        "2016-datacenter",
                        "2012-R2-datacenter"
                      ]
                    }
                  },
                  "variables": {
                    "EnableICMPv4": "netsh advfirewall firewall add rule name=\"ICMP Allow incoming V4 echo request\" protocol=\"icmpv4:8,any\" dir=in action=allow"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2021-11-01",
                      "name": "[parameters('vmName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "osProfile": {
                          "computerName": "[parameters('vmName')]",
                          "adminUsername": "[parameters('adminUsername')]",
                          "adminPassword": "[parameters('adminPassword')]"
                        },
                        "storageProfile": {
                          "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "[parameters('OSVersion')]",
                            "version": "latest"
                          },
                          "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                              "storageAccountType": "[parameters('storageType')]"
                            },
                            "osType": "Windows"
                          }
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                            }
                          ]
                        },
                        "hardwareProfile": {
                          "vmSize": "[parameters('vmSize')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}-nic', parameters('vmName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "primary": true,
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('subnetID')]"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-runCommand', parameters('vmName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "runCommand": {
                            "value": "[variables('EnableICMPv4')]"
                          },
                          "vmName": {
                            "value": "[parameters('vmName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "13065007741233957351"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "runName": {
                              "type": "string",
                              "defaultValue": "RunCommand"
                            },
                            "runCommand": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/runCommands",
                              "apiVersion": "2021-11-01",
                              "name": "[format('{0}/{1}', parameters('vmName'), parameters('runName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "source": {
                                  "script": "[parameters('runCommand')]"
                                },
                                "timeoutInSeconds": 60
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('vnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('nsgName')]",
              "resourceGroup": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "nsgName": {
                    "value": "[variables('nsgName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "1975823882649410244"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "nsgName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('nsgName')]",
                      "location": "[parameters('location')]"
                    }
                  ],
                  "outputs": {
                    "nsgID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter')))]"
              ]
            },
            {
              "condition": "[parameters('deployBastionInSpoke')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "bastion",
              "resourceGroup": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetID": {
                    "value": "[if(parameters('deployBastionInSpoke'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('vnetName'))).outputs.bastionSubnetID.value, '')]"
                  },
                  "bastionName": {
                    "value": "[variables('bastionName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "16427421364227691218"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "bastionName": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "bastionSku": {
                      "type": "string",
                      "defaultValue": "Basic"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/bastionHosts",
                      "apiVersion": "2021-03-01",
                      "name": "[parameters('bastionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "IpConf",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('subnetID')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                              }
                            }
                          }
                        ]
                      },
                      "sku": {
                        "name": "[parameters('bastionSku')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}-pip', parameters('bastionName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter')))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('vnetName'))]"
              ]
            },
            {
              "condition": "[and(parameters('deployFirewallInHub'), parameters('HubDeployed'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('rtName')]",
              "resourceGroup": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "rtName": {
                    "value": "[variables('rtName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "4477688202675157614"
                    }
                  },
                  "parameters": {
                    "rtName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "disableRouteProp": {
                      "type": "bool",
                      "defaultValue": true
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/routeTables",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('rtName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "disableBgpRoutePropagation": "[parameters('disableRouteProp')]"
                      }
                    }
                  ],
                  "outputs": {
                    "rtID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/routeTables', parameters('rtName'))]"
                    },
                    "rtName": {
                      "type": "string",
                      "value": "[parameters('rtName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter')))]"
              ]
            },
            {
              "condition": "[and(parameters('deployFirewallInHub'), parameters('HubDeployed'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "Route",
              "resourceGroup": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "routeAddressPrefix": {
                    "value": "0.0.0.0/0"
                  },
                  "routeName": {
                    "value": "[if(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), format('{0}/toInternet', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('rtName'))).outputs.rtName.value), 'none')]"
                  },
                  "routeNextHopIpAddress": {
                    "value": "[if(and(parameters('deployFirewallInHub'), parameters('HubDeployed')), parameters('AzureFirewallpip'), '1.2.3.4')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "8096143721828499520"
                    }
                  },
                  "parameters": {
                    "routeName": {
                      "type": "string"
                    },
                    "routeNextHopType": {
                      "type": "string",
                      "defaultValue": "VirtualAppliance"
                    },
                    "routeAddressPrefix": {
                      "type": "string"
                    },
                    "routeNextHopIpAddress": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/routeTables/routes",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('routeName')]",
                      "properties": {
                        "nextHopType": "[parameters('routeNextHopType')]",
                        "addressPrefix": "[parameters('routeAddressPrefix')]",
                        "nextHopIpAddress": "[parameters('routeNextHopIpAddress')]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('rtName'))]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter')))]"
              ]
            }
          ],
          "outputs": {
            "spokeVnetID": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('vnetName'))).outputs.vnetID.value]"
            },
            "spokeVnetAddressSpace": {
              "type": "string",
              "value": "[variables('vnetAddressSpace')]"
            },
            "spokeResourceGroupName": {
              "type": "string",
              "value": "[format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))]"
            },
            "spokeVnetName": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', parameters('spokeRgNamePrefix'), parameters('counter'))), 'Microsoft.Resources/deployments', variables('vnetName'))).outputs.vnetName.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))]"
      ]
    },
    {
      "condition": "[and(parameters('deployHUB'), parameters('deploySpokes'))]",
      "copy": {
        "name": "vnetPeerings",
        "count": "[length(range(0, parameters('amountOfSpokes')))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('VnetPeering{0}-{1}', range(0, parameters('amountOfSpokes'))[copyIndex()], parameters('location'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "HubResourceGroupName": {
            "value": "[if(and(parameters('deployHUB'), parameters('deploySpokes')), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))).outputs.HubResourceGroupName.value, 'No VNET peering')]"
          },
          "SpokeResourceGroupName": {
            "value": "[if(and(parameters('deployHUB'), parameters('deploySpokes')), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))).outputs.spokeResourceGroupName.value, 'No peering')]"
          },
          "HubVnetName": {
            "value": "[if(and(parameters('deployHUB'), parameters('deploySpokes')), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))).outputs.hubVnetName.value, 'No VNET peering')]"
          },
          "SpokeVnetID": {
            "value": "[if(and(parameters('deployHUB'), parameters('deploySpokes')), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))).outputs.spokeVnetID.value, 'No VNET peering')]"
          },
          "HubVnetID": {
            "value": "[if(and(parameters('deployHUB'), parameters('deploySpokes')), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))).outputs.hubVnetID.value, 'No VNET peering')]"
          },
          "SpokeVnetName": {
            "value": "[if(and(parameters('deployHUB'), parameters('deploySpokes')), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))).outputs.spokeVnetName.value, 'No VNET peering')]"
          },
          "counter": {
            "value": "[range(0, parameters('amountOfSpokes'))[copyIndex()]]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "5606406182668930178"
            }
          },
          "parameters": {
            "HubResourceGroupName": {
              "type": "string"
            },
            "SpokeResourceGroupName": {
              "type": "string"
            },
            "HubVnetName": {
              "type": "string"
            },
            "SpokeVnetName": {
              "type": "string"
            },
            "HubVnetID": {
              "type": "string"
            },
            "SpokeVnetID": {
              "type": "string"
            },
            "counter": {
              "type": "int"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('peeringToSpoke{0}', add(parameters('counter'), 1))]",
              "resourceGroup": "[parameters('HubResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "peeringName": {
                    "value": "[format('{0}/peeringToSpoke{1}', parameters('HubVnetName'), add(parameters('counter'), 1))]"
                  },
                  "remoteVnetID": {
                    "value": "[parameters('SpokeVnetID')]"
                  },
                  "useRemoteGateways": {
                    "value": false
                  },
                  "allowGatewayTransit": {
                    "value": false
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "7535118577974351196"
                    }
                  },
                  "parameters": {
                    "remoteVnetID": {
                      "type": "string"
                    },
                    "peeringName": {
                      "type": "string"
                    },
                    "allowForwardedTraffic": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowGatewayTransit": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowVirtualNetworkAccess": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "useRemoteGateways": {
                      "type": "bool",
                      "defaultValue": true
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('peeringName')]",
                      "properties": {
                        "remoteVirtualNetwork": {
                          "id": "[parameters('remoteVnetID')]"
                        },
                        "allowForwardedTraffic": "[parameters('allowForwardedTraffic')]",
                        "allowGatewayTransit": "[parameters('allowGatewayTransit')]",
                        "allowVirtualNetworkAccess": "[parameters('allowVirtualNetworkAccess')]",
                        "useRemoteGateways": "[parameters('useRemoteGateways')]"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('peeringToHub{0}', add(parameters('counter'), 1))]",
              "resourceGroup": "[parameters('SpokeResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "peeringName": {
                    "value": "[format('{0}/peeringToHub{1}', parameters('SpokeVnetName'), add(parameters('counter'), 1))]"
                  },
                  "remoteVnetID": {
                    "value": "[parameters('HubVnetID')]"
                  },
                  "useRemoteGateways": {
                    "value": false
                  },
                  "allowGatewayTransit": {
                    "value": false
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "7535118577974351196"
                    }
                  },
                  "parameters": {
                    "remoteVnetID": {
                      "type": "string"
                    },
                    "peeringName": {
                      "type": "string"
                    },
                    "allowForwardedTraffic": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowGatewayTransit": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "allowVirtualNetworkAccess": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "useRemoteGateways": {
                      "type": "bool",
                      "defaultValue": true
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('peeringName')]",
                      "properties": {
                        "remoteVirtualNetwork": {
                          "id": "[parameters('remoteVnetID')]"
                        },
                        "allowForwardedTraffic": "[parameters('allowForwardedTraffic')]",
                        "allowGatewayTransit": "[parameters('allowGatewayTransit')]",
                        "allowVirtualNetworkAccess": "[parameters('allowVirtualNetworkAccess')]",
                        "useRemoteGateways": "[parameters('useRemoteGateways')]"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))]"
      ]
    },
    {
      "condition": "[parameters('deployOnPrem')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('onpremRgName')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "AddressSpace": {
            "value": "[parameters('AddressSpace')]"
          },
          "deployBastionInOnPrem": {
            "value": "[parameters('deployBastionInOnPrem')]"
          },
          "deployGatewayInOnPrem": {
            "value": "[parameters('deployGatewayinOnPrem')]"
          },
          "deployVMsInOnPrem": {
            "value": "[parameters('deployVMinOnPrem')]"
          },
          "OnPremRgName": {
            "value": "[parameters('onpremRgName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "9425270663130722904"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "AddressSpace": {
              "type": "string"
            },
            "deployBastionInOnPrem": {
              "type": "bool",
              "defaultValue": false
            },
            "adminUsername": {
              "type": "string"
            },
            "adminPassword": {
              "type": "secureString"
            },
            "deployVMsInOnPrem": {
              "type": "bool",
              "defaultValue": false
            },
            "deployGatewayInOnPrem": {
              "type": "bool",
              "defaultValue": false
            },
            "OnPremRgName": {
              "type": "string"
            }
          },
          "variables": {
            "vnetName": "VNET-OnPrem",
            "vmName": "VM-OnPrem",
            "nsgName": "NSG-OnPrem",
            "bastionName": "Bastion-OnPrem",
            "gatewayName": "Gateway-OnPrem",
            "vnetAddressSpace": "[replace(parameters('AddressSpace'), '0.0/16', '255.0/24')]",
            "defaultSubnetPrefix": "[replace(variables('vnetAddressSpace'), '/24', '/26')]",
            "bastionSubnetPrefix": "[replace(variables('vnetAddressSpace'), '0/24', '128/27')]",
            "gatewaySubnetPrefix": "[replace(variables('vnetAddressSpace'), '0/24', '160/27')]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('OnPremRgName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('vnetName')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vnetAddressSpcae": {
                    "value": "[variables('vnetAddressSpace')]"
                  },
                  "nsgID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('nsgName'))).outputs.nsgID.value]"
                  },
                  "vnetname": {
                    "value": "[variables('vnetName')]"
                  },
                  "defaultSubnetPrefix": {
                    "value": "[variables('defaultSubnetPrefix')]"
                  },
                  "bastionSubnetPrefix": {
                    "value": "[if(parameters('deployBastionInOnPrem'), variables('bastionSubnetPrefix'), '')]"
                  },
                  "GatewaySubnetPrefix": {
                    "value": "[variables('gatewaySubnetPrefix')]"
                  },
                  "deployBastionSubnet": {
                    "value": "[parameters('deployBastionInOnPrem')]"
                  },
                  "deployGatewaySubnet": {
                    "value": true
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "7878948175761898618"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vnetname": {
                      "type": "string"
                    },
                    "vnetAddressSpcae": {
                      "type": "string"
                    },
                    "defaultSubnetPrefix": {
                      "type": "string"
                    },
                    "bastionSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "firewallSubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "GatewaySubnetPrefix": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "nsgID": {
                      "type": "string"
                    },
                    "rtID": {
                      "type": "string",
                      "defaultValue": "none"
                    },
                    "deployBastionSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployFirewallSubnet": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "deployGatewaySubnet": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "variables": {
                    "defaultSubnet": [
                      {
                        "name": "default",
                        "properties": {
                          "addressPrefix": "[parameters('defaultSubnetPrefix')]",
                          "networkSecurityGroup": {
                            "id": "[parameters('nsgID')]"
                          },
                          "routeTable": "[if(equals(parameters('rtID'), 'none'), json('null'), json(format('{{\"id\": \"{0}\"}}\"', parameters('rtID'))))]"
                        }
                      }
                    ],
                    "bastionSubnet": "[if(not(parameters('deployBastionSubnet')), createArray(), createArray(createObject('name', 'AzureBastionSubnet', 'properties', createObject('addressPrefix', parameters('bastionSubnetPrefix')))))]",
                    "firewallSubnet": "[if(not(parameters('deployFirewallSubnet')), createArray(), createArray(createObject('name', 'AzureFirewallSubnet', 'properties', createObject('addressPrefix', parameters('firewallSubnetPrefix')))))]",
                    "gatewaySubnet": "[if(not(parameters('deployGatewaySubnet')), createArray(), createArray(createObject('name', 'GatewaySubnet', 'properties', createObject('addressPrefix', parameters('GatewaySubnetPrefix')))))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('vnetname')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('vnetAddressSpcae')]"
                          ]
                        },
                        "subnets": "[concat(variables('defaultSubnet'), variables('bastionSubnet'), variables('firewallSubnet'), variables('gatewaySubnet'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "vnetName": {
                      "type": "string",
                      "value": "[parameters('vnetname')]"
                    },
                    "vnetID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))]"
                    },
                    "defaultSubnetID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetname'))).subnets[0].id]"
                    },
                    "bastionSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployBastionSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureBastionSubnet'), 'Not deployed')]"
                    },
                    "firewallSubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployFirewallSubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'AzureFirewallSubnet'), 'Not deployed')]"
                    },
                    "gatewaySubnetID": {
                      "type": "string",
                      "value": "[if(parameters('deployGatewaySubnet'), resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('vnetname'), 'GatewaySubnet'), 'Not deployed')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('nsgName'))]",
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('OnPremRgName'))]"
              ]
            },
            {
              "condition": "[parameters('deployVMsInOnPrem')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('vmName')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "adminPassword": {
                    "value": "[parameters('adminPassword')]"
                  },
                  "adminUsername": {
                    "value": "[parameters('adminUsername')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetID": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))).outputs.defaultSubnetID.value]"
                  },
                  "vmName": {
                    "value": "[variables('vmName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "1655614801925322928"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vmName": {
                      "type": "string"
                    },
                    "adminUsername": {
                      "type": "string"
                    },
                    "adminPassword": {
                      "type": "secureString"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "vmSize": {
                      "type": "string",
                      "defaultValue": "Standard_B2s"
                    },
                    "storageType": {
                      "type": "string",
                      "defaultValue": "StandardSSD_LRS"
                    },
                    "OSVersion": {
                      "type": "string",
                      "defaultValue": "2022-datacenter",
                      "allowedValues": [
                        "2022-datacenter",
                        "2019-datacenter",
                        "2016-datacenter",
                        "2012-R2-datacenter"
                      ]
                    }
                  },
                  "variables": {
                    "EnableICMPv4": "netsh advfirewall firewall add rule name=\"ICMP Allow incoming V4 echo request\" protocol=\"icmpv4:8,any\" dir=in action=allow"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2021-11-01",
                      "name": "[parameters('vmName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "osProfile": {
                          "computerName": "[parameters('vmName')]",
                          "adminUsername": "[parameters('adminUsername')]",
                          "adminPassword": "[parameters('adminPassword')]"
                        },
                        "storageProfile": {
                          "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "[parameters('OSVersion')]",
                            "version": "latest"
                          },
                          "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                              "storageAccountType": "[parameters('storageType')]"
                            },
                            "osType": "Windows"
                          }
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                            }
                          ]
                        },
                        "hardwareProfile": {
                          "vmSize": "[parameters('vmSize')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}-nic', parameters('vmName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "primary": true,
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('subnetID')]"
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-runCommand', parameters('vmName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "runCommand": {
                            "value": "[variables('EnableICMPv4')]"
                          },
                          "vmName": {
                            "value": "[parameters('vmName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "13065007741233957351"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "runName": {
                              "type": "string",
                              "defaultValue": "RunCommand"
                            },
                            "runCommand": {
                              "type": "string"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines/runCommands",
                              "apiVersion": "2021-11-01",
                              "name": "[format('{0}/{1}', parameters('vmName'), parameters('runName'))]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "source": {
                                  "script": "[parameters('runCommand')]"
                                },
                                "timeoutInSeconds": 60
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('OnPremRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('nsgName')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "nsgName": {
                    "value": "[variables('nsgName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "1975823882649410244"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "nsgName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('nsgName')]",
                      "location": "[parameters('location')]"
                    }
                  ],
                  "outputs": {
                    "nsgID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('OnPremRgName'))]"
              ]
            },
            {
              "condition": "[parameters('deployBastionInOnPrem')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[variables('bastionName')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetID": {
                    "value": "[if(parameters('deployBastionInOnPrem'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))).outputs.bastionSubnetID.value, '')]"
                  },
                  "bastionName": {
                    "value": "[variables('bastionName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "16427421364227691218"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "bastionName": {
                      "type": "string"
                    },
                    "subnetID": {
                      "type": "string"
                    },
                    "bastionSku": {
                      "type": "string",
                      "defaultValue": "Basic"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/bastionHosts",
                      "apiVersion": "2021-03-01",
                      "name": "[parameters('bastionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "IpConf",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('subnetID')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                              }
                            }
                          }
                        ]
                      },
                      "sku": {
                        "name": "[parameters('bastionSku')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('bastionName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2021-05-01",
                      "name": "[format('{0}-pip', parameters('bastionName'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('OnPremRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))]"
              ]
            },
            {
              "condition": "[parameters('deployGatewayInOnPrem')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "Gateway",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "vpnGatewayName": {
                    "value": "[variables('gatewayName')]"
                  },
                  "vpnGatewaySubnetID": {
                    "value": "[if(parameters('deployGatewayInOnPrem'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))).outputs.gatewaySubnetID.value, '')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9280406827714273371"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "vpnGatewayName": {
                      "type": "string"
                    },
                    "vpnGatewaySubnetID": {
                      "type": "string"
                    },
                    "vpnGatewaySKU": {
                      "type": "string",
                      "defaultValue": "VpnGw1"
                    },
                    "vpnGatewayType": {
                      "type": "string",
                      "defaultValue": "Vpn"
                    },
                    "vpnGatewayVPNtype": {
                      "type": "string",
                      "defaultValue": "RouteBased"
                    },
                    "vpnGatewayGen": {
                      "type": "string",
                      "defaultValue": "Generation1"
                    }
                  },
                  "variables": {
                    "pipName": "[format('{0}-pip', parameters('vpnGatewayName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworkGateways",
                      "apiVersion": "2021-05-01",
                      "name": "[parameters('vpnGatewayName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "gatewayType": "[parameters('vpnGatewayType')]",
                        "vpnType": "[parameters('vpnGatewayVPNtype')]",
                        "enableBgp": false,
                        "sku": {
                          "name": "[parameters('vpnGatewaySKU')]",
                          "tier": "[parameters('vpnGatewaySKU')]"
                        },
                        "vpnGatewayGeneration": "[parameters('vpnGatewayGen')]",
                        "activeActive": false,
                        "ipConfigurations": [
                          {
                            "name": "ipConfig",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('vpnGatewaySubnetID')]"
                              },
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                              }
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2021-05-01",
                      "name": "[variables('pipName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static"
                      },
                      "sku": {
                        "tier": "Regional",
                        "name": "Standard"
                      }
                    }
                  ],
                  "outputs": {
                    "vpnGwPublicIP": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))).ipAddress]"
                    },
                    "vpnGwID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGatewayName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('OnPremRgName'))]",
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', variables('vnetName'))]"
              ]
            }
          ],
          "outputs": {
            "OnPremGatewayPublicIP": {
              "type": "string",
              "value": "[if(parameters('deployGatewayInOnPrem'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', 'Gateway')).outputs.vpnGwPublicIP.value, 'none')]"
            },
            "OnPremGatewayID": {
              "type": "string",
              "value": "[if(parameters('deployGatewayInOnPrem'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('OnPremRgName')), 'Microsoft.Resources/deployments', 'Gateway')).outputs.vpnGwID.value, 'none')]"
            },
            "OnPremAddressSpace": {
              "type": "string",
              "value": "[variables('vnetAddressSpace')]"
            }
          }
        }
      }
    },
    {
      "condition": "[and(and(parameters('deployGatewayInHub'), parameters('deployGatewayinOnPrem')), parameters('deploySiteToSite'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "s2s-Hub-OnPrem",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "HubRgName": {
            "value": "[if(parameters('deployHUB'), parameters('hubRgName'), 'none')]"
          },
          "HubGatewayID": {
            "value": "[if(parameters('deployGatewayInHub'), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))).outputs.hubGatewayID.value, 'none')]"
          },
          "HubGatewayPublicIP": {
            "value": "[if(parameters('deployGatewayInHub'), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))).outputs.hubGatewayPublicIP.value, 'none')]"
          },
          "HubAddressPrefixes": {
            "value": "[if(parameters('deployHUB'), variables('AllAddressSpaces'), createArray())]"
          },
          "HubLocalGatewayName": {
            "value": "[if(parameters('deploySiteToSite'), 'LocalGateway-Hub', 'none')]"
          },
          "OnPremRgName": {
            "value": "[if(parameters('deployOnPrem'), parameters('onpremRgName'), 'none')]"
          },
          "OnPremGatewayID": {
            "value": "[if(parameters('deployGatewayinOnPrem'), reference(subscriptionResourceId('Microsoft.Resources/deployments', parameters('onpremRgName'))).outputs.OnPremGatewayID.value, 'none')]"
          },
          "OnPremGatewayPublicIP": {
            "value": "[if(parameters('deployGatewayinOnPrem'), reference(subscriptionResourceId('Microsoft.Resources/deployments', parameters('onpremRgName'))).outputs.OnPremGatewayPublicIP.value, 'none')]"
          },
          "OnPremAddressPrefixes": {
            "value": "[if(parameters('deployOnPrem'), array(reference(subscriptionResourceId('Microsoft.Resources/deployments', parameters('onpremRgName'))).outputs.OnPremAddressSpace.value), createArray())]"
          },
          "OnPremLocalGatewayName": {
            "value": "[if(parameters('deploySiteToSite'), 'LocalGateway-OnPrem', 'none')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "6377951166366811825"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "sharedKey": {
              "type": "secureString",
              "defaultValue": "[uniqueString(newGuid())]"
            },
            "OnPremGatewayID": {
              "type": "string"
            },
            "OnPremRgName": {
              "type": "string"
            },
            "HubGatewayPublicIP": {
              "type": "string"
            },
            "HubLocalGatewayName": {
              "type": "string"
            },
            "HubAddressPrefixes": {
              "type": "array"
            },
            "HubGatewayID": {
              "type": "string"
            },
            "HubRgName": {
              "type": "string"
            },
            "OnPremGatewayPublicIP": {
              "type": "string"
            },
            "OnPremLocalGatewayName": {
              "type": "string"
            },
            "OnPremAddressPrefixes": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[parameters('HubLocalGatewayName')]",
              "resourceGroup": "[parameters('OnPremRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "LocalGatewayAddressPrefixes": {
                    "value": "[parameters('HubAddressPrefixes')]"
                  },
                  "LocalGatewayName": {
                    "value": "[parameters('HubLocalGatewayName')]"
                  },
                  "LocalGatewayPublicIP": {
                    "value": "[parameters('HubGatewayPublicIP')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "connectionName": {
                    "value": "VPNtoHub"
                  },
                  "sharedKey": {
                    "value": "[parameters('sharedKey')]"
                  },
                  "VpnGatewayID": {
                    "value": "[parameters('OnPremGatewayID')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "17820892086485655081"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "LocalGatewayName": {
                      "type": "string"
                    },
                    "LocalGatewayPublicIP": {
                      "type": "string"
                    },
                    "LocalGatewayAddressPrefixes": {
                      "type": "array"
                    },
                    "VpnGatewayID": {
                      "type": "string"
                    },
                    "connectionName": {
                      "type": "string"
                    },
                    "sharedKey": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/localNetworkGateways",
                      "apiVersion": "2021-08-01",
                      "name": "[parameters('LocalGatewayName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "gatewayIpAddress": "[parameters('LocalGatewayPublicIP')]",
                        "localNetworkAddressSpace": {
                          "addressPrefixes": "[parameters('LocalGatewayAddressPrefixes')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/connections",
                      "apiVersion": "2021-08-01",
                      "name": "[parameters('connectionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "connectionType": "IPsec",
                        "connectionMode": "Default",
                        "connectionProtocol": "IKEv2",
                        "useLocalAzureIpAddress": false,
                        "usePolicyBasedTrafficSelectors": false,
                        "sharedKey": "[parameters('sharedKey')]",
                        "virtualNetworkGateway1": {
                          "id": "[parameters('VpnGatewayID')]"
                        },
                        "localNetworkGateway2": {
                          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[parameters('OnPremLocalGatewayName')]",
              "resourceGroup": "[parameters('HubRgName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "LocalGatewayAddressPrefixes": {
                    "value": "[parameters('OnPremAddressPrefixes')]"
                  },
                  "LocalGatewayName": {
                    "value": "[parameters('OnPremLocalGatewayName')]"
                  },
                  "LocalGatewayPublicIP": {
                    "value": "[parameters('OnPremGatewayPublicIP')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "connectionName": {
                    "value": "VPNtoOnPrem"
                  },
                  "sharedKey": {
                    "value": "[parameters('sharedKey')]"
                  },
                  "VpnGatewayID": {
                    "value": "[parameters('HubGatewayID')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "17820892086485655081"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "LocalGatewayName": {
                      "type": "string"
                    },
                    "LocalGatewayPublicIP": {
                      "type": "string"
                    },
                    "LocalGatewayAddressPrefixes": {
                      "type": "array"
                    },
                    "VpnGatewayID": {
                      "type": "string"
                    },
                    "connectionName": {
                      "type": "string"
                    },
                    "sharedKey": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/localNetworkGateways",
                      "apiVersion": "2021-08-01",
                      "name": "[parameters('LocalGatewayName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "gatewayIpAddress": "[parameters('LocalGatewayPublicIP')]",
                        "localNetworkAddressSpace": {
                          "addressPrefixes": "[parameters('LocalGatewayAddressPrefixes')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/connections",
                      "apiVersion": "2021-08-01",
                      "name": "[parameters('connectionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "connectionType": "IPsec",
                        "connectionMode": "Default",
                        "connectionProtocol": "IKEv2",
                        "useLocalAzureIpAddress": false,
                        "usePolicyBasedTrafficSelectors": false,
                        "sharedKey": "[parameters('sharedKey')]",
                        "virtualNetworkGateway1": {
                          "id": "[parameters('VpnGatewayID')]"
                        },
                        "localNetworkGateway2": {
                          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/localNetworkGateways', parameters('LocalGatewayName'))]"
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', parameters('onpremRgName'))]"
      ]
    }
  ],
  "outputs": {
    "AzureFirewallpip": {
      "type": "string",
      "value": "[if(and(parameters('deployFirewallInHub'), parameters('deployHUB')), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))).outputs.azFwIp.value, 'none')]"
    },
    "HubVnetID": {
      "type": "string",
      "value": "[if(parameters('deployHUB'), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))).outputs.hubVnetID.value, 'none')]"
    },
    "HubVnetAddressSpace": {
      "type": "string",
      "value": "[if(parameters('deployHUB'), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))).outputs.hubVnetAddressSpace.value, 'none')]"
    },
    "HubGatewayPublicIP": {
      "type": "string",
      "value": "[if(parameters('deployGatewayInHub'), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))).outputs.hubGatewayPublicIP.value, 'none')]"
    },
    "HubGatewayID": {
      "type": "string",
      "value": "[if(parameters('deployGatewayInHub'), reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}-{1}', parameters('hubRgName'), parameters('location')))).outputs.hubGatewayID.value, 'none')]"
    },
    "OnPremVnetAddressSpace": {
      "type": "string",
      "value": "[if(parameters('deployOnPrem'), reference(subscriptionResourceId('Microsoft.Resources/deployments', parameters('onpremRgName'))).outputs.OnPremAddressSpace.value, 'none')]"
    },
    "OnPremGatewayPublicIP": {
      "type": "string",
      "value": "[if(parameters('deployGatewayinOnPrem'), reference(subscriptionResourceId('Microsoft.Resources/deployments', parameters('onpremRgName'))).outputs.OnPremGatewayPublicIP.value, 'none')]"
    },
    "OnPremGatewayID": {
      "type": "string",
      "value": "[if(parameters('deployGatewayinOnPrem'), reference(subscriptionResourceId('Microsoft.Resources/deployments', parameters('onpremRgName'))).outputs.OnPremGatewayID.value, 'none')]"
    },
    "SpokeVnets": {
      "type": "array",
      "copy": {
        "count": "[length(range(0, parameters('amountOfSpokes')))]",
        "input": "[if(parameters('deploySpokes'), createObject('SpokeVnetId', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))).outputs.spokeVnetID.value, 'SpokeVnetAddressSpace', reference(subscriptionResourceId('Microsoft.Resources/deployments', format('{0}{1}-{2}', parameters('spokeRgNamePrefix'), range(1, parameters('amountOfSpokes'))[range(0, parameters('amountOfSpokes'))[copyIndex()]], parameters('location')))).outputs.spokeVnetAddressSpace.value), 'none')]"
      }
    }
  }
}